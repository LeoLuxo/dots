From eb601e9b362eb66f48c45e710b6eade80af97df9 Mon Sep 17 00:00:00 2001
From: Tuxinal <24763016+tuxinal@users.noreply.github.com>
Date: Sun, 7 Jan 2024 15:56:07 +0330
Subject: [PATCH 01/31] Add global shortcuts

---
 src/main/ipc.ts                  | 26 +++++++++++++++++-
 src/preload/VesktopNative.ts     |  4 +++
 src/renderer/index.ts            |  2 ++
 src/renderer/patches/index.ts    |  1 +
 src/renderer/patches/keybinds.ts | 45 ++++++++++++++++++++++++++++++++
 src/shared/IpcEvents.ts          |  4 ++-
 6 files changed, 80 insertions(+), 2 deletions(-)
 create mode 100644 src/renderer/patches/keybinds.ts

diff --git a/src/main/ipc.ts b/src/main/ipc.ts
index 4fa662c3..fb9bc6f6 100644
--- a/src/main/ipc.ts
+++ b/src/main/ipc.ts
@@ -7,7 +7,17 @@
 if (process.platform === "linux") import("./venmic");
 
 import { execFile } from "child_process";
-import { app, BrowserWindow, clipboard, dialog, nativeImage, RelaunchOptions, session, shell } from "electron";
+import {
+    app,
+    BrowserWindow,
+    clipboard,
+    dialog,
+    globalShortcut,
+    nativeImage,
+    RelaunchOptions,
+    session,
+    shell
+} from "electron";
 import { mkdirSync, readFileSync, watch } from "fs";
 import { open, readFile } from "fs/promises";
 import { release } from "os";
@@ -135,6 +145,20 @@ handle(IpcEvents.CLIPBOARD_COPY_IMAGE, async (_, buf: ArrayBuffer, src: string)
     });
 });
 
+const registered_keybinds = {};
+
+handle(IpcEvents.KEYBIND_REGISTER, (_, id: string, shortcut: string) => {
+    globalShortcut.register(shortcut, () => {
+        // false here implies `keyup`
+        // electron's global shortcut system doesn't really register keyup or down as far as i can tell
+        mainWin.webContents.executeJavaScript(`Vesktop.keybindCallbacks["${id}"](false)`);
+    });
+    registered_keybinds[id] = shortcut;
+});
+handle(IpcEvents.KEYBIND_UNREGISTER, (_, id: string) => {
+    globalShortcut.unregister(registered_keybinds[id]);
+});
+
 function readCss() {
     return readFile(VENCORD_QUICKCSS_FILE, "utf-8").catch(() => "");
 }
diff --git a/src/preload/VesktopNative.ts b/src/preload/VesktopNative.ts
index 7a8b9775..3771bca6 100644
--- a/src/preload/VesktopNative.ts
+++ b/src/preload/VesktopNative.ts
@@ -78,5 +78,9 @@ export const VesktopNative = {
     clipboard: {
         copyImage: (imageBuffer: Uint8Array, imageSrc: string) =>
             invoke<void>(IpcEvents.CLIPBOARD_COPY_IMAGE, imageBuffer, imageSrc)
+    },
+    keybind: {
+        register: (id: string, shortcut: string) => invoke<void>(IpcEvents.KEYBIND_REGISTER, id, shortcut),
+        uregister: (id: string) => invoke<void>(IpcEvents.KEYBIND_UNREGISTER, id)
     }
 };
diff --git a/src/renderer/index.ts b/src/renderer/index.ts
index e8ad31ca..879c2e85 100644
--- a/src/renderer/index.ts
+++ b/src/renderer/index.ts
@@ -21,6 +21,8 @@ export { Settings };
 
 const InviteActions = findByPropsLazy("resolveInvite");
 
+export const keybindCallbacks: { [id: string]: Function } = {};
+
 export async function openInviteModal(code: string) {
     const { invite } = await InviteActions.resolveInvite(code, "Desktop Modal");
     if (!invite) return false;
diff --git a/src/renderer/patches/index.ts b/src/renderer/patches/index.ts
index aabff3e0..ee419043 100644
--- a/src/renderer/patches/index.ts
+++ b/src/renderer/patches/index.ts
@@ -12,3 +12,4 @@ import "./hideVenmicInput";
 import "./screenShareFixes";
 import "./spellCheck";
 import "./windowsTitleBar";
+import "./keybinds";
diff --git a/src/renderer/patches/keybinds.ts b/src/renderer/patches/keybinds.ts
new file mode 100644
index 00000000..209b579e
--- /dev/null
+++ b/src/renderer/patches/keybinds.ts
@@ -0,0 +1,45 @@
+/*
+ * SPDX-License-Identifier: GPL-3.0
+ * Vesktop, a desktop app aiming to give you a snappier Discord Experience
+ * Copyright (c) 2023 Vendicated and Vencord contributors
+ */
+
+import { keybindCallbacks } from "renderer";
+
+import { addPatch } from "./shared";
+
+addPatch({
+    patches: [
+        {
+            find: ".default.Messages.KEYBINDS,children:",
+            replacement: {
+                match: /.\.isPlatformEmbedded/,
+                replace: "true"
+            }
+        },
+        {
+            find: "[kb store] KeybindStore",
+            replacement: {
+                match: /(inputEventRegister\(parseInt\((.{1,2})\),(.{1,2}),(.{1,2}),(.{1,2})\);else\{)([^;]*;[^;]*;.{1,2}\.keyup&&.{1,2}\.bindGlobal\(\(0,(.{1,2}\.toString)\))/,
+                replace: "$1$self.registerKeybind($2,$3,$4,$7);return;$6"
+            }
+        },
+        {
+            find: "[kb store] KeybindStore",
+            replacement: {
+                // WHY IS THE RADIX SPEICIFIED
+                match: /(inputEventUnregister\(parseInt\((.{1,2}),10\)\);else\{)/,
+                replace: "$1$self.unregisterKeybind($2);return;"
+            }
+        }
+    ],
+
+    registerKeybind: function (id, shortcut, callback, toString) {
+        keybindCallbacks[id] = callback;
+        VesktopNative.keybind.register(id, toString(shortcut));
+    },
+    unregisterKeybind: function (id) {
+        delete keybindCallbacks[id];
+        VesktopNative.keybind.uregister(id);
+    }
+});
diff --git a/src/shared/IpcEvents.ts b/src/shared/IpcEvents.ts
index 51d2a281..62ea94c3 100644
--- a/src/shared/IpcEvents.ts
+++ b/src/shared/IpcEvents.ts
@@ -50,5 +50,7 @@ export const enum IpcEvents {
 
     ARRPC_ACTIVITY = "VCD_ARRPC_ACTIVITY",
 
-    CLIPBOARD_COPY_IMAGE = "VCD_CLIPBOARD_COPY_IMAGE"
+    CLIPBOARD_COPY_IMAGE = "VCD_CLIPBOARD_COPY_IMAGE",
+    KEYBIND_REGISTER = "VCD_KEYBIND_REGISTER",
+    KEYBIND_UNREGISTER = "VCD_KEYBIND_UNREGISTER"
 }

From 6518621eaa7cedaa041e29a4d46fdfc538b8bc02 Mon Sep 17 00:00:00 2001
From: Tuxinal <24763016+tuxinal@users.noreply.github.com>
Date: Sun, 7 Jan 2024 18:26:54 +0330
Subject: [PATCH 02/31] Minimize regex convert id to number enable desktop only
 shortcut actions

---
 src/main/ipc.ts                  |  6 ++---
 src/preload/VesktopNative.ts     |  5 ++--
 src/renderer/index.ts            |  2 +-
 src/renderer/patches/keybinds.ts | 46 +++++++++++++++++++-------------
 4 files changed, 35 insertions(+), 24 deletions(-)

diff --git a/src/main/ipc.ts b/src/main/ipc.ts
index fb9bc6f6..565ac8a6 100644
--- a/src/main/ipc.ts
+++ b/src/main/ipc.ts
@@ -147,15 +147,15 @@ handle(IpcEvents.CLIPBOARD_COPY_IMAGE, async (_, buf: ArrayBuffer, src: string)
 
 const registered_keybinds = {};
 
-handle(IpcEvents.KEYBIND_REGISTER, (_, id: string, shortcut: string) => {
+handle(IpcEvents.KEYBIND_REGISTER, (_, id: number, shortcut: string, options: any) => {
     globalShortcut.register(shortcut, () => {
         // false here implies `keyup`
         // electron's global shortcut system doesn't really register keyup or down as far as i can tell
-        mainWin.webContents.executeJavaScript(`Vesktop.keybindCallbacks["${id}"](false)`);
+        mainWin.webContents.executeJavaScript(`Vesktop.keybindCallbacks[${id}](false)`);
     });
     registered_keybinds[id] = shortcut;
 });
-handle(IpcEvents.KEYBIND_UNREGISTER, (_, id: string) => {
+handle(IpcEvents.KEYBIND_UNREGISTER, (_, id: number) => {
     globalShortcut.unregister(registered_keybinds[id]);
 });
 
diff --git a/src/preload/VesktopNative.ts b/src/preload/VesktopNative.ts
index 3771bca6..e43e11f9 100644
--- a/src/preload/VesktopNative.ts
+++ b/src/preload/VesktopNative.ts
@@ -80,7 +80,8 @@ export const VesktopNative = {
             invoke<void>(IpcEvents.CLIPBOARD_COPY_IMAGE, imageBuffer, imageSrc)
     },
     keybind: {
-        register: (id: string, shortcut: string) => invoke<void>(IpcEvents.KEYBIND_REGISTER, id, shortcut),
-        uregister: (id: string) => invoke<void>(IpcEvents.KEYBIND_UNREGISTER, id)
+        register: (id: number, shortcut: string, options: any) =>
+            invoke<void>(IpcEvents.KEYBIND_REGISTER, id, shortcut),
+        uregister: (id: number) => invoke<void>(IpcEvents.KEYBIND_UNREGISTER, id)
     }
 };
diff --git a/src/renderer/index.ts b/src/renderer/index.ts
index 879c2e85..01c80cea 100644
--- a/src/renderer/index.ts
+++ b/src/renderer/index.ts
@@ -21,7 +21,7 @@ export { Settings };
 
 const InviteActions = findByPropsLazy("resolveInvite");
 
-export const keybindCallbacks: { [id: string]: Function } = {};
+export const keybindCallbacks: { [id: number]: Function } = {};
 
 export async function openInviteModal(code: string) {
     const { invite } = await InviteActions.resolveInvite(code, "Desktop Modal");
diff --git a/src/renderer/patches/keybinds.ts b/src/renderer/patches/keybinds.ts
index 209b579e..d159b57d 100644
--- a/src/renderer/patches/keybinds.ts
+++ b/src/renderer/patches/keybinds.ts
@@ -4,39 +4,49 @@
  * Copyright (c) 2023 Vendicated and Vencord contributors
  */
 
+import { findByPropsLazy } from "@vencord/types/webpack";
 import { keybindCallbacks } from "renderer";
 
 import { addPatch } from "./shared";
+const { toString } = findByPropsLazy("keyToCode");
 
 addPatch({
     patches: [
         {
             find: ".default.Messages.KEYBINDS,children:",
-            replacement: {
-                match: /.\.isPlatformEmbedded/,
-                replace: "true"
-            }
+            replacement: [
+                {
+                    // eslint-disable-next-line no-useless-escape
+                    match: /\i\.isPlatformEmbedded/g,
+                    replace: "true"
+                },
+                {
+                    // eslint-disable-next-line no-useless-escape
+                    match: /\(0,\i.isDesktop\)\(\)/g,
+                    replace: "true"
+                }
+            ]
         },
         {
             find: "[kb store] KeybindStore",
-            replacement: {
-                match: /(inputEventRegister\(parseInt\((.{1,2})\),(.{1,2}),(.{1,2}),(.{1,2})\);else\{)([^;]*;[^;]*;.{1,2}\.keyup&&.{1,2}\.bindGlobal\(\(0,(.{1,2}\.toString)\))/,
-                replace: "$1$self.registerKeybind($2,$3,$4,$7);return;$6"
-            }
-        },
-        {
-            find: "[kb store] KeybindStore",
-            replacement: {
-                // WHY IS THE RADIX SPEICIFIED
-                match: /(inputEventUnregister\(parseInt\((.{1,2}),10\)\);else\{)/,
-                replace: "$1$self.unregisterKeybind($2);return;"
-            }
+            replacement: [
+                {
+                    // eslint-disable-next-line no-useless-escape
+                    match: /inputEventRegister\((parseInt\(\i\),\i,\i,\i)\);else\{/,
+                    replace: "$&$self.registerKeybind($1);return;"
+                },
+                {
+                    // eslint-disable-next-line no-useless-escape
+                    match: /inputEventUnregister\((parseInt\(\i,10\))\);else\{/,
+                    replace: "$&$self.unregisterKeybind($1);return;"
+                }
+            ]
         }
     ],
 
-    registerKeybind: function (id, shortcut, callback, toString) {
+    registerKeybind: function (id, shortcut, callback, options) {
         keybindCallbacks[id] = callback;
-        VesktopNative.keybind.register(id, toString(shortcut));
+        VesktopNative.keybind.register(id, toString(shortcut), options);
     },
     unregisterKeybind: function (id) {
         delete keybindCallbacks[id];

From 29858bc7aba1120d5d89743508fda3062c587abf Mon Sep 17 00:00:00 2001
From: Tuxinal <24763016+tuxinal@users.noreply.github.com>
Date: Sat, 9 Mar 2024 01:33:48 +0330
Subject: [PATCH 03/31] cli based toggles Co-Authored-By: exhq
 <infidelLOler@gmail.com>

---
 src/main/index.ts                | 29 +++++++++++++++++++++--------
 src/main/ipc.ts                  | 20 +++-----------------
 src/preload/VesktopNative.ts     |  2 +-
 src/renderer/patches/keybinds.ts |  2 +-
 4 files changed, 26 insertions(+), 27 deletions(-)

diff --git a/src/main/index.ts b/src/main/index.ts
index 4eb863d9..818e6d7a 100644
--- a/src/main/index.ts
+++ b/src/main/index.ts
@@ -69,8 +69,12 @@ function init() {
     // In the Flatpak on SteamOS the theme is detected as light, but SteamOS only has a dark mode, so we just override it
     if (isDeckGameMode) nativeTheme.themeSource = "dark";
 
-    app.on("second-instance", (_event, _cmdLine, _cwd, data: any) => {
-        if (data.IS_DEV) app.quit();
+    app.on("second-instance", (_event, cmdLine, _cwd, data: any) => {
+        const keybindIndex = cmdLine.indexOf("--keybind");
+
+        if (keybindIndex !== -1) {
+            mainWin.webContents.executeJavaScript(`Vesktop.keybindCallbacks[${cmdLine[keybindIndex + 1]}](false)`);
+        } else if (data.IS_DEV) app.quit();
         else if (mainWin) {
             if (mainWin.isMinimized()) mainWin.restore();
             if (!mainWin.isVisible()) mainWin.show();
@@ -93,15 +97,24 @@ function init() {
 }
 
 if (!app.requestSingleInstanceLock({ IS_DEV })) {
-    if (IS_DEV) {
-        console.log("Vesktop is already running. Quitting previous instance...");
-        init();
-    } else {
-        console.log("Vesktop is already running. Quitting...");
+    if (process.argv.includes("--keybind")) {
         app.quit();
+    } else {
+        if (IS_DEV) {
+            console.log("Vesktop is already running. Quitting previous instance...");
+            init();
+        } else {
+            console.log("Vesktop is already running. Quitting...");
+            app.quit();
+        }
     }
 } else {
-    init();
+    if (process.argv.includes("--keybind")) {
+        console.error("No instances running! cannot issue a keybind!");
+        app.quit();
+    } else {
+        init();
+    }
 }
 
 async function bootstrap() {
diff --git a/src/main/ipc.ts b/src/main/ipc.ts
index 565ac8a6..5ed17109 100644
--- a/src/main/ipc.ts
+++ b/src/main/ipc.ts
@@ -7,17 +7,7 @@
 if (process.platform === "linux") import("./venmic");
 
 import { execFile } from "child_process";
-import {
-    app,
-    BrowserWindow,
-    clipboard,
-    dialog,
-    globalShortcut,
-    nativeImage,
-    RelaunchOptions,
-    session,
-    shell
-} from "electron";
+import { app, BrowserWindow, clipboard, dialog, nativeImage, RelaunchOptions, session, shell } from "electron";
 import { mkdirSync, readFileSync, watch } from "fs";
 import { open, readFile } from "fs/promises";
 import { release } from "os";
@@ -148,15 +138,11 @@ handle(IpcEvents.CLIPBOARD_COPY_IMAGE, async (_, buf: ArrayBuffer, src: string)
 const registered_keybinds = {};
 
 handle(IpcEvents.KEYBIND_REGISTER, (_, id: number, shortcut: string, options: any) => {
-    globalShortcut.register(shortcut, () => {
-        // false here implies `keyup`
-        // electron's global shortcut system doesn't really register keyup or down as far as i can tell
-        mainWin.webContents.executeJavaScript(`Vesktop.keybindCallbacks[${id}](false)`);
-    });
     registered_keybinds[id] = shortcut;
+    console.log(registered_keybinds);
 });
 handle(IpcEvents.KEYBIND_UNREGISTER, (_, id: number) => {
-    globalShortcut.unregister(registered_keybinds[id]);
+    delete registered_keybinds[id];
 });
 
 function readCss() {
diff --git a/src/preload/VesktopNative.ts b/src/preload/VesktopNative.ts
index e43e11f9..5f93cfe9 100644
--- a/src/preload/VesktopNative.ts
+++ b/src/preload/VesktopNative.ts
@@ -82,6 +82,6 @@ export const VesktopNative = {
     keybind: {
         register: (id: number, shortcut: string, options: any) =>
             invoke<void>(IpcEvents.KEYBIND_REGISTER, id, shortcut),
-        uregister: (id: number) => invoke<void>(IpcEvents.KEYBIND_UNREGISTER, id)
+        unregister: (id: number) => invoke<void>(IpcEvents.KEYBIND_UNREGISTER, id)
     }
 };
diff --git a/src/renderer/patches/keybinds.ts b/src/renderer/patches/keybinds.ts
index d159b57d..717113b7 100644
--- a/src/renderer/patches/keybinds.ts
+++ b/src/renderer/patches/keybinds.ts
@@ -50,6 +50,6 @@ addPatch({
     },
     unregisterKeybind: function (id) {
         delete keybindCallbacks[id];
-        VesktopNative.keybind.uregister(id);
+        VesktopNative.keybind.unregister(id);
     }
 });

From a0f61f4712f2a610106c2f2738f74856bba1dc1e Mon Sep 17 00:00:00 2001
From: Tuxinal <24763016+tuxinal@users.noreply.github.com>
Date: Sat, 11 May 2024 19:53:43 +0330
Subject: [PATCH 04/31] Add keyup/keydown support for the cli TEMPORARY: show
 keybind ID in the keybind page

---
 src/main/index.ts                |  8 +++++++-
 src/main/ipc.ts                  |  1 -
 src/renderer/patches/keybinds.ts | 10 ++++++++--
 3 files changed, 15 insertions(+), 4 deletions(-)

diff --git a/src/main/index.ts b/src/main/index.ts
index 818e6d7a..e732b662 100644
--- a/src/main/index.ts
+++ b/src/main/index.ts
@@ -73,7 +73,13 @@ function init() {
         const keybindIndex = cmdLine.indexOf("--keybind");
 
         if (keybindIndex !== -1) {
-            mainWin.webContents.executeJavaScript(`Vesktop.keybindCallbacks[${cmdLine[keybindIndex + 1]}](false)`);
+            if (cmdLine[keybindIndex + 2] === "keyup" || cmdLine[keybindIndex + 2] === "keydown") {
+                mainWin.webContents.executeJavaScript(
+                    `Vesktop.keybindCallbacks[${cmdLine[keybindIndex + 1]}](${cmdLine[keybindIndex + 2] === "keydown" ? "true" : "false"})`
+                );
+            } else {
+                mainWin.webContents.executeJavaScript(`Vesktop.keybindCallbacks[${cmdLine[keybindIndex + 1]}](false)`);
+            }
         } else if (data.IS_DEV) app.quit();
         else if (mainWin) {
             if (mainWin.isMinimized()) mainWin.restore();
diff --git a/src/main/ipc.ts b/src/main/ipc.ts
index 5ed17109..6e040857 100644
--- a/src/main/ipc.ts
+++ b/src/main/ipc.ts
@@ -139,7 +139,6 @@ const registered_keybinds = {};
 
 handle(IpcEvents.KEYBIND_REGISTER, (_, id: number, shortcut: string, options: any) => {
     registered_keybinds[id] = shortcut;
-    console.log(registered_keybinds);
 });
 handle(IpcEvents.KEYBIND_UNREGISTER, (_, id: number) => {
     delete registered_keybinds[id];
diff --git a/src/renderer/patches/keybinds.ts b/src/renderer/patches/keybinds.ts
index 717113b7..6ba1f903 100644
--- a/src/renderer/patches/keybinds.ts
+++ b/src/renderer/patches/keybinds.ts
@@ -22,8 +22,14 @@ addPatch({
                 },
                 {
                     // eslint-disable-next-line no-useless-escape
-                    match: /\(0,\i.isDesktop\)\(\)/g,
+                    match: /\(0,\i\.isDesktop\)\(\)/g,
                     replace: "true"
+                },
+                {
+                    // THIS PATCH IS TEMPORARY
+                    // eslint-disable-next-line no-useless-escape
+                    match: /\.keybindGroup,\i.card\),children:\[/g,
+                    replace: "$&`ID: ${this.props.keybind.id}`,"
                 }
             ]
         },
@@ -37,7 +43,7 @@ addPatch({
                 },
                 {
                     // eslint-disable-next-line no-useless-escape
-                    match: /inputEventUnregister\((parseInt\(\i,10\))\);else\{/,
+                    match: /inputEventUnregister\((parseInt\(\i,10\))\);else if\(\i\[\i\]\)\{/,
                     replace: "$&$self.unregisterKeybind($1);return;"
                 }
             ]

From beacd0dec0d5e145c75a1b1ca7db5c09982597e2 Mon Sep 17 00:00:00 2001
From: Tuxinal <24763016+tuxinal@users.noreply.github.com>
Date: Tue, 2 Jul 2024 00:22:51 +0330
Subject: [PATCH 05/31] update patch

---
 src/renderer/patches/keybinds.ts | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/renderer/patches/keybinds.ts b/src/renderer/patches/keybinds.ts
index 6ba1f903..e3520437 100644
--- a/src/renderer/patches/keybinds.ts
+++ b/src/renderer/patches/keybinds.ts
@@ -13,7 +13,7 @@ const { toString } = findByPropsLazy("keyToCode");
 addPatch({
     patches: [
         {
-            find: ".default.Messages.KEYBINDS,children:",
+            find: "keybindActionTypes",
             replacement: [
                 {
                     // eslint-disable-next-line no-useless-escape

From db542ce852a94cb1340950691a3a0d3e77065689 Mon Sep 17 00:00:00 2001
From: Tuxinal <24763016+tuxinal@users.noreply.github.com>
Date: Tue, 16 Jul 2024 00:35:00 +0330
Subject: [PATCH 06/31] fix shortcut string function

---
 src/renderer/patches/keybinds.ts | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/renderer/patches/keybinds.ts b/src/renderer/patches/keybinds.ts
index e3520437..fc33f73b 100644
--- a/src/renderer/patches/keybinds.ts
+++ b/src/renderer/patches/keybinds.ts
@@ -4,11 +4,11 @@
  * Copyright (c) 2023 Vendicated and Vencord contributors
  */
 
-import { findByPropsLazy } from "@vencord/types/webpack";
+import { findByCodeLazy } from "@vencord/types/webpack";
 import { keybindCallbacks } from "renderer";
 
 import { addPatch } from "./shared";
-const { toString } = findByPropsLazy("keyToCode");
+const toShortcutString = findByCodeLazy('return"gamepad".');
 
 addPatch({
     patches: [
@@ -52,7 +52,7 @@ addPatch({
 
     registerKeybind: function (id, shortcut, callback, options) {
         keybindCallbacks[id] = callback;
-        VesktopNative.keybind.register(id, toString(shortcut), options);
+        VesktopNative.keybind.register(id, toShortcutString(shortcut), options);
     },
     unregisterKeybind: function (id) {
         delete keybindCallbacks[id];

From 239e30a53e1b97bb0204943250bb5619213232ce Mon Sep 17 00:00:00 2001
From: Tuxinal <24763016+tuxinal@users.noreply.github.com>
Date: Sun, 18 Aug 2024 19:27:25 +0330
Subject: [PATCH 07/31] add venbind. currently only linux x64 on x11

---
 package.json            |     3 +-
 pnpm-lock.yaml          | 13631 ++++++++++++++++++++++----------------
 scripts/build/build.mts |     4 +
 src/main/index.ts       |     2 +
 src/main/ipc.ts         |     9 -
 src/main/venbind.ts     |    57 +
 6 files changed, 7920 insertions(+), 5786 deletions(-)
 create mode 100644 src/main/venbind.ts

diff --git a/package.json b/package.json
index 83c91af5..d9b20ff3 100644
--- a/package.json
+++ b/package.json
@@ -25,7 +25,8 @@
     },
     "dependencies": {
         "arrpc": "github:OpenAsar/arrpc#5aadc307cb9bf4479f0a12364a253b07a77ace22",
-        "electron-updater": "^6.3.9"
+        "electron-updater": "^6.3.9",
+        "venbind": "^0.0.2"
     },
     "optionalDependencies": {
         "@vencord/venmic": "^6.1.0"
diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml
index d28002f2..6fcf2a56 100644
--- a/pnpm-lock.yaml
+++ b/pnpm-lock.yaml
@@ -1,6149 +1,8228 @@
-lockfileVersion: '9.0'
+lockfileVersion: "9.0"
 
 settings:
-  autoInstallPeers: true
-  excludeLinksFromLockfile: false
+    autoInstallPeers: true
+    excludeLinksFromLockfile: false
 
 patchedDependencies:
-  arrpc@3.5.0:
-    hash: biyukfa6dww2wxujy4eyvkhrti
-    path: patches/arrpc@3.5.0.patch
+    arrpc@3.5.0:
+        hash: biyukfa6dww2wxujy4eyvkhrti
+        path: patches/arrpc@3.5.0.patch
 
 importers:
-
-  .:
-    dependencies:
-      arrpc:
-        specifier: github:OpenAsar/arrpc#5aadc307cb9bf4479f0a12364a253b07a77ace22
-        version: https://codeload.github.com/OpenAsar/arrpc/tar.gz/5aadc307cb9bf4479f0a12364a253b07a77ace22(patch_hash=biyukfa6dww2wxujy4eyvkhrti)
-      electron-updater:
-        specifier: ^6.3.9
-        version: 6.3.9
-    optionalDependencies:
-      '@vencord/venmic':
-        specifier: ^6.1.0
-        version: 6.1.0
-    devDependencies:
-      '@fal-works/esbuild-plugin-global-externals':
-        specifier: ^2.1.2
-        version: 2.1.2
-      '@stylistic/eslint-plugin':
-        specifier: ^2.11.0
-        version: 2.11.0(eslint@9.16.0)(typescript@5.7.2)
-      '@types/node':
-        specifier: ^22.10.1
-        version: 22.10.1
-      '@types/react':
-        specifier: ^18.3.12
-        version: 18.3.12
-      '@vencord/types':
-        specifier: ^1.8.4
-        version: 1.8.4
-      dotenv:
-        specifier: ^16.4.6
-        version: 16.4.6
-      electron:
-        specifier: ^33.2.1
-        version: 33.2.1
-      electron-builder:
-        specifier: ^25.1.8
-        version: 25.1.8(electron-builder-squirrel-windows@25.1.8(dmg-builder@25.1.8))
-      esbuild:
-        specifier: ^0.24.0
-        version: 0.24.0
-      eslint:
-        specifier: ^9.16.0
-        version: 9.16.0
-      eslint-import-resolver-alias:
-        specifier: ^1.1.2
-        version: 1.1.2(eslint-plugin-import@2.31.0(@typescript-eslint/parser@8.17.0(eslint@9.16.0)(typescript@5.7.2))(eslint@9.16.0))
-      eslint-plugin-path-alias:
-        specifier: ^2.1.0
-        version: 2.1.0(eslint@9.16.0)
-      eslint-plugin-prettier:
-        specifier: ^5.2.1
-        version: 5.2.1(eslint-config-prettier@9.1.0(eslint@9.16.0))(eslint@9.16.0)(prettier@3.4.1)
-      eslint-plugin-simple-header:
-        specifier: ^1.2.1
-        version: 1.2.1(eslint@9.16.0)
-      eslint-plugin-simple-import-sort:
-        specifier: ^12.1.1
-        version: 12.1.1(eslint@9.16.0)
-      eslint-plugin-unused-imports:
-        specifier: ^4.1.4
-        version: 4.1.4(@typescript-eslint/eslint-plugin@8.17.0(@typescript-eslint/parser@8.17.0(eslint@9.16.0)(typescript@5.7.2))(eslint@9.16.0)(typescript@5.7.2))(eslint@9.16.0)
-      prettier:
-        specifier: ^3.4.1
-        version: 3.4.1
-      source-map-support:
-        specifier: ^0.5.21
-        version: 0.5.21
-      tsx:
-        specifier: ^4.19.2
-        version: 4.19.2
-      type-fest:
-        specifier: ^4.30.0
-        version: 4.30.0
-      typescript:
-        specifier: ^5.7.2
-        version: 5.7.2
-      typescript-eslint:
-        specifier: ^8.17.0
-        version: 8.17.0(eslint@9.16.0)(typescript@5.7.2)
-      xml-formatter:
-        specifier: ^3.6.3
-        version: 3.6.3
+    .:
+        dependencies:
+            arrpc:
+                specifier: github:OpenAsar/arrpc#5aadc307cb9bf4479f0a12364a253b07a77ace22
+                version: https://codeload.github.com/OpenAsar/arrpc/tar.gz/5aadc307cb9bf4479f0a12364a253b07a77ace22(patch_hash=biyukfa6dww2wxujy4eyvkhrti)
+            electron-updater:
+                specifier: ^6.3.9
+                version: 6.3.9
+            venbind:
+                specifier: ^0.0.2
+                version: 0.0.2
+        optionalDependencies:
+            "@vencord/venmic":
+                specifier: ^6.1.0
+                version: 6.1.0
+        devDependencies:
+            "@fal-works/esbuild-plugin-global-externals":
+                specifier: ^2.1.2
+                version: 2.1.2
+            "@stylistic/eslint-plugin":
+                specifier: ^2.11.0
+                version: 2.11.0(eslint@9.16.0)(typescript@5.7.2)
+            "@types/node":
+                specifier: ^22.10.1
+                version: 22.10.1
+            "@types/react":
+                specifier: ^18.3.12
+                version: 18.3.12
+            "@vencord/types":
+                specifier: ^1.8.4
+                version: 1.8.4
+            dotenv:
+                specifier: ^16.4.6
+                version: 16.4.6
+            electron:
+                specifier: ^33.2.1
+                version: 33.2.1
+            electron-builder:
+                specifier: ^25.1.8
+                version: 25.1.8(electron-builder-squirrel-windows@25.1.8(dmg-builder@25.1.8))
+            esbuild:
+                specifier: ^0.24.0
+                version: 0.24.0
+            eslint:
+                specifier: ^9.16.0
+                version: 9.16.0
+            eslint-import-resolver-alias:
+                specifier: ^1.1.2
+                version: 1.1.2(eslint-plugin-import@2.31.0(@typescript-eslint/parser@8.17.0(eslint@9.16.0)(typescript@5.7.2))(eslint@9.16.0))
+            eslint-plugin-path-alias:
+                specifier: ^2.1.0
+                version: 2.1.0(eslint@9.16.0)
+            eslint-plugin-prettier:
+                specifier: ^5.2.1
+                version: 5.2.1(eslint-config-prettier@9.1.0(eslint@9.16.0))(eslint@9.16.0)(prettier@3.4.1)
+            eslint-plugin-simple-header:
+                specifier: ^1.2.1
+                version: 1.2.1(eslint@9.16.0)
+            eslint-plugin-simple-import-sort:
+                specifier: ^12.1.1
+                version: 12.1.1(eslint@9.16.0)
+            eslint-plugin-unused-imports:
+                specifier: ^4.1.4
+                version: 4.1.4(@typescript-eslint/eslint-plugin@8.17.0(@typescript-eslint/parser@8.17.0(eslint@9.16.0)(typescript@5.7.2))(eslint@9.16.0)(typescript@5.7.2))(eslint@9.16.0)
+            prettier:
+                specifier: ^3.4.1
+                version: 3.4.1
+            source-map-support:
+                specifier: ^0.5.21
+                version: 0.5.21
+            tsx:
+                specifier: ^4.19.2
+                version: 4.19.2
+            type-fest:
+                specifier: ^4.30.0
+                version: 4.30.0
+            typescript:
+                specifier: ^5.7.2
+                version: 5.7.2
+            typescript-eslint:
+                specifier: ^8.17.0
+                version: 8.17.0(eslint@9.16.0)(typescript@5.7.2)
+            xml-formatter:
+                specifier: ^3.6.3
+                version: 3.6.3
 
 packages:
+    7zip-bin@5.2.0:
+        resolution:
+            {
+                integrity: sha512-ukTPVhqG4jNzMro2qA9HSCSSVJN3aN7tlb+hfqYCt3ER0yWroeA2VR38MNrOHLQ/cVj+DaIMad0kFCtWWowh/A==
+            }
+
+    "@develar/schema-utils@2.6.5":
+        resolution:
+            {
+                integrity: sha512-0cp4PsWQ/9avqTVMCtZ+GirikIA36ikvjtHweU4/j8yLtgObI0+JUPhYFScgwlteveGB1rt3Cm8UhN04XayDig==
+            }
+        engines: { node: ">= 8.9.0" }
+
+    "@electron/asar@3.2.17":
+        resolution:
+            {
+                integrity: sha512-OcWImUI686w8LkghQj9R2ynZ2ME693Ek6L1SiaAgqGKzBaTIZw3fHDqN82Rcl+EU1Gm9EgkJ5KLIY/q5DCRbbA==
+            }
+        engines: { node: ">=10.12.0" }
+        hasBin: true
+
+    "@electron/get@2.0.3":
+        resolution:
+            {
+                integrity: sha512-Qkzpg2s9GnVV2I2BjRksUi43U5e6+zaQMcjoJy0C+C5oxaKl+fmckGDQFtRpZpZV0NQekuZZ+tGz7EA9TVnQtQ==
+            }
+        engines: { node: ">=12" }
+
+    "@electron/notarize@2.5.0":
+        resolution:
+            {
+                integrity: sha512-jNT8nwH1f9X5GEITXaQ8IF/KdskvIkOFfB2CvwumsveVidzpSc+mvhhTMdAGSYF3O+Nq49lJ7y+ssODRXu06+A==
+            }
+        engines: { node: ">= 10.0.0" }
+
+    "@electron/osx-sign@1.3.1":
+        resolution:
+            {
+                integrity: sha512-BAfviURMHpmb1Yb50YbCxnOY0wfwaLXH5KJ4+80zS0gUkzDX3ec23naTlEqKsN+PwYn+a1cCzM7BJ4Wcd3sGzw==
+            }
+        engines: { node: ">=12.0.0" }
+        hasBin: true
+
+    "@electron/rebuild@3.6.1":
+        resolution:
+            {
+                integrity: sha512-f6596ZHpEq/YskUd8emYvOUne89ij8mQgjYFA5ru25QwbrRO+t1SImofdDv7kKOuWCmVOuU5tvfkbgGxIl3E/w==
+            }
+        engines: { node: ">=12.13.0" }
+        hasBin: true
+
+    "@electron/universal@2.0.1":
+        resolution:
+            {
+                integrity: sha512-fKpv9kg4SPmt+hY7SVBnIYULE9QJl8L3sCfcBsnqbJwwBwAeTLokJ9TRt9y7bK0JAzIW2y78TVVjvnQEms/yyA==
+            }
+        engines: { node: ">=16.4" }
+
+    "@esbuild/aix-ppc64@0.23.1":
+        resolution:
+            {
+                integrity: sha512-6VhYk1diRqrhBAqpJEdjASR/+WVRtfjpqKuNw11cLiaWpAT/Uu+nokB+UJnevzy/P9C/ty6AOe0dwueMrGh/iQ==
+            }
+        engines: { node: ">=18" }
+        cpu: [ppc64]
+        os: [aix]
+
+    "@esbuild/aix-ppc64@0.24.0":
+        resolution:
+            {
+                integrity: sha512-WtKdFM7ls47zkKHFVzMz8opM7LkcsIp9amDUBIAWirg70RM71WRSjdILPsY5Uv1D42ZpUfaPILDlfactHgsRkw==
+            }
+        engines: { node: ">=18" }
+        cpu: [ppc64]
+        os: [aix]
+
+    "@esbuild/android-arm64@0.23.1":
+        resolution:
+            {
+                integrity: sha512-xw50ipykXcLstLeWH7WRdQuysJqejuAGPd30vd1i5zSyKK3WE+ijzHmLKxdiCMtH1pHz78rOg0BKSYOSB/2Khw==
+            }
+        engines: { node: ">=18" }
+        cpu: [arm64]
+        os: [android]
+
+    "@esbuild/android-arm64@0.24.0":
+        resolution:
+            {
+                integrity: sha512-Vsm497xFM7tTIPYK9bNTYJyF/lsP590Qc1WxJdlB6ljCbdZKU9SY8i7+Iin4kyhV/KV5J2rOKsBQbB77Ab7L/w==
+            }
+        engines: { node: ">=18" }
+        cpu: [arm64]
+        os: [android]
+
+    "@esbuild/android-arm@0.23.1":
+        resolution:
+            {
+                integrity: sha512-uz6/tEy2IFm9RYOyvKl88zdzZfwEfKZmnX9Cj1BHjeSGNuGLuMD1kR8y5bteYmwqKm1tj8m4cb/aKEorr6fHWQ==
+            }
+        engines: { node: ">=18" }
+        cpu: [arm]
+        os: [android]
+
+    "@esbuild/android-arm@0.24.0":
+        resolution:
+            {
+                integrity: sha512-arAtTPo76fJ/ICkXWetLCc9EwEHKaeya4vMrReVlEIUCAUncH7M4bhMQ+M9Vf+FFOZJdTNMXNBrWwW+OXWpSew==
+            }
+        engines: { node: ">=18" }
+        cpu: [arm]
+        os: [android]
+
+    "@esbuild/android-x64@0.23.1":
+        resolution:
+            {
+                integrity: sha512-nlN9B69St9BwUoB+jkyU090bru8L0NA3yFvAd7k8dNsVH8bi9a8cUAUSEcEEgTp2z3dbEDGJGfP6VUnkQnlReg==
+            }
+        engines: { node: ">=18" }
+        cpu: [x64]
+        os: [android]
+
+    "@esbuild/android-x64@0.24.0":
+        resolution:
+            {
+                integrity: sha512-t8GrvnFkiIY7pa7mMgJd7p8p8qqYIz1NYiAoKc75Zyv73L3DZW++oYMSHPRarcotTKuSs6m3hTOa5CKHaS02TQ==
+            }
+        engines: { node: ">=18" }
+        cpu: [x64]
+        os: [android]
+
+    "@esbuild/darwin-arm64@0.23.1":
+        resolution:
+            {
+                integrity: sha512-YsS2e3Wtgnw7Wq53XXBLcV6JhRsEq8hkfg91ESVadIrzr9wO6jJDMZnCQbHm1Guc5t/CdDiFSSfWP58FNuvT3Q==
+            }
+        engines: { node: ">=18" }
+        cpu: [arm64]
+        os: [darwin]
+
+    "@esbuild/darwin-arm64@0.24.0":
+        resolution:
+            {
+                integrity: sha512-CKyDpRbK1hXwv79soeTJNHb5EiG6ct3efd/FTPdzOWdbZZfGhpbcqIpiD0+vwmpu0wTIL97ZRPZu8vUt46nBSw==
+            }
+        engines: { node: ">=18" }
+        cpu: [arm64]
+        os: [darwin]
+
+    "@esbuild/darwin-x64@0.23.1":
+        resolution:
+            {
+                integrity: sha512-aClqdgTDVPSEGgoCS8QDG37Gu8yc9lTHNAQlsztQ6ENetKEO//b8y31MMu2ZaPbn4kVsIABzVLXYLhCGekGDqw==
+            }
+        engines: { node: ">=18" }
+        cpu: [x64]
+        os: [darwin]
+
+    "@esbuild/darwin-x64@0.24.0":
+        resolution:
+            {
+                integrity: sha512-rgtz6flkVkh58od4PwTRqxbKH9cOjaXCMZgWD905JOzjFKW+7EiUObfd/Kav+A6Gyud6WZk9w+xu6QLytdi2OA==
+            }
+        engines: { node: ">=18" }
+        cpu: [x64]
+        os: [darwin]
+
+    "@esbuild/freebsd-arm64@0.23.1":
+        resolution:
+            {
+                integrity: sha512-h1k6yS8/pN/NHlMl5+v4XPfikhJulk4G+tKGFIOwURBSFzE8bixw1ebjluLOjfwtLqY0kewfjLSrO6tN2MgIhA==
+            }
+        engines: { node: ">=18" }
+        cpu: [arm64]
+        os: [freebsd]
+
+    "@esbuild/freebsd-arm64@0.24.0":
+        resolution:
+            {
+                integrity: sha512-6Mtdq5nHggwfDNLAHkPlyLBpE5L6hwsuXZX8XNmHno9JuL2+bg2BX5tRkwjyfn6sKbxZTq68suOjgWqCicvPXA==
+            }
+        engines: { node: ">=18" }
+        cpu: [arm64]
+        os: [freebsd]
+
+    "@esbuild/freebsd-x64@0.23.1":
+        resolution:
+            {
+                integrity: sha512-lK1eJeyk1ZX8UklqFd/3A60UuZ/6UVfGT2LuGo3Wp4/z7eRTRYY+0xOu2kpClP+vMTi9wKOfXi2vjUpO1Ro76g==
+            }
+        engines: { node: ">=18" }
+        cpu: [x64]
+        os: [freebsd]
+
+    "@esbuild/freebsd-x64@0.24.0":
+        resolution:
+            {
+                integrity: sha512-D3H+xh3/zphoX8ck4S2RxKR6gHlHDXXzOf6f/9dbFt/NRBDIE33+cVa49Kil4WUjxMGW0ZIYBYtaGCa2+OsQwQ==
+            }
+        engines: { node: ">=18" }
+        cpu: [x64]
+        os: [freebsd]
+
+    "@esbuild/linux-arm64@0.23.1":
+        resolution:
+            {
+                integrity: sha512-/93bf2yxencYDnItMYV/v116zff6UyTjo4EtEQjUBeGiVpMmffDNUyD9UN2zV+V3LRV3/on4xdZ26NKzn6754g==
+            }
+        engines: { node: ">=18" }
+        cpu: [arm64]
+        os: [linux]
+
+    "@esbuild/linux-arm64@0.24.0":
+        resolution:
+            {
+                integrity: sha512-TDijPXTOeE3eaMkRYpcy3LarIg13dS9wWHRdwYRnzlwlA370rNdZqbcp0WTyyV/k2zSxfko52+C7jU5F9Tfj1g==
+            }
+        engines: { node: ">=18" }
+        cpu: [arm64]
+        os: [linux]
+
+    "@esbuild/linux-arm@0.23.1":
+        resolution:
+            {
+                integrity: sha512-CXXkzgn+dXAPs3WBwE+Kvnrf4WECwBdfjfeYHpMeVxWE0EceB6vhWGShs6wi0IYEqMSIzdOF1XjQ/Mkm5d7ZdQ==
+            }
+        engines: { node: ">=18" }
+        cpu: [arm]
+        os: [linux]
+
+    "@esbuild/linux-arm@0.24.0":
+        resolution:
+            {
+                integrity: sha512-gJKIi2IjRo5G6Glxb8d3DzYXlxdEj2NlkixPsqePSZMhLudqPhtZ4BUrpIuTjJYXxvF9njql+vRjB2oaC9XpBw==
+            }
+        engines: { node: ">=18" }
+        cpu: [arm]
+        os: [linux]
+
+    "@esbuild/linux-ia32@0.23.1":
+        resolution:
+            {
+                integrity: sha512-VTN4EuOHwXEkXzX5nTvVY4s7E/Krz7COC8xkftbbKRYAl96vPiUssGkeMELQMOnLOJ8k3BY1+ZY52tttZnHcXQ==
+            }
+        engines: { node: ">=18" }
+        cpu: [ia32]
+        os: [linux]
+
+    "@esbuild/linux-ia32@0.24.0":
+        resolution:
+            {
+                integrity: sha512-K40ip1LAcA0byL05TbCQ4yJ4swvnbzHscRmUilrmP9Am7//0UjPreh4lpYzvThT2Quw66MhjG//20mrufm40mA==
+            }
+        engines: { node: ">=18" }
+        cpu: [ia32]
+        os: [linux]
+
+    "@esbuild/linux-loong64@0.23.1":
+        resolution:
+            {
+                integrity: sha512-Vx09LzEoBa5zDnieH8LSMRToj7ir/Jeq0Gu6qJ/1GcBq9GkfoEAoXvLiW1U9J1qE/Y/Oyaq33w5p2ZWrNNHNEw==
+            }
+        engines: { node: ">=18" }
+        cpu: [loong64]
+        os: [linux]
+
+    "@esbuild/linux-loong64@0.24.0":
+        resolution:
+            {
+                integrity: sha512-0mswrYP/9ai+CU0BzBfPMZ8RVm3RGAN/lmOMgW4aFUSOQBjA31UP8Mr6DDhWSuMwj7jaWOT0p0WoZ6jeHhrD7g==
+            }
+        engines: { node: ">=18" }
+        cpu: [loong64]
+        os: [linux]
+
+    "@esbuild/linux-mips64el@0.23.1":
+        resolution:
+            {
+                integrity: sha512-nrFzzMQ7W4WRLNUOU5dlWAqa6yVeI0P78WKGUo7lg2HShq/yx+UYkeNSE0SSfSure0SqgnsxPvmAUu/vu0E+3Q==
+            }
+        engines: { node: ">=18" }
+        cpu: [mips64el]
+        os: [linux]
+
+    "@esbuild/linux-mips64el@0.24.0":
+        resolution:
+            {
+                integrity: sha512-hIKvXm0/3w/5+RDtCJeXqMZGkI2s4oMUGj3/jM0QzhgIASWrGO5/RlzAzm5nNh/awHE0A19h/CvHQe6FaBNrRA==
+            }
+        engines: { node: ">=18" }
+        cpu: [mips64el]
+        os: [linux]
+
+    "@esbuild/linux-ppc64@0.23.1":
+        resolution:
+            {
+                integrity: sha512-dKN8fgVqd0vUIjxuJI6P/9SSSe/mB9rvA98CSH2sJnlZ/OCZWO1DJvxj8jvKTfYUdGfcq2dDxoKaC6bHuTlgcw==
+            }
+        engines: { node: ">=18" }
+        cpu: [ppc64]
+        os: [linux]
+
+    "@esbuild/linux-ppc64@0.24.0":
+        resolution:
+            {
+                integrity: sha512-HcZh5BNq0aC52UoocJxaKORfFODWXZxtBaaZNuN3PUX3MoDsChsZqopzi5UupRhPHSEHotoiptqikjN/B77mYQ==
+            }
+        engines: { node: ">=18" }
+        cpu: [ppc64]
+        os: [linux]
+
+    "@esbuild/linux-riscv64@0.23.1":
+        resolution:
+            {
+                integrity: sha512-5AV4Pzp80fhHL83JM6LoA6pTQVWgB1HovMBsLQ9OZWLDqVY8MVobBXNSmAJi//Csh6tcY7e7Lny2Hg1tElMjIA==
+            }
+        engines: { node: ">=18" }
+        cpu: [riscv64]
+        os: [linux]
+
+    "@esbuild/linux-riscv64@0.24.0":
+        resolution:
+            {
+                integrity: sha512-bEh7dMn/h3QxeR2KTy1DUszQjUrIHPZKyO6aN1X4BCnhfYhuQqedHaa5MxSQA/06j3GpiIlFGSsy1c7Gf9padw==
+            }
+        engines: { node: ">=18" }
+        cpu: [riscv64]
+        os: [linux]
+
+    "@esbuild/linux-s390x@0.23.1":
+        resolution:
+            {
+                integrity: sha512-9ygs73tuFCe6f6m/Tb+9LtYxWR4c9yg7zjt2cYkjDbDpV/xVn+68cQxMXCjUpYwEkze2RcU/rMnfIXNRFmSoDw==
+            }
+        engines: { node: ">=18" }
+        cpu: [s390x]
+        os: [linux]
+
+    "@esbuild/linux-s390x@0.24.0":
+        resolution:
+            {
+                integrity: sha512-ZcQ6+qRkw1UcZGPyrCiHHkmBaj9SiCD8Oqd556HldP+QlpUIe2Wgn3ehQGVoPOvZvtHm8HPx+bH20c9pvbkX3g==
+            }
+        engines: { node: ">=18" }
+        cpu: [s390x]
+        os: [linux]
+
+    "@esbuild/linux-x64@0.23.1":
+        resolution:
+            {
+                integrity: sha512-EV6+ovTsEXCPAp58g2dD68LxoP/wK5pRvgy0J/HxPGB009omFPv3Yet0HiaqvrIrgPTBuC6wCH1LTOY91EO5hQ==
+            }
+        engines: { node: ">=18" }
+        cpu: [x64]
+        os: [linux]
+
+    "@esbuild/linux-x64@0.24.0":
+        resolution:
+            {
+                integrity: sha512-vbutsFqQ+foy3wSSbmjBXXIJ6PL3scghJoM8zCL142cGaZKAdCZHyf+Bpu/MmX9zT9Q0zFBVKb36Ma5Fzfa8xA==
+            }
+        engines: { node: ">=18" }
+        cpu: [x64]
+        os: [linux]
+
+    "@esbuild/netbsd-x64@0.23.1":
+        resolution:
+            {
+                integrity: sha512-aevEkCNu7KlPRpYLjwmdcuNz6bDFiE7Z8XC4CPqExjTvrHugh28QzUXVOZtiYghciKUacNktqxdpymplil1beA==
+            }
+        engines: { node: ">=18" }
+        cpu: [x64]
+        os: [netbsd]
+
+    "@esbuild/netbsd-x64@0.24.0":
+        resolution:
+            {
+                integrity: sha512-hjQ0R/ulkO8fCYFsG0FZoH+pWgTTDreqpqY7UnQntnaKv95uP5iW3+dChxnx7C3trQQU40S+OgWhUVwCjVFLvg==
+            }
+        engines: { node: ">=18" }
+        cpu: [x64]
+        os: [netbsd]
+
+    "@esbuild/openbsd-arm64@0.23.1":
+        resolution:
+            {
+                integrity: sha512-3x37szhLexNA4bXhLrCC/LImN/YtWis6WXr1VESlfVtVeoFJBRINPJ3f0a/6LV8zpikqoUg4hyXw0sFBt5Cr+Q==
+            }
+        engines: { node: ">=18" }
+        cpu: [arm64]
+        os: [openbsd]
+
+    "@esbuild/openbsd-arm64@0.24.0":
+        resolution:
+            {
+                integrity: sha512-MD9uzzkPQbYehwcN583yx3Tu5M8EIoTD+tUgKF982WYL9Pf5rKy9ltgD0eUgs8pvKnmizxjXZyLt0z6DC3rRXg==
+            }
+        engines: { node: ">=18" }
+        cpu: [arm64]
+        os: [openbsd]
+
+    "@esbuild/openbsd-x64@0.23.1":
+        resolution:
+            {
+                integrity: sha512-aY2gMmKmPhxfU+0EdnN+XNtGbjfQgwZj43k8G3fyrDM/UdZww6xrWxmDkuz2eCZchqVeABjV5BpildOrUbBTqA==
+            }
+        engines: { node: ">=18" }
+        cpu: [x64]
+        os: [openbsd]
+
+    "@esbuild/openbsd-x64@0.24.0":
+        resolution:
+            {
+                integrity: sha512-4ir0aY1NGUhIC1hdoCzr1+5b43mw99uNwVzhIq1OY3QcEwPDO3B7WNXBzaKY5Nsf1+N11i1eOfFcq+D/gOS15Q==
+            }
+        engines: { node: ">=18" }
+        cpu: [x64]
+        os: [openbsd]
+
+    "@esbuild/sunos-x64@0.23.1":
+        resolution:
+            {
+                integrity: sha512-RBRT2gqEl0IKQABT4XTj78tpk9v7ehp+mazn2HbUeZl1YMdaGAQqhapjGTCe7uw7y0frDi4gS0uHzhvpFuI1sA==
+            }
+        engines: { node: ">=18" }
+        cpu: [x64]
+        os: [sunos]
+
+    "@esbuild/sunos-x64@0.24.0":
+        resolution:
+            {
+                integrity: sha512-jVzdzsbM5xrotH+W5f1s+JtUy1UWgjU0Cf4wMvffTB8m6wP5/kx0KiaLHlbJO+dMgtxKV8RQ/JvtlFcdZ1zCPA==
+            }
+        engines: { node: ">=18" }
+        cpu: [x64]
+        os: [sunos]
+
+    "@esbuild/win32-arm64@0.23.1":
+        resolution:
+            {
+                integrity: sha512-4O+gPR5rEBe2FpKOVyiJ7wNDPA8nGzDuJ6gN4okSA1gEOYZ67N8JPk58tkWtdtPeLz7lBnY6I5L3jdsr3S+A6A==
+            }
+        engines: { node: ">=18" }
+        cpu: [arm64]
+        os: [win32]
+
+    "@esbuild/win32-arm64@0.24.0":
+        resolution:
+            {
+                integrity: sha512-iKc8GAslzRpBytO2/aN3d2yb2z8XTVfNV0PjGlCxKo5SgWmNXx82I/Q3aG1tFfS+A2igVCY97TJ8tnYwpUWLCA==
+            }
+        engines: { node: ">=18" }
+        cpu: [arm64]
+        os: [win32]
+
+    "@esbuild/win32-ia32@0.23.1":
+        resolution:
+            {
+                integrity: sha512-BcaL0Vn6QwCwre3Y717nVHZbAa4UBEigzFm6VdsVdT/MbZ38xoj1X9HPkZhbmaBGUD1W8vxAfffbDe8bA6AKnQ==
+            }
+        engines: { node: ">=18" }
+        cpu: [ia32]
+        os: [win32]
+
+    "@esbuild/win32-ia32@0.24.0":
+        resolution:
+            {
+                integrity: sha512-vQW36KZolfIudCcTnaTpmLQ24Ha1RjygBo39/aLkM2kmjkWmZGEJ5Gn9l5/7tzXA42QGIoWbICfg6KLLkIw6yw==
+            }
+        engines: { node: ">=18" }
+        cpu: [ia32]
+        os: [win32]
+
+    "@esbuild/win32-x64@0.23.1":
+        resolution:
+            {
+                integrity: sha512-BHpFFeslkWrXWyUPnbKm+xYYVYruCinGcftSBaa8zoF9hZO4BcSCFUvHVTtzpIY6YzUnYtuEhZ+C9iEXjxnasg==
+            }
+        engines: { node: ">=18" }
+        cpu: [x64]
+        os: [win32]
+
+    "@esbuild/win32-x64@0.24.0":
+        resolution:
+            {
+                integrity: sha512-7IAFPrjSQIJrGsK6flwg7NFmwBoSTyF3rl7If0hNUFQU4ilTsEPL6GuMuU9BfIWVVGuRnuIidkSMC+c0Otu8IA==
+            }
+        engines: { node: ">=18" }
+        cpu: [x64]
+        os: [win32]
+
+    "@eslint-community/eslint-utils@4.4.1":
+        resolution:
+            {
+                integrity: sha512-s3O3waFUrMV8P/XaF/+ZTp1X9XBZW1a4B97ZnjQF2KYWaFD2A8KyFBsrsfSjEmjn3RGWAIuvlneuZm3CUK3jbA==
+            }
+        engines: { node: ^12.22.0 || ^14.17.0 || >=16.0.0 }
+        peerDependencies:
+            eslint: ^6.0.0 || ^7.0.0 || >=8.0.0
+
+    "@eslint-community/regexpp@4.12.1":
+        resolution:
+            {
+                integrity: sha512-CCZCDJuduB9OUkFkY2IgppNZMi2lBQgD2qzwXkEia16cge2pijY/aXi96CJMquDMn3nJdlPV1A5KrJEXwfLNzQ==
+            }
+        engines: { node: ^12.0.0 || ^14.0.0 || >=16.0.0 }
+
+    "@eslint/config-array@0.19.0":
+        resolution:
+            {
+                integrity: sha512-zdHg2FPIFNKPdcHWtiNT+jEFCHYVplAXRDlQDyqy0zGx/q2parwh7brGJSiTxRk/TSMkbM//zt/f5CHgyTyaSQ==
+            }
+        engines: { node: ^18.18.0 || ^20.9.0 || >=21.1.0 }
+
+    "@eslint/core@0.9.0":
+        resolution:
+            {
+                integrity: sha512-7ATR9F0e4W85D/0w7cU0SNj7qkAexMG+bAHEZOjo9akvGuhHE2m7umzWzfnpa0XAg5Kxc1BWmtPMV67jJ+9VUg==
+            }
+        engines: { node: ^18.18.0 || ^20.9.0 || >=21.1.0 }
+
+    "@eslint/eslintrc@3.2.0":
+        resolution:
+            {
+                integrity: sha512-grOjVNN8P3hjJn/eIETF1wwd12DdnwFDoyceUJLYYdkpbwq3nLi+4fqrTAONx7XDALqlL220wC/RHSC/QTI/0w==
+            }
+        engines: { node: ^18.18.0 || ^20.9.0 || >=21.1.0 }
+
+    "@eslint/js@9.16.0":
+        resolution:
+            {
+                integrity: sha512-tw2HxzQkrbeuvyj1tG2Yqq+0H9wGoI2IMk4EOsQeX+vmd75FtJAzf+gTA69WF+baUKRYQ3x2kbLE08js5OsTVg==
+            }
+        engines: { node: ^18.18.0 || ^20.9.0 || >=21.1.0 }
+
+    "@eslint/object-schema@2.1.4":
+        resolution:
+            {
+                integrity: sha512-BsWiH1yFGjXXS2yvrf5LyuoSIIbPrGUWob917o+BTKuZ7qJdxX8aJLRxs1fS9n6r7vESrq1OUqb68dANcFXuQQ==
+            }
+        engines: { node: ^18.18.0 || ^20.9.0 || >=21.1.0 }
+
+    "@eslint/plugin-kit@0.2.3":
+        resolution:
+            {
+                integrity: sha512-2b/g5hRmpbb1o4GnTZax9N9m0FXzz9OV42ZzI4rDDMDuHUqigAiQCEWChBWCY4ztAGVRjoWT19v0yMmc5/L5kA==
+            }
+        engines: { node: ^18.18.0 || ^20.9.0 || >=21.1.0 }
+
+    "@fal-works/esbuild-plugin-global-externals@2.1.2":
+        resolution:
+            {
+                integrity: sha512-cEee/Z+I12mZcFJshKcCqC8tuX5hG3s+d+9nZ3LabqKF1vKdF41B92pJVCBggjAGORAeOzyyDDKrZwIkLffeOQ==
+            }
+
+    "@gar/promisify@1.1.3":
+        resolution:
+            {
+                integrity: sha512-k2Ty1JcVojjJFwrg/ThKi2ujJ7XNLYaFGNB/bWT9wGR+oSMJHMa5w+CUq6p/pVrKeNNgA7pCqEcjSnHVoqJQFw==
+            }
+
+    "@humanfs/core@0.19.1":
+        resolution:
+            {
+                integrity: sha512-5DyQ4+1JEUzejeK1JGICcideyfUbGixgS9jNgex5nqkW+cY7WZhxBigmieN5Qnw9ZosSNVC9KQKyb+GUaGyKUA==
+            }
+        engines: { node: ">=18.18.0" }
+
+    "@humanfs/node@0.16.6":
+        resolution:
+            {
+                integrity: sha512-YuI2ZHQL78Q5HbhDiBA1X4LmYdXCKCMQIfw0pw7piHJwyREFebJUvrQN4cMssyES6x+vfUbx1CIpaQUKYdQZOw==
+            }
+        engines: { node: ">=18.18.0" }
+
+    "@humanwhocodes/module-importer@1.0.1":
+        resolution:
+            {
+                integrity: sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==
+            }
+        engines: { node: ">=12.22" }
+
+    "@humanwhocodes/retry@0.3.1":
+        resolution:
+            {
+                integrity: sha512-JBxkERygn7Bv/GbN5Rv8Ul6LVknS+5Bp6RgDC/O8gEBU/yeH5Ui5C/OlWrTb6qct7LjjfT6Re2NxB0ln0yYybA==
+            }
+        engines: { node: ">=18.18" }
+
+    "@humanwhocodes/retry@0.4.1":
+        resolution:
+            {
+                integrity: sha512-c7hNEllBlenFTHBky65mhq8WD2kbN9Q6gk0bTk8lSBvc554jpXSkST1iePudpt7+A/AQvuHs9EMqjHDXMY1lrA==
+            }
+        engines: { node: ">=18.18" }
+
+    "@isaacs/cliui@8.0.2":
+        resolution:
+            {
+                integrity: sha512-O8jcjabXaleOG9DQ0+ARXWZBTfnP4WNAqzuiJK7ll44AmxGKv/J2M4TPjxjY3znBCfvBXFzucm1twdyFybFqEA==
+            }
+        engines: { node: ">=12" }
+
+    "@malept/cross-spawn-promise@2.0.0":
+        resolution:
+            {
+                integrity: sha512-1DpKU0Z5ThltBwjNySMC14g0CkbyhCaz9FkhxqNsZI6uAPJXFS8cMXlBKo26FJ8ZuW6S9GCMcR9IO5k2X5/9Fg==
+            }
+        engines: { node: ">= 12.13.0" }
+
+    "@malept/flatpak-bundler@0.4.0":
+        resolution:
+            {
+                integrity: sha512-9QOtNffcOF/c1seMCDnjckb3R9WHcG34tky+FHpNKKCW0wc/scYLwMtO+ptyGUfMW0/b/n4qRiALlaFHc9Oj7Q==
+            }
+        engines: { node: ">= 10.0.0" }
+
+    "@nodelib/fs.scandir@2.1.5":
+        resolution:
+            {
+                integrity: sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==
+            }
+        engines: { node: ">= 8" }
+
+    "@nodelib/fs.stat@2.0.5":
+        resolution:
+            {
+                integrity: sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==
+            }
+        engines: { node: ">= 8" }
+
+    "@nodelib/fs.walk@1.2.8":
+        resolution:
+            {
+                integrity: sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==
+            }
+        engines: { node: ">= 8" }
+
+    "@npmcli/fs@2.1.2":
+        resolution:
+            {
+                integrity: sha512-yOJKRvohFOaLqipNtwYB9WugyZKhC/DZC4VYPmpaCzDBrA8YpK3qHZ8/HGscMnE4GqbkLNuVcCnxkeQEdGt6LQ==
+            }
+        engines: { node: ^12.13.0 || ^14.15.0 || >=16.0.0 }
+
+    "@npmcli/move-file@2.0.1":
+        resolution:
+            {
+                integrity: sha512-mJd2Z5TjYWq/ttPLLGqArdtnC74J6bOzg4rMDnN+p1xTacZ2yPRCk2y0oSWQtygLR9YVQXgOcONrwtnk3JupxQ==
+            }
+        engines: { node: ^12.13.0 || ^14.15.0 || >=16.0.0 }
+        deprecated: This functionality has been moved to @npmcli/fs
+
+    "@pkgjs/parseargs@0.11.0":
+        resolution:
+            {
+                integrity: sha512-+1VkjdD0QBLPodGrJUeqarH8VAIvQODIbwh9XpP5Syisf7YoQgsJKPNFoqqLQlu+VQ/tVSshMR6loPMn8U+dPg==
+            }
+        engines: { node: ">=14" }
+
+    "@pkgr/core@0.1.1":
+        resolution:
+            {
+                integrity: sha512-cq8o4cWH0ibXh9VGi5P20Tu9XF/0fFXl9EUinr9QfTM7a7p0oTA4iJRCQWppXR1Pg8dSM0UCItCkPwsk9qWWYA==
+            }
+        engines: { node: ^12.20.0 || ^14.18.0 || >=16.0.0 }
+
+    "@rtsao/scc@1.1.0":
+        resolution:
+            {
+                integrity: sha512-zt6OdqaDoOnJ1ZYsCYGt9YmWzDXl4vQdKTyJev62gFhRGKdx7mcT54V9KIjg+d2wi9EXsPvAPKe7i7WjfVWB8g==
+            }
+
+    "@sindresorhus/is@4.6.0":
+        resolution:
+            {
+                integrity: sha512-t09vSN3MdfsyCHoFcTRCH/iUtG7OJ0CsjzB8cjAmKc/va/kIgeDI/TxsigdncE/4be734m0cvIYwNaV4i2XqAw==
+            }
+        engines: { node: ">=10" }
+
+    "@stylistic/eslint-plugin@2.11.0":
+        resolution:
+            {
+                integrity: sha512-PNRHbydNG5EH8NK4c+izdJlxajIR6GxcUhzsYNRsn6Myep4dsZt0qFCz3rCPnkvgO5FYibDcMqgNHUT+zvjYZw==
+            }
+        engines: { node: ^18.18.0 || ^20.9.0 || >=21.1.0 }
+        peerDependencies:
+            eslint: ">=8.40.0"
+
+    "@szmarczak/http-timer@4.0.6":
+        resolution:
+            {
+                integrity: sha512-4BAffykYOgO+5nzBWYwE3W90sBgLJoUPRWWcL8wlyiM8IB8ipJz3UMJ9KXQd1RKQXpKp8Tutn80HZtWsu2u76w==
+            }
+        engines: { node: ">=10" }
+
+    "@tootallnate/once@2.0.0":
+        resolution:
+            {
+                integrity: sha512-XCuKFP5PS55gnMVu3dty8KPatLqUoy/ZYzDzAGCQ8JNFCkLXzmI7vNHCR+XpbZaMWQK/vQubr7PkYq8g470J/A==
+            }
+        engines: { node: ">= 10" }
+
+    "@types/cacheable-request@6.0.3":
+        resolution:
+            {
+                integrity: sha512-IQ3EbTzGxIigb1I3qPZc1rWJnH0BmSKv5QYTalEwweFvyBDLSAe24zP0le/hyi7ecGfZVlIVAg4BZqb8WBwKqw==
+            }
+
+    "@types/debug@4.1.12":
+        resolution:
+            {
+                integrity: sha512-vIChWdVG3LG1SMxEvI/AK+FWJthlrqlTu7fbrlywTkkaONwk/UAGaULXRlf8vkzFBLVm0zkMdCquhL5aOjhXPQ==
+            }
+
+    "@types/estree@1.0.6":
+        resolution:
+            {
+                integrity: sha512-AYnb1nQyY49te+VRAVgmzfcgjYS91mY5P0TKUDCLEM+gNnA+3T6rWITXRLYCpahpqSQbN5cE+gHpnPyXjHWxcw==
+            }
+
+    "@types/fs-extra@9.0.13":
+        resolution:
+            {
+                integrity: sha512-nEnwB++1u5lVDM2UI4c1+5R+FYaKfaAzS4OococimjVm3nQw3TuzH5UNsocrcTBbhnerblyHj4A49qXbIiZdpA==
+            }
+
+    "@types/http-cache-semantics@4.0.4":
+        resolution:
+            {
+                integrity: sha512-1m0bIFVc7eJWyve9S0RnuRgcQqF/Xd5QsUZAZeQFr1Q3/p9JWoQQEqmVy+DPTNpGXwhgIetAoYF8JSc33q29QA==
+            }
+
+    "@types/json-schema@7.0.15":
+        resolution:
+            {
+                integrity: sha512-5+fP8P8MFNC+AyZCDxrB2pkZFPGzqQWUzpSeuuVLvm8VMcorNYavBqoFcxK8bQz4Qsbn4oUEEem4wDLfcysGHA==
+            }
+
+    "@types/json5@0.0.29":
+        resolution:
+            {
+                integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==
+            }
+
+    "@types/keyv@3.1.4":
+        resolution:
+            {
+                integrity: sha512-BQ5aZNSCpj7D6K2ksrRCTmKRLEpnPvWDiLPfoGyhZ++8YtiK9d/3DBKPJgry359X/P1PfruyYwvnvwFjuEiEIg==
+            }
+
+    "@types/lodash@4.17.13":
+        resolution:
+            {
+                integrity: sha512-lfx+dftrEZcdBPczf9d0Qv0x+j/rfNCMuC6OcfXmO8gkfeNAY88PgKUbvG56whcN23gc27yenwF6oJZXGFpYxg==
+            }
+
+    "@types/ms@0.7.34":
+        resolution:
+            {
+                integrity: sha512-nG96G3Wp6acyAgJqGasjODb+acrI7KltPiRxzHPXnP3NgI28bpQDRv53olbqGXbfcgF5aiiHmO3xpwEpS5Ld9g==
+            }
+
+    "@types/node@18.19.67":
+        resolution:
+            {
+                integrity: sha512-wI8uHusga+0ZugNp0Ol/3BqQfEcCCNfojtO6Oou9iVNGPTL6QNSdnUdqq85fRgIorLhLMuPIKpsN98QE9Nh+KQ==
+            }
+
+    "@types/node@20.17.9":
+        resolution:
+            {
+                integrity: sha512-0JOXkRyLanfGPE2QRCwgxhzlBAvaRdCNMcvbd7jFfpmD4eEXll7LRwy5ymJmyeZqk7Nh7eD2LeUyQ68BbndmXw==
+            }
+
+    "@types/node@22.10.1":
+        resolution:
+            {
+                integrity: sha512-qKgsUwfHZV2WCWLAnVP1JqnpE6Im6h3Y0+fYgMTasNQ7V++CBX5OT1as0g0f+OyubbFqhf6XVNIsmN4IIhEgGQ==
+            }
+
+    "@types/plist@3.0.5":
+        resolution:
+            {
+                integrity: sha512-E6OCaRmAe4WDmWNsL/9RMqdkkzDCY1etutkflWk4c+AcjDU07Pcz1fQwTX0TQz+Pxqn9i4L1TU3UFpjnrcDgxA==
+            }
+
+    "@types/prop-types@15.7.13":
+        resolution:
+            {
+                integrity: sha512-hCZTSvwbzWGvhqxp/RqVqwU999pBf2vp7hzIjiYOsl8wqOmUxkQ6ddw1cV3l8811+kdUFus/q4d1Y3E3SyEifA==
+            }
+
+    "@types/react-dom@18.3.1":
+        resolution:
+            {
+                integrity: sha512-qW1Mfv8taImTthu4KoXgDfLuk4bydU6Q/TkADnDWWHwi4NX4BR+LWfTp2sVmTqRrsHvyDDTelgelxJ+SsejKKQ==
+            }
+
+    "@types/react@17.0.2":
+        resolution:
+            {
+                integrity: sha512-Xt40xQsrkdvjn1EyWe1Bc0dJLcil/9x2vAuW7ya+PuQip4UYUaXyhzWmAbwRsdMgwOFHpfp7/FFZebDU6Y8VHA==
+            }
+
+    "@types/react@18.3.12":
+        resolution:
+            {
+                integrity: sha512-D2wOSq/d6Agt28q7rSI3jhU7G6aiuzljDGZ2hTZHIkrTLUI+AF3WMeKkEZ9nN2fkBAlcktT6vcZjDFiIhMYEQw==
+            }
+
+    "@types/responselike@1.0.3":
+        resolution:
+            {
+                integrity: sha512-H/+L+UkTV33uf49PH5pCAUBVPNj2nDBXTN+qS1dOwyyg24l3CcicicCA7ca+HMvJBZcFgl5r8e+RR6elsb4Lyw==
+            }
+
+    "@types/verror@1.10.10":
+        resolution:
+            {
+                integrity: sha512-l4MM0Jppn18hb9xmM6wwD1uTdShpf9Pn80aXTStnK1C94gtPvJcV2FrDmbOQUAQfJ1cKZHktkQUDwEqaAKXMMg==
+            }
+
+    "@types/yauzl@2.10.3":
+        resolution:
+            {
+                integrity: sha512-oJoftv0LSuaDZE3Le4DbKX+KS9G36NzOeSap90UIK0yMA/NhKJhqlSGtNDORNRaIbQfzjXDrQa0ytJ6mNRGz/Q==
+            }
+
+    "@typescript-eslint/eslint-plugin@8.17.0":
+        resolution:
+            {
+                integrity: sha512-HU1KAdW3Tt8zQkdvNoIijfWDMvdSweFYm4hWh+KwhPstv+sCmWb89hCIP8msFm9N1R/ooh9honpSuvqKWlYy3w==
+            }
+        engines: { node: ^18.18.0 || ^20.9.0 || >=21.1.0 }
+        peerDependencies:
+            "@typescript-eslint/parser": ^8.0.0 || ^8.0.0-alpha.0
+            eslint: ^8.57.0 || ^9.0.0
+            typescript: "*"
+        peerDependenciesMeta:
+            typescript:
+                optional: true
+
+    "@typescript-eslint/parser@8.17.0":
+        resolution:
+            {
+                integrity: sha512-Drp39TXuUlD49F7ilHHCG7TTg8IkA+hxCuULdmzWYICxGXvDXmDmWEjJYZQYgf6l/TFfYNE167m7isnc3xlIEg==
+            }
+        engines: { node: ^18.18.0 || ^20.9.0 || >=21.1.0 }
+        peerDependencies:
+            eslint: ^8.57.0 || ^9.0.0
+            typescript: "*"
+        peerDependenciesMeta:
+            typescript:
+                optional: true
+
+    "@typescript-eslint/scope-manager@8.17.0":
+        resolution:
+            {
+                integrity: sha512-/ewp4XjvnxaREtqsZjF4Mfn078RD/9GmiEAtTeLQ7yFdKnqwTOgRMSvFz4et9U5RiJQ15WTGXPLj89zGusvxBg==
+            }
+        engines: { node: ^18.18.0 || ^20.9.0 || >=21.1.0 }
+
+    "@typescript-eslint/type-utils@8.17.0":
+        resolution:
+            {
+                integrity: sha512-q38llWJYPd63rRnJ6wY/ZQqIzPrBCkPdpIsaCfkR3Q4t3p6sb422zougfad4TFW9+ElIFLVDzWGiGAfbb/v2qw==
+            }
+        engines: { node: ^18.18.0 || ^20.9.0 || >=21.1.0 }
+        peerDependencies:
+            eslint: ^8.57.0 || ^9.0.0
+            typescript: "*"
+        peerDependenciesMeta:
+            typescript:
+                optional: true
+
+    "@typescript-eslint/types@8.17.0":
+        resolution:
+            {
+                integrity: sha512-gY2TVzeve3z6crqh2Ic7Cr+CAv6pfb0Egee7J5UAVWCpVvDI/F71wNfolIim4FE6hT15EbpZFVUj9j5i38jYXA==
+            }
+        engines: { node: ^18.18.0 || ^20.9.0 || >=21.1.0 }
+
+    "@typescript-eslint/typescript-estree@8.17.0":
+        resolution:
+            {
+                integrity: sha512-JqkOopc1nRKZpX+opvKqnM3XUlM7LpFMD0lYxTqOTKQfCWAmxw45e3qlOCsEqEB2yuacujivudOFpCnqkBDNMw==
+            }
+        engines: { node: ^18.18.0 || ^20.9.0 || >=21.1.0 }
+        peerDependencies:
+            typescript: "*"
+        peerDependenciesMeta:
+            typescript:
+                optional: true
+
+    "@typescript-eslint/utils@8.17.0":
+        resolution:
+            {
+                integrity: sha512-bQC8BnEkxqG8HBGKwG9wXlZqg37RKSMY7v/X8VEWD8JG2JuTHuNK0VFvMPMUKQcbk6B+tf05k+4AShAEtCtJ/w==
+            }
+        engines: { node: ^18.18.0 || ^20.9.0 || >=21.1.0 }
+        peerDependencies:
+            eslint: ^8.57.0 || ^9.0.0
+            typescript: "*"
+        peerDependenciesMeta:
+            typescript:
+                optional: true
+
+    "@typescript-eslint/visitor-keys@8.17.0":
+        resolution:
+            {
+                integrity: sha512-1Hm7THLpO6ww5QU6H/Qp+AusUUl+z/CAm3cNZZ0jQvon9yicgO7Rwd+/WWRpMKLYV6p2UvdbR27c86rzCPpreg==
+            }
+        engines: { node: ^18.18.0 || ^20.9.0 || >=21.1.0 }
+
+    "@vencord/types@1.8.4":
+        resolution:
+            {
+                integrity: sha512-ogLqIOHVO+5zxKUVxAfGIAUZoEfIomrlg6f0cZ/2yd5vBAn1fA9Gi/NASoKfHZuJt8ZcYw329bgn0ah/VufqMg==
+            }
+
+    "@vencord/venmic@6.1.0":
+        resolution:
+            {
+                integrity: sha512-YiCtzml/W8tYbGhu3jm5jfbbEnl2slKKARNK0jO+8qV979k9eFnfIRTxvhMN/SWq1h8ZNJdXVwvXpffQwq0RuA==
+            }
+        engines: { node: ">=14.15" }
+        os: [linux]
+
+    "@xmldom/xmldom@0.8.10":
+        resolution:
+            {
+                integrity: sha512-2WALfTl4xo2SkGCYRt6rDTFfk9R1czmBvUQy12gK2KuRKIpWEhcbbzy8EZXtz/jkRqHX8bFEc6FC1HjX4TUWYw==
+            }
+        engines: { node: ">=10.0.0" }
+
+    abbrev@1.1.1:
+        resolution:
+            {
+                integrity: sha512-nne9/IiQ/hzIhY6pdDnbBtz7DjPTKrY00P/zvPSm5pOFkl6xuGrGnXn/VtTNNfNtAfZ9/1RtehkszU9qcTii0Q==
+            }
+
+    acorn-jsx@5.3.2:
+        resolution:
+            {
+                integrity: sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==
+            }
+        peerDependencies:
+            acorn: ^6.0.0 || ^7.0.0 || ^8.0.0
+
+    acorn@8.14.0:
+        resolution:
+            {
+                integrity: sha512-cl669nCJTZBsL97OF4kUQm5g5hC2uihk0NxY3WENAC0TYdILVkAyHymAntgxGkl7K+t0cXIrH5siy5S4XkFycA==
+            }
+        engines: { node: ">=0.4.0" }
+        hasBin: true
+
+    agent-base@6.0.2:
+        resolution:
+            {
+                integrity: sha512-RZNwNclF7+MS/8bDg70amg32dyeZGZxiDuQmZxKLAlQjr3jGyLx+4Kkk58UO7D2QdgFIQCovuSuZESne6RG6XQ==
+            }
+        engines: { node: ">= 6.0.0" }
+
+    agent-base@7.1.1:
+        resolution:
+            {
+                integrity: sha512-H0TSyFNDMomMNJQBn8wFV5YC/2eJ+VXECwOadZJT554xP6cODZHPX3H9QMQECxvrgiSOP1pHjy1sMWQVYJOUOA==
+            }
+        engines: { node: ">= 14" }
+
+    agentkeepalive@4.5.0:
+        resolution:
+            {
+                integrity: sha512-5GG/5IbQQpC9FpkRGsSvZI5QYeSCzlJHdpBQntCsuTOxhKD8lqKhrleg2Yi7yvMIf82Ycmmqln9U8V9qwEiJew==
+            }
+        engines: { node: ">= 8.0.0" }
+
+    aggregate-error@3.1.0:
+        resolution:
+            {
+                integrity: sha512-4I7Td01quW/RpocfNayFdFVk1qSuoh0E7JrbRJ16nH01HhKFQ88INq9Sd+nd72zqRySlr9BmDA8xlEJ6vJMrYA==
+            }
+        engines: { node: ">=8" }
+
+    ajv-keywords@3.5.2:
+        resolution:
+            {
+                integrity: sha512-5p6WTN0DdTGVQk6VjcEju19IgaHudalcfabD7yhDGeA6bcQnmL+CpveLJq/3hvfwd1aof6L386Ougkx6RfyMIQ==
+            }
+        peerDependencies:
+            ajv: ^6.9.1
+
+    ajv@6.12.6:
+        resolution:
+            {
+                integrity: sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==
+            }
+
+    ansi-regex@5.0.1:
+        resolution:
+            {
+                integrity: sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==
+            }
+        engines: { node: ">=8" }
+
+    ansi-regex@6.1.0:
+        resolution:
+            {
+                integrity: sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==
+            }
+        engines: { node: ">=12" }
+
+    ansi-styles@4.3.0:
+        resolution:
+            {
+                integrity: sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==
+            }
+        engines: { node: ">=8" }
+
+    ansi-styles@6.2.1:
+        resolution:
+            {
+                integrity: sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==
+            }
+        engines: { node: ">=12" }
+
+    app-builder-bin@5.0.0-alpha.10:
+        resolution:
+            {
+                integrity: sha512-Ev4jj3D7Bo+O0GPD2NMvJl+PGiBAfS7pUGawntBNpCbxtpncfUixqFj9z9Jme7V7s3LBGqsWZZP54fxBX3JKJw==
+            }
+
+    app-builder-lib@25.1.8:
+        resolution:
+            {
+                integrity: sha512-pCqe7dfsQFBABC1jeKZXQWhGcCPF3rPCXDdfqVKjIeWBcXzyC1iOWZdfFhGl+S9MyE/k//DFmC6FzuGAUudNDg==
+            }
+        engines: { node: ">=14.0.0" }
+        peerDependencies:
+            dmg-builder: 25.1.8
+            electron-builder-squirrel-windows: 25.1.8
+
+    aproba@2.0.0:
+        resolution:
+            {
+                integrity: sha512-lYe4Gx7QT+MKGbDsA+Z+he/Wtef0BiwDOlK/XkBrdfsh9J/jPPXbX0tE9x9cl27Tmu5gg3QUbUrQYa/y+KOHPQ==
+            }
+
+    archiver-utils@2.1.0:
+        resolution:
+            {
+                integrity: sha512-bEL/yUb/fNNiNTuUz979Z0Yg5L+LzLxGJz8x79lYmR54fmTIb6ob/hNQgkQnIUDWIFjZVQwl9Xs356I6BAMHfw==
+            }
+        engines: { node: ">= 6" }
+
+    archiver-utils@3.0.4:
+        resolution:
+            {
+                integrity: sha512-KVgf4XQVrTjhyWmx6cte4RxonPLR9onExufI1jhvw/MQ4BB6IsZD5gT8Lq+u/+pRkWna/6JoHpiQioaqFP5Rzw==
+            }
+        engines: { node: ">= 10" }
+
+    archiver@5.3.2:
+        resolution:
+            {
+                integrity: sha512-+25nxyyznAXF7Nef3y0EbBeqmGZgeN/BxHX29Rs39djAfaFalmQ89SE6CWyDCHzGL0yt/ycBtNOmGTW0FyGWNw==
+            }
+        engines: { node: ">= 10" }
+
+    are-we-there-yet@3.0.1:
+        resolution:
+            {
+                integrity: sha512-QZW4EDmGwlYur0Yyf/b2uGucHQMa8aFUP7eu9ddR73vvhFyt4V0Vl3QHPcTNJ8l6qYOBdxgXdnBXQrHilfRQBg==
+            }
+        engines: { node: ^12.13.0 || ^14.15.0 || >=16.0.0 }
+        deprecated: This package is no longer supported.
+
+    argparse@2.0.1:
+        resolution:
+            {
+                integrity: sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==
+            }
+
+    arr-diff@4.0.0:
+        resolution:
+            {
+                integrity: sha512-YVIQ82gZPGBebQV/a8dar4AitzCQs0jjXwMPZllpXMaGjXPYVUawSxQrRsjhjupyVxEvbHgUmIhKVlND+j02kA==
+            }
+        engines: { node: ">=0.10.0" }
+
+    arr-union@3.1.0:
+        resolution:
+            {
+                integrity: sha512-sKpyeERZ02v1FeCZT8lrfJq5u6goHCtpTAzPwJYe7c8SPFOboNjNg1vz2L4VTn9T4PQxEx13TbXLmYUcS6Ug7Q==
+            }
+        engines: { node: ">=0.10.0" }
+
+    array-buffer-byte-length@1.0.1:
+        resolution:
+            {
+                integrity: sha512-ahC5W1xgou+KTXix4sAO8Ki12Q+jf4i0+tmk3sC+zgcynshkHxzpXdImBehiUYKKKDwvfFiJl1tZt6ewscS1Mg==
+            }
+        engines: { node: ">= 0.4" }
+
+    array-includes@3.1.8:
+        resolution:
+            {
+                integrity: sha512-itaWrbYbqpGXkGhZPGUulwnhVf5Hpy1xiCFsGqyIGglbBxmG5vSjxQen3/WGOjPpNEv1RtBLKxbmVXm8HpJStQ==
+            }
+        engines: { node: ">= 0.4" }
+
+    array-unique@0.3.2:
+        resolution:
+            {
+                integrity: sha512-SleRWjh9JUud2wH1hPs9rZBZ33H6T9HOiL0uwGnGx9FpE6wKGyfWugmbkEOIs6qWrZhg0LWeLziLrEwQJhs5mQ==
+            }
+        engines: { node: ">=0.10.0" }
+
+    array.prototype.findlastindex@1.2.5:
+        resolution:
+            {
+                integrity: sha512-zfETvRFA8o7EiNn++N5f/kaCw221hrpGsDmcpndVupkPzEc1Wuf3VgC0qby1BbHs7f5DVYjgtEU2LLh5bqeGfQ==
+            }
+        engines: { node: ">= 0.4" }
+
+    array.prototype.flat@1.3.2:
+        resolution:
+            {
+                integrity: sha512-djYB+Zx2vLewY8RWlNCUdHjDXs2XOgm602S9E7P/UpHgfeHL00cRiIF+IN/G/aUJ7kGPb6yO/ErDI5V2s8iycA==
+            }
+        engines: { node: ">= 0.4" }
+
+    array.prototype.flatmap@1.3.2:
+        resolution:
+            {
+                integrity: sha512-Ewyx0c9PmpcsByhSW4r+9zDU7sGjFc86qf/kKtuSCRdhfbk0SNLLkaT5qvcHnRGgc5NP/ly/y+qkXkqONX54CQ==
+            }
+        engines: { node: ">= 0.4" }
+
+    arraybuffer.prototype.slice@1.0.3:
+        resolution:
+            {
+                integrity: sha512-bMxMKAjg13EBSVscxTaYA4mRc5t1UAXa2kXiGTNfZ079HIWXEkKmkgFrh/nJqamaLSrXO5H4WFFkPEaLJWbs3A==
+            }
+        engines: { node: ">= 0.4" }
+
+    arrpc@https://codeload.github.com/OpenAsar/arrpc/tar.gz/5aadc307cb9bf4479f0a12364a253b07a77ace22:
+        resolution:
+            { tarball: https://codeload.github.com/OpenAsar/arrpc/tar.gz/5aadc307cb9bf4479f0a12364a253b07a77ace22 }
+        version: 3.5.0
+        hasBin: true
+
+    assert-plus@1.0.0:
+        resolution:
+            {
+                integrity: sha512-NfJ4UzBCcQGLDlQq7nHxH+tv3kyZ0hHQqF5BO6J7tNJeP5do1llPr8dZ8zHonfhAu0PHAdMkSo+8o0wxg9lZWw==
+            }
+        engines: { node: ">=0.8" }
+
+    assign-symbols@1.0.0:
+        resolution:
+            {
+                integrity: sha512-Q+JC7Whu8HhmTdBph/Tq59IoRtoy6KAm5zzPv00WdujX82lbAL8K7WVjne7vdCsAmbF4AYaDOPyO3k0kl8qIrw==
+            }
+        engines: { node: ">=0.10.0" }
+
+    astral-regex@2.0.0:
+        resolution:
+            {
+                integrity: sha512-Z7tMw1ytTXt5jqMcOP+OQteU1VuNK9Y02uuJtKQ1Sv69jXQKKg5cibLwGJow8yzZP+eAc18EmLGPal0bp36rvQ==
+            }
+        engines: { node: ">=8" }
+
+    async-exit-hook@2.0.1:
+        resolution:
+            {
+                integrity: sha512-NW2cX8m1Q7KPA7a5M2ULQeZ2wR5qI5PAbw5L0UOMxdioVk9PMZ0h1TmyZEkPYrCvYjDlFICusOu1dlEKAAeXBw==
+            }
+        engines: { node: ">=0.12.0" }
+
+    async@3.2.6:
+        resolution:
+            {
+                integrity: sha512-htCUDlxyyCLMgaM3xXg0C0LW2xqfuQ6p05pCEIsXuyQ+a1koYKTuBMzRNwmybfLgvJDMd0r1LTn4+E0Ti6C2AA==
+            }
+
+    asynckit@0.4.0:
+        resolution:
+            {
+                integrity: sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q==
+            }
+
+    at-least-node@1.0.0:
+        resolution:
+            {
+                integrity: sha512-+q/t7Ekv1EDY2l6Gda6LLiX14rU9TV20Wa3ofeQmwPFZbOMo9DXrLbOjFaaclkXKWidIaopwAObQDqwWtGUjqg==
+            }
+        engines: { node: ">= 4.0.0" }
+
+    atob@2.1.2:
+        resolution:
+            {
+                integrity: sha512-Wm6ukoaOGJi/73p/cl2GvLjTI5JM1k/O14isD73YML8StrH/7/lRFgmg8nICZgD3bZZvjwCGxtMOD3wWNAu8cg==
+            }
+        engines: { node: ">= 4.5.0" }
+        hasBin: true
+
+    available-typed-arrays@1.0.7:
+        resolution:
+            {
+                integrity: sha512-wvUjBtSGN7+7SjNpq/9M2Tg350UZD3q62IFZLbRAR1bSMlCo1ZaeW+BJ+D090e4hIIZLBcTDWe4Mh4jvUDajzQ==
+            }
+        engines: { node: ">= 0.4" }
+
+    axios@1.7.8:
+        resolution:
+            {
+                integrity: sha512-Uu0wb7KNqK2t5K+YQyVCLM76prD5sRFjKHbJYCP1J7JFGEQ6nN7HWn9+04LAeiJ3ji54lgS/gZCH1oxyrf1SPw==
+            }
+
+    balanced-match@1.0.2:
+        resolution:
+            {
+                integrity: sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==
+            }
+
+    base64-js@1.5.1:
+        resolution:
+            {
+                integrity: sha512-AKpaYlHn8t4SVbOHCy+b5+KKgvR4vrsD8vbvrbiQJps7fKDTkjkDry6ji0rUJjC0kzbNePLwzxq8iypo41qeWA==
+            }
+
+    base@0.11.2:
+        resolution:
+            {
+                integrity: sha512-5T6P4xPgpp0YDFvSWwEZ4NoE3aM4QBQXDzmVbraCkFj8zHM+mba8SyqB5DbZWyR7mYHo6Y7BdQo3MoA4m0TeQg==
+            }
+        engines: { node: ">=0.10.0" }
+
+    bl@4.1.0:
+        resolution:
+            {
+                integrity: sha512-1W07cM9gS6DcLperZfFSj+bWLtaPGSOHWhPiGzXmvVJbRLdG82sH/Kn8EtW1VqWVA54AKf2h5k5BbnIbwF3h6w==
+            }
+
+    bluebird-lst@1.0.9:
+        resolution:
+            {
+                integrity: sha512-7B1Rtx82hjnSD4PGLAjVWeYH3tHAcVUmChh85a3lltKQm6FresXh9ErQo6oAv6CqxttczC3/kEg8SY5NluPuUw==
+            }
+
+    bluebird@3.7.2:
+        resolution:
+            {
+                integrity: sha512-XpNj6GDQzdfW+r2Wnn7xiSAd7TM3jzkxGXBGTtWKuSXv1xUV+azxAm8jdWZN06QTQk+2N2XB9jRDkvbmQmcRtg==
+            }
+
+    boolean@3.2.0:
+        resolution:
+            {
+                integrity: sha512-d0II/GO9uf9lfUHH2BQsjxzRJZBdsjgsBiW4BvhWk/3qoKwQFjIDVN19PfX8F2D/r9PCMTtLWjYVCFrpeYUzsw==
+            }
+        deprecated: Package no longer supported. Contact Support at https://www.npmjs.com/support for more info.
+
+    brace-expansion@1.1.11:
+        resolution:
+            {
+                integrity: sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==
+            }
+
+    brace-expansion@2.0.1:
+        resolution:
+            {
+                integrity: sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==
+            }
+
+    braces@3.0.3:
+        resolution:
+            {
+                integrity: sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==
+            }
+        engines: { node: ">=8" }
+
+    buffer-crc32@0.2.13:
+        resolution:
+            {
+                integrity: sha512-VO9Ht/+p3SN7SKWqcrgEzjGbRSJYTx+Q1pTQC0wrWqHx0vpJraQ6GtHx8tvcg1rlK1byhU5gccxgOgj7B0TDkQ==
+            }
+
+    buffer-from@1.1.2:
+        resolution:
+            {
+                integrity: sha512-E+XQCRwSbaaiChtv6k6Dwgc+bx+Bs6vuKJHHl5kox/BaKbhiXzqQOwK4cO22yElGp2OCmjwVhT3HmxgyPGnJfQ==
+            }
+
+    buffer@5.7.1:
+        resolution:
+            {
+                integrity: sha512-EHcyIPBQ4BSGlvjB16k5KgAJ27CIsHY/2JBmCRReo48y9rQ3MaUzWX3KVlBa4U7MyX02HdVj0K7C3WaB3ju7FQ==
+            }
+
+    builder-util-runtime@9.2.10:
+        resolution:
+            {
+                integrity: sha512-6p/gfG1RJSQeIbz8TK5aPNkoztgY1q5TgmGFMAXcY8itsGW6Y2ld1ALsZ5UJn8rog7hKF3zHx5iQbNQ8uLcRlw==
+            }
+        engines: { node: ">=12.0.0" }
+
+    builder-util@25.1.7:
+        resolution:
+            {
+                integrity: sha512-7jPjzBwEGRbwNcep0gGNpLXG9P94VA3CPAZQCzxkFXiV2GMQKlziMbY//rXPI7WKfhsvGgFXjTcXdBEwgXw9ww==
+            }
+
+    cacache@16.1.3:
+        resolution:
+            {
+                integrity: sha512-/+Emcj9DAXxX4cwlLmRI9c166RuL3w30zp4R7Joiv2cQTtTtA+jeuCAjH3ZlGnYS3tKENSrKhAzVVP9GVyzeYQ==
+            }
+        engines: { node: ^12.13.0 || ^14.15.0 || >=16.0.0 }
+
+    cache-base@1.0.1:
+        resolution:
+            {
+                integrity: sha512-AKcdTnFSWATd5/GCPRxr2ChwIJ85CeyrEyjRHlKxQ56d4XJMGym0uAiKn0xbLOGOl3+yRpOTi484dVCEc5AUzQ==
+            }
+        engines: { node: ">=0.10.0" }
+
+    cacheable-lookup@5.0.4:
+        resolution:
+            {
+                integrity: sha512-2/kNscPhpcxrOigMZzbiWF7dz8ilhb/nIHU3EyZiXWXpeq/au8qJ8VhdftMkty3n7Gj6HIGalQG8oiBNB3AJgA==
+            }
+        engines: { node: ">=10.6.0" }
+
+    cacheable-request@7.0.4:
+        resolution:
+            {
+                integrity: sha512-v+p6ongsrp0yTGbJXjgxPow2+DL93DASP4kXCDKb8/bwRtt9OEF3whggkkDkGNzgcWy2XaF4a8nZglC7uElscg==
+            }
+        engines: { node: ">=8" }
+
+    call-bind@1.0.7:
+        resolution:
+            {
+                integrity: sha512-GHTSNSYICQ7scH7sZ+M2rFopRoLh8t2bLSW6BbgrtLsahOIB5iyAVJf9GjWK3cYTDaMj4XdBpM1cA6pIS0Kv2w==
+            }
+        engines: { node: ">= 0.4" }
+
+    callsites@3.1.0:
+        resolution:
+            {
+                integrity: sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==
+            }
+        engines: { node: ">=6" }
+
+    chalk@4.1.2:
+        resolution:
+            {
+                integrity: sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==
+            }
+        engines: { node: ">=10" }
+
+    chownr@2.0.0:
+        resolution:
+            {
+                integrity: sha512-bIomtDF5KGpdogkLd9VspvFzk9KfpyyGlS8YFVZl7TGPBHL5snIOnxeshwVgPteQ9b4Eydl+pVbIyE1DcvCWgQ==
+            }
+        engines: { node: ">=10" }
+
+    chromium-pickle-js@0.2.0:
+        resolution:
+            {
+                integrity: sha512-1R5Fho+jBq0DDydt+/vHWj5KJNJCKdARKOCwZUen84I5BreWoLqRLANH1U87eJy1tiASPtMnGqJJq0ZsLoRPOw==
+            }
+
+    ci-info@3.9.0:
+        resolution:
+            {
+                integrity: sha512-NIxF55hv4nSqQswkAeiOi1r83xy8JldOFDTWiug55KBu9Jnblncd2U6ViHmYgHf01TPZS77NJBhBMKdWj9HQMQ==
+            }
+        engines: { node: ">=8" }
+
+    class-utils@0.3.6:
+        resolution:
+            {
+                integrity: sha512-qOhPa/Fj7s6TY8H8esGu5QNpMMQxz79h+urzrNYN6mn+9BnxlDGf5QZ+XeCDsxSjPqsSR56XOZOJmpeurnLMeg==
+            }
+        engines: { node: ">=0.10.0" }
+
+    clean-stack@2.2.0:
+        resolution:
+            {
+                integrity: sha512-4diC9HaTE+KRAMWhDhrGOECgWZxoevMc5TlkObMqNSsVU62PYzXZ/SMTjzyGAFF1YusgxGcSWTEXBhp0CPwQ1A==
+            }
+        engines: { node: ">=6" }
+
+    cli-cursor@3.1.0:
+        resolution:
+            {
+                integrity: sha512-I/zHAwsKf9FqGoXM4WWRACob9+SNukZTd94DWF57E4toouRulbCxcUh6RKUEOQlYTHJnzkPMySvPNaaSLNfLZw==
+            }
+        engines: { node: ">=8" }
+
+    cli-spinners@2.9.2:
+        resolution:
+            {
+                integrity: sha512-ywqV+5MmyL4E7ybXgKys4DugZbX0FC6LnwrhjuykIjnK9k8OQacQ7axGKnjDXWNhns0xot3bZI5h55H8yo9cJg==
+            }
+        engines: { node: ">=6" }
+
+    cli-truncate@2.1.0:
+        resolution:
+            {
+                integrity: sha512-n8fOixwDD6b/ObinzTrp1ZKFzbgvKZvuz/TvejnLn1aQfC6r52XEx85FmuC+3HI+JM7coBRXUvNqEU2PHVrHpg==
+            }
+        engines: { node: ">=8" }
+
+    cliui@8.0.1:
+        resolution:
+            {
+                integrity: sha512-BSeNnyus75C4//NQ9gQt1/csTXyo/8Sb+afLAkzAptFuMsod9HFokGNudZpi/oQV73hnVK+sR+5PVRMd+Dr7YQ==
+            }
+        engines: { node: ">=12" }
+
+    clone-response@1.0.3:
+        resolution:
+            {
+                integrity: sha512-ROoL94jJH2dUVML2Y/5PEDNaSHgeOdSDicUyS7izcF63G6sTc/FTjLub4b8Il9S8S0beOfYt0TaA5qvFK+w0wA==
+            }
+
+    clone@1.0.4:
+        resolution:
+            {
+                integrity: sha512-JQHZ2QMW6l3aH/j6xCqQThY/9OH4D/9ls34cgkUBiEeocRTU04tHfKPBsUK1PqZCUQM7GiA0IIXJSuXHI64Kbg==
+            }
+        engines: { node: ">=0.8" }
+
+    cmake-js@7.3.0:
+        resolution:
+            {
+                integrity: sha512-dXs2zq9WxrV87bpJ+WbnGKv8WUBXDw8blNiwNHoRe/it+ptscxhQHKB1SJXa1w+kocLMeP28Tk4/eTCezg4o+w==
+            }
+        engines: { node: ">= 14.15.0" }
+        hasBin: true
+
+    collection-visit@1.0.0:
+        resolution:
+            {
+                integrity: sha512-lNkKvzEeMBBjUGHZ+q6z9pSJla0KWAQPvtzhEV9+iGyQYG+pBpl7xKDhxoNSOZH2hhv0v5k0y2yAM4o4SjoSkw==
+            }
+        engines: { node: ">=0.10.0" }
+
+    color-convert@2.0.1:
+        resolution:
+            {
+                integrity: sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==
+            }
+        engines: { node: ">=7.0.0" }
+
+    color-name@1.1.4:
+        resolution:
+            {
+                integrity: sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==
+            }
+
+    color-support@1.1.3:
+        resolution:
+            {
+                integrity: sha512-qiBjkpbMLO/HL68y+lh4q0/O1MZFj2RX6X/KmMa3+gJD3z+WwI1ZzDHysvqHGS3mP6mznPckpXmw1nI9cJjyRg==
+            }
+        hasBin: true
+
+    combined-stream@1.0.8:
+        resolution:
+            {
+                integrity: sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==
+            }
+        engines: { node: ">= 0.8" }
+
+    commander@5.1.0:
+        resolution:
+            {
+                integrity: sha512-P0CysNDQ7rtVw4QIQtm+MRxV66vKFSvlsQvGYXZWR3qFU0jlMKHZZZgw8e+8DSah4UDKMqnknRDQz+xuQXQ/Zg==
+            }
+        engines: { node: ">= 6" }
+
+    compare-version@0.1.2:
+        resolution:
+            {
+                integrity: sha512-pJDh5/4wrEnXX/VWRZvruAGHkzKdr46z11OlTPN+VrATlWWhSKewNCJ1futCO5C7eJB3nPMFZA1LeYtcFboZ2A==
+            }
+        engines: { node: ">=0.10.0" }
+
+    component-emitter@1.3.1:
+        resolution:
+            {
+                integrity: sha512-T0+barUSQRTUQASh8bx02dl+DhF54GtIDY13Y3m9oWTklKbb3Wv974meRpeZ3lp1JpLVECWWNHC4vaG2XHXouQ==
+            }
+
+    compress-commons@4.1.2:
+        resolution:
+            {
+                integrity: sha512-D3uMHtGc/fcO1Gt1/L7i1e33VOvD4A9hfQLP+6ewd+BvG/gQ84Yh4oftEhAdjSMgBgwGL+jsppT7JYNpo6MHHg==
+            }
+        engines: { node: ">= 10" }
+
+    concat-map@0.0.1:
+        resolution:
+            {
+                integrity: sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==
+            }
+
+    config-file-ts@0.2.8-rc1:
+        resolution:
+            {
+                integrity: sha512-GtNECbVI82bT4RiDIzBSVuTKoSHufnU7Ce7/42bkWZJZFLjmDF2WBpVsvRkhKCfKBnTBb3qZrBwPpFBU/Myvhg==
+            }
+
+    console-control-strings@1.1.0:
+        resolution:
+            {
+                integrity: sha512-ty/fTekppD2fIwRvnZAVdeOiGd1c7YXEixbgJTNzqcxJWKQnjJ/V1bNEEE6hygpM3WjwHFUVK6HTjWSzV4a8sQ==
+            }
+
+    copy-descriptor@0.1.1:
+        resolution:
+            {
+                integrity: sha512-XgZ0pFcakEUlbwQEVNg3+QAis1FyTL3Qel9FYy8pSkQqoG3PNoT0bOCQtOXcOkur21r2Eq2kI+IE+gsmAEVlYw==
+            }
+        engines: { node: ">=0.10.0" }
+
+    core-util-is@1.0.2:
+        resolution:
+            {
+                integrity: sha512-3lqz5YjWTYnW6dlDa5TLaTCcShfar1e40rmcJVwCBJC6mWlFuj0eCHIElmG1g5kyuJ/GD+8Wn4FFCcz4gJPfaQ==
+            }
+
+    core-util-is@1.0.3:
+        resolution:
+            {
+                integrity: sha512-ZQBvi1DcpJ4GDqanjucZ2Hj3wEO5pZDS89BWbkcrvdxksJorwUDDZamX9ldFkp9aw2lmBDLgkObEA4DWNJ9FYQ==
+            }
+
+    crc-32@1.2.2:
+        resolution:
+            {
+                integrity: sha512-ROmzCKrTnOwybPcJApAA6WBWij23HVfGVNKqqrZpuyZOHqK2CwHSvpGuyt/UNNvaIjEd8X5IFGp4Mh+Ie1IHJQ==
+            }
+        engines: { node: ">=0.8" }
+        hasBin: true
+
+    crc32-stream@4.0.3:
+        resolution:
+            {
+                integrity: sha512-NT7w2JVU7DFroFdYkeq8cywxrgjPHWkdX1wjpRQXPX5Asews3tA+Ght6lddQO5Mkumffp3X7GEqku3epj2toIw==
+            }
+        engines: { node: ">= 10" }
+
+    crc@3.8.0:
+        resolution:
+            {
+                integrity: sha512-iX3mfgcTMIq3ZKLIsVFAbv7+Mc10kxabAGQb8HvjA1o3T1PIYprbakQ65d3I+2HGHt6nSKkM9PYjgoJO2KcFBQ==
+            }
+
+    cross-spawn@7.0.6:
+        resolution:
+            {
+                integrity: sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==
+            }
+        engines: { node: ">= 8" }
+
+    csstype@3.1.3:
+        resolution:
+            {
+                integrity: sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==
+            }
+
+    data-view-buffer@1.0.1:
+        resolution:
+            {
+                integrity: sha512-0lht7OugA5x3iJLOWFhWK/5ehONdprk0ISXqVFn/NFrDu+cuc8iADFrGQz5BnRK7LLU3JmkbXSxaqX+/mXYtUA==
+            }
+        engines: { node: ">= 0.4" }
+
+    data-view-byte-length@1.0.1:
+        resolution:
+            {
+                integrity: sha512-4J7wRJD3ABAzr8wP+OcIcqq2dlUKp4DVflx++hs5h5ZKydWMI6/D/fAot+yh6g2tHh8fLFTvNOaVN357NvSrOQ==
+            }
+        engines: { node: ">= 0.4" }
+
+    data-view-byte-offset@1.0.0:
+        resolution:
+            {
+                integrity: sha512-t/Ygsytq+R995EJ5PZlD4Cu56sWa8InXySaViRzw9apusqsOO2bQP+SbYzAhR0pFKoB+43lYy8rWban9JSuXnA==
+            }
+        engines: { node: ">= 0.4" }
+
+    debug@2.6.9:
+        resolution:
+            {
+                integrity: sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==
+            }
+        peerDependencies:
+            supports-color: "*"
+        peerDependenciesMeta:
+            supports-color:
+                optional: true
+
+    debug@3.2.7:
+        resolution:
+            {
+                integrity: sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==
+            }
+        peerDependencies:
+            supports-color: "*"
+        peerDependenciesMeta:
+            supports-color:
+                optional: true
+
+    debug@4.3.7:
+        resolution:
+            {
+                integrity: sha512-Er2nc/H7RrMXZBFCEim6TCmMk02Z8vLC2Rbi1KEBggpo0fS6l0S1nnapwmIi3yW/+GOJap1Krg4w0Hg80oCqgQ==
+            }
+        engines: { node: ">=6.0" }
+        peerDependencies:
+            supports-color: "*"
+        peerDependenciesMeta:
+            supports-color:
+                optional: true
+
+    decode-uri-component@0.2.2:
+        resolution:
+            {
+                integrity: sha512-FqUYQ+8o158GyGTrMFJms9qh3CqTKvAqgqsTnkLI8sKu0028orqBhxNMFkFen0zGyg6epACD32pjVk58ngIErQ==
+            }
+        engines: { node: ">=0.10" }
+
+    decompress-response@6.0.0:
+        resolution:
+            {
+                integrity: sha512-aW35yZM6Bb/4oJlZncMH2LCoZtJXTRxES17vE3hoRiowU2kWHaJKFkSBDnDR+cm9J+9QhXmREyIfv0pji9ejCQ==
+            }
+        engines: { node: ">=10" }
+
+    deep-extend@0.6.0:
+        resolution:
+            {
+                integrity: sha512-LOHxIOaPYdHlJRtCQfDIVZtfw/ufM8+rVj649RIHzcm/vGwQRXFt6OPqIFWsm2XEMrNIEtWR64sY1LEKD2vAOA==
+            }
+        engines: { node: ">=4.0.0" }
+
+    deep-is@0.1.4:
+        resolution:
+            {
+                integrity: sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==
+            }
+
+    defaults@1.0.4:
+        resolution:
+            {
+                integrity: sha512-eFuaLoy/Rxalv2kr+lqMlUnrDWV+3j4pljOIJgLIhI058IQfWJ7vXhyEIHu+HtC738klGALYxOKDO0bQP3tg8A==
+            }
+
+    defer-to-connect@2.0.1:
+        resolution:
+            {
+                integrity: sha512-4tvttepXG1VaYGrRibk5EwJd1t4udunSOVMdLSAL6mId1ix438oPwPZMALY41FCijukO1L0twNcGsdzS7dHgDg==
+            }
+        engines: { node: ">=10" }
+
+    define-data-property@1.1.4:
+        resolution:
+            {
+                integrity: sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==
+            }
+        engines: { node: ">= 0.4" }
+
+    define-properties@1.2.1:
+        resolution:
+            {
+                integrity: sha512-8QmQKqEASLd5nx0U1B1okLElbUuuttJ/AnYmRXbbbGDWh6uS208EjD4Xqq/I9wK7u0v6O08XhTWnt5XtEbR6Dg==
+            }
+        engines: { node: ">= 0.4" }
+
+    define-property@0.2.5:
+        resolution:
+            {
+                integrity: sha512-Rr7ADjQZenceVOAKop6ALkkRAmH1A4Gx9hV/7ZujPUN2rkATqFO0JZLZInbAjpZYoJ1gUx8MRMQVkYemcbMSTA==
+            }
+        engines: { node: ">=0.10.0" }
+
+    define-property@1.0.0:
+        resolution:
+            {
+                integrity: sha512-cZTYKFWspt9jZsMscWo8sc/5lbPC9Q0N5nBLgb+Yd915iL3udB1uFgS3B8YCx66UVHq018DAVFoee7x+gxggeA==
+            }
+        engines: { node: ">=0.10.0" }
+
+    define-property@2.0.2:
+        resolution:
+            {
+                integrity: sha512-jwK2UV4cnPpbcG7+VRARKTZPUWowwXA8bzH5NP6ud0oeAxyYPuGZUAC7hMugpCdz4BeSZl2Dl9k66CHJ/46ZYQ==
+            }
+        engines: { node: ">=0.10.0" }
+
+    delayed-stream@1.0.0:
+        resolution:
+            {
+                integrity: sha512-ZySD7Nf91aLB0RxL4KGrKHBXl7Eds1DAmEdcoVawXnLD7SDhpNgtuII2aAkg7a7QS41jxPSZ17p4VdGnMHk3MQ==
+            }
+        engines: { node: ">=0.4.0" }
+
+    delegates@1.0.0:
+        resolution:
+            {
+                integrity: sha512-bd2L678uiWATM6m5Z1VzNCErI3jiGzt6HGY8OVICs40JQq/HALfbyNJmp0UDakEY4pMMaN0Ly5om/B1VI/+xfQ==
+            }
+
+    detect-libc@2.0.3:
+        resolution:
+            {
+                integrity: sha512-bwy0MGW55bG41VqxxypOsdSdGqLwXPI/focwgTYCFMbdUiBAxLg9CFzG08sz2aqzknwiX7Hkl0bQENjg8iLByw==
+            }
+        engines: { node: ">=8" }
+
+    detect-node@2.1.0:
+        resolution:
+            {
+                integrity: sha512-T0NIuQpnTvFDATNuHN5roPwSBG83rFsuO+MXXH9/3N1eFbn4wcPjttvjMLEPWJ0RGUYgQE7cGgS3tNxbqCGM7g==
+            }
+
+    dir-compare@4.2.0:
+        resolution:
+            {
+                integrity: sha512-2xMCmOoMrdQIPHdsTawECdNPwlVFB9zGcz3kuhmBO6U3oU+UQjsue0i8ayLKpgBcm+hcXPMVSGUN9d+pvJ6+VQ==
+            }
+
+    discord-types@1.3.26:
+        resolution:
+            {
+                integrity: sha512-ToG51AOCH+JTQf7b+8vuYQe5Iqwz7nZ7StpECAZ/VZcI1ZhQk13pvt9KkRTfRv1xNvwJ2qib4e3+RifQlo8VPQ==
+            }
+
+    dmg-builder@25.1.8:
+        resolution:
+            {
+                integrity: sha512-NoXo6Liy2heSklTI5OIZbCgXC1RzrDQsZkeEwXhdOro3FT1VBOvbubvscdPnjVuQ4AMwwv61oaH96AbiYg9EnQ==
+            }
+
+    dmg-license@1.0.11:
+        resolution:
+            {
+                integrity: sha512-ZdzmqwKmECOWJpqefloC5OJy1+WZBBse5+MR88z9g9Zn4VY+WYUkAyojmhzJckH5YbbZGcYIuGAkY5/Ys5OM2Q==
+            }
+        engines: { node: ">=8" }
+        os: [darwin]
+        hasBin: true
+
+    doctrine@2.1.0:
+        resolution:
+            {
+                integrity: sha512-35mSku4ZXK0vfCuHEDAwt55dg2jNajHZ1odvF+8SSr82EsZY4QmXfuWso8oEd8zRhVObSN18aM0CjSdoBX7zIw==
+            }
+        engines: { node: ">=0.10.0" }
+
+    dotenv-expand@11.0.7:
+        resolution:
+            {
+                integrity: sha512-zIHwmZPRshsCdpMDyVsqGmgyP0yT8GAgXUnkdAoJisxvf33k7yO6OuoKmcTGuXPWSsm8Oh88nZicRLA9Y0rUeA==
+            }
+        engines: { node: ">=12" }
+
+    dotenv@16.4.6:
+        resolution:
+            {
+                integrity: sha512-JhcR/+KIjkkjiU8yEpaB/USlzVi3i5whwOjpIRNGi9svKEXZSe+Qp6IWAjFjv+2GViAoDRCUv/QLNziQxsLqDg==
+            }
+        engines: { node: ">=12" }
+
+    eastasianwidth@0.2.0:
+        resolution:
+            {
+                integrity: sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==
+            }
+
+    ejs@3.1.10:
+        resolution:
+            {
+                integrity: sha512-UeJmFfOrAQS8OJWPZ4qtgHyWExa088/MtK5UEyoJGFH67cDEXkZSviOiKRCZ4Xij0zxI3JECgYs3oKx+AizQBA==
+            }
+        engines: { node: ">=0.10.0" }
+        hasBin: true
+
+    electron-builder-squirrel-windows@25.1.8:
+        resolution:
+            {
+                integrity: sha512-2ntkJ+9+0GFP6nAISiMabKt6eqBB0kX1QqHNWFWAXgi0VULKGisM46luRFpIBiU3u/TDmhZMM8tzvo2Abn3ayg==
+            }
+
+    electron-builder@25.1.8:
+        resolution:
+            {
+                integrity: sha512-poRgAtUHHOnlzZnc9PK4nzG53xh74wj2Jy7jkTrqZ0MWPoHGh1M2+C//hGeYdA+4K8w4yiVCNYoLXF7ySj2Wig==
+            }
+        engines: { node: ">=14.0.0" }
+        hasBin: true
+
+    electron-publish@25.1.7:
+        resolution:
+            {
+                integrity: sha512-+jbTkR9m39eDBMP4gfbqglDd6UvBC7RLh5Y0MhFSsc6UkGHj9Vj9TWobxevHYMMqmoujL11ZLjfPpMX+Pt6YEg==
+            }
+
+    electron-updater@6.3.9:
+        resolution:
+            {
+                integrity: sha512-2PJNONi+iBidkoC5D1nzT9XqsE8Q1X28Fn6xRQhO3YX8qRRyJ3mkV4F1aQsuRnYPqq6Hw+E51y27W75WgDoofw==
+            }
+
+    electron@33.2.1:
+        resolution:
+            {
+                integrity: sha512-SG/nmSsK9Qg1p6wAW+ZfqU+AV8cmXMTIklUL18NnOKfZLlum4ZsDoVdmmmlL39ZmeCaq27dr7CgslRPahfoVJg==
+            }
+        engines: { node: ">= 12.20.55" }
+        hasBin: true
+
+    emoji-regex@8.0.0:
+        resolution:
+            {
+                integrity: sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==
+            }
+
+    emoji-regex@9.2.2:
+        resolution:
+            {
+                integrity: sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==
+            }
+
+    encoding@0.1.13:
+        resolution:
+            {
+                integrity: sha512-ETBauow1T35Y/WZMkio9jiM0Z5xjHHmJ4XmjZOq1l/dXz3lr2sRn87nJy20RupqSh1F2m3HHPSp8ShIPQJrJ3A==
+            }
+
+    end-of-stream@1.4.4:
+        resolution:
+            {
+                integrity: sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x/oIyhLP5PR1H+phQAHu5Q==
+            }
+
+    env-paths@2.2.1:
+        resolution:
+            {
+                integrity: sha512-+h1lkLKhZMTYjog1VEpJNG7NZJWcuc2DDk/qsqSTRRCOXiLjeQ1d1/udrUGhqMxUgAlwKNZ0cf2uqan5GLuS2A==
+            }
+        engines: { node: ">=6" }
+
+    err-code@2.0.3:
+        resolution:
+            {
+                integrity: sha512-2bmlRpNKBxT/CRmPOlyISQpNj+qSeYvcym/uT0Jx2bMOlKLtSy1ZmLuVxSEKKyor/N5yhvp/ZiG1oE3DEYMSFA==
+            }
+
+    es-abstract@1.23.5:
+        resolution:
+            {
+                integrity: sha512-vlmniQ0WNPwXqA0BnmwV3Ng7HxiGlh6r5U6JcTMNx8OilcAGqVJBHJcPjqOMaczU9fRuRK5Px2BdVyPRnKMMVQ==
+            }
+        engines: { node: ">= 0.4" }
+
+    es-define-property@1.0.0:
+        resolution:
+            {
+                integrity: sha512-jxayLKShrEqqzJ0eumQbVhTYQM27CfT1T35+gCgDFoL82JLsXqTJ76zv6A0YLOgEnLUMvLzsDsGIrl8NFpT2gQ==
+            }
+        engines: { node: ">= 0.4" }
+
+    es-errors@1.3.0:
+        resolution:
+            {
+                integrity: sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==
+            }
+        engines: { node: ">= 0.4" }
+
+    es-object-atoms@1.0.0:
+        resolution:
+            {
+                integrity: sha512-MZ4iQ6JwHOBQjahnjwaC1ZtIBH+2ohjamzAO3oaHcXYup7qxjF2fixyH+Q71voWHeOkI2q/TnJao/KfXYIZWbw==
+            }
+        engines: { node: ">= 0.4" }
+
+    es-set-tostringtag@2.0.3:
+        resolution:
+            {
+                integrity: sha512-3T8uNMC3OQTHkFUsFq8r/BwAXLHvU/9O9mE0fBc/MY5iq/8H7ncvO947LmYA6ldWw9Uh8Yhf25zu6n7nML5QWQ==
+            }
+        engines: { node: ">= 0.4" }
+
+    es-shim-unscopables@1.0.2:
+        resolution:
+            {
+                integrity: sha512-J3yBRXCzDu4ULnQwxyToo/OjdMx6akgVC7K6few0a7F/0wLtmKKN7I73AH5T2836UuXRqN7Qg+IIUw/+YJksRw==
+            }
+
+    es-to-primitive@1.3.0:
+        resolution:
+            {
+                integrity: sha512-w+5mJ3GuFL+NjVtJlvydShqE1eN3h3PbI7/5LAsYJP/2qtuMXjfL2LpHSRqo4b4eSF5K/DH1JXKUAHSB2UW50g==
+            }
+        engines: { node: ">= 0.4" }
+
+    es6-error@4.1.1:
+        resolution:
+            {
+                integrity: sha512-Um/+FxMr9CISWh0bi5Zv0iOD+4cFh5qLeks1qhAopKVAJw3drgKbKySikp7wGhDL0HPeaja0P5ULZrxLkniUVg==
+            }
+
+    esbuild@0.23.1:
+        resolution:
+            {
+                integrity: sha512-VVNz/9Sa0bs5SELtn3f7qhJCDPCF5oMEl5cO9/SSinpE9hbPVvxbd572HH5AKiP7WD8INO53GgfDDhRjkylHEg==
+            }
+        engines: { node: ">=18" }
+        hasBin: true
+
+    esbuild@0.24.0:
+        resolution:
+            {
+                integrity: sha512-FuLPevChGDshgSicjisSooU0cemp/sGXR841D5LHMB7mTVOmsEHcAxaH3irL53+8YDIeVNQEySh4DaYU/iuPqQ==
+            }
+        engines: { node: ">=18" }
+        hasBin: true
+
+    escalade@3.2.0:
+        resolution:
+            {
+                integrity: sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==
+            }
+        engines: { node: ">=6" }
+
+    escape-string-regexp@4.0.0:
+        resolution:
+            {
+                integrity: sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==
+            }
+        engines: { node: ">=10" }
+
+    eslint-config-prettier@9.1.0:
+        resolution:
+            {
+                integrity: sha512-NSWl5BFQWEPi1j4TjVNItzYV7dZXZ+wP6I6ZhrBGpChQhZRUaElihE9uRRkcbRnNb76UMKDF3r+WTmNcGPKsqw==
+            }
+        hasBin: true
+        peerDependencies:
+            eslint: ">=7.0.0"
+
+    eslint-import-resolver-alias@1.1.2:
+        resolution:
+            {
+                integrity: sha512-WdviM1Eu834zsfjHtcGHtGfcu+F30Od3V7I9Fi57uhBEwPkjDcii7/yW8jAT+gOhn4P/vOxxNAXbFAKsrrc15w==
+            }
+        engines: { node: ">= 4" }
+        peerDependencies:
+            eslint-plugin-import: ">=1.4.0"
+
+    eslint-import-resolver-node@0.3.9:
+        resolution:
+            {
+                integrity: sha512-WFj2isz22JahUv+B788TlO3N6zL3nNJGU8CcZbPZvVEkBPaJdCV4vy5wyghty5ROFbCRnm132v8BScu5/1BQ8g==
+            }
+
+    eslint-module-utils@2.12.0:
+        resolution:
+            {
+                integrity: sha512-wALZ0HFoytlyh/1+4wuZ9FJCD/leWHQzzrxJ8+rebyReSLk7LApMyd3WJaLVoN+D5+WIdJyDK1c6JnE65V4Zyg==
+            }
+        engines: { node: ">=4" }
+        peerDependencies:
+            "@typescript-eslint/parser": "*"
+            eslint: "*"
+            eslint-import-resolver-node: "*"
+            eslint-import-resolver-typescript: "*"
+            eslint-import-resolver-webpack: "*"
+        peerDependenciesMeta:
+            "@typescript-eslint/parser":
+                optional: true
+            eslint:
+                optional: true
+            eslint-import-resolver-node:
+                optional: true
+            eslint-import-resolver-typescript:
+                optional: true
+            eslint-import-resolver-webpack:
+                optional: true
+
+    eslint-plugin-import@2.31.0:
+        resolution:
+            {
+                integrity: sha512-ixmkI62Rbc2/w8Vfxyh1jQRTdRTF52VxwRVHl/ykPAmqG+Nb7/kNn+byLP0LxPgI7zWA16Jt82SybJInmMia3A==
+            }
+        engines: { node: ">=4" }
+        peerDependencies:
+            "@typescript-eslint/parser": "*"
+            eslint: ^2 || ^3 || ^4 || ^5 || ^6 || ^7.2.0 || ^8 || ^9
+        peerDependenciesMeta:
+            "@typescript-eslint/parser":
+                optional: true
+
+    eslint-plugin-path-alias@2.1.0:
+        resolution:
+            {
+                integrity: sha512-suHrHK2MmTDsmQhrZs+hvrNI2PBKAnZ4ir7y3oJLXJsjOFBfOJoQd+URqZC7ICHyNqesoZdcA0BxEG8z5p/mPw==
+            }
+        peerDependencies:
+            eslint: ^8.0.0
+
+    eslint-plugin-prettier@5.2.1:
+        resolution:
+            {
+                integrity: sha512-gH3iR3g4JfF+yYPaJYkN7jEl9QbweL/YfkoRlNnuIEHEz1vHVlCmWOS+eGGiRuzHQXdJFCOTxRgvju9b8VUmrw==
+            }
+        engines: { node: ^14.18.0 || >=16.0.0 }
+        peerDependencies:
+            "@types/eslint": ">=8.0.0"
+            eslint: ">=8.0.0"
+            eslint-config-prettier: "*"
+            prettier: ">=3.0.0"
+        peerDependenciesMeta:
+            "@types/eslint":
+                optional: true
+            eslint-config-prettier:
+                optional: true
+
+    eslint-plugin-simple-header@1.2.1:
+        resolution:
+            {
+                integrity: sha512-l9eEOpBkd4T6yVE09WADLVPU6eKHjQ7QjowMChsbYwsge+98NxyIlqvYpQQJWVxakgW7uooFGNVEFdFWzEMcVg==
+            }
+        peerDependencies:
+            eslint: ">=8.41.0"
+
+    eslint-plugin-simple-import-sort@12.1.1:
+        resolution:
+            {
+                integrity: sha512-6nuzu4xwQtE3332Uz0to+TxDQYRLTKRESSc2hefVT48Zc8JthmN23Gx9lnYhu0FtkRSL1oxny3kJ2aveVhmOVA==
+            }
+        peerDependencies:
+            eslint: ">=5.0.0"
+
+    eslint-plugin-unused-imports@4.1.4:
+        resolution:
+            {
+                integrity: sha512-YptD6IzQjDardkl0POxnnRBhU1OEePMV0nd6siHaRBbd+lyh6NAhFEobiznKU7kTsSsDeSD62Pe7kAM1b7dAZQ==
+            }
+        peerDependencies:
+            "@typescript-eslint/eslint-plugin": ^8.0.0-0 || ^7.0.0 || ^6.0.0 || ^5.0.0
+            eslint: ^9.0.0 || ^8.0.0
+        peerDependenciesMeta:
+            "@typescript-eslint/eslint-plugin":
+                optional: true
+
+    eslint-scope@8.2.0:
+        resolution:
+            {
+                integrity: sha512-PHlWUfG6lvPc3yvP5A4PNyBL1W8fkDUccmI21JUu/+GKZBoH/W5u6usENXUrWFRsyoW5ACUjFGgAFQp5gUlb/A==
+            }
+        engines: { node: ^18.18.0 || ^20.9.0 || >=21.1.0 }
+
+    eslint-visitor-keys@3.4.3:
+        resolution:
+            {
+                integrity: sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==
+            }
+        engines: { node: ^12.22.0 || ^14.17.0 || >=16.0.0 }
+
+    eslint-visitor-keys@4.2.0:
+        resolution:
+            {
+                integrity: sha512-UyLnSehNt62FFhSwjZlHmeokpRK59rcz29j+F1/aDgbkbRTk7wIc9XzdoasMUbRNKDM0qQt/+BJ4BrpFeABemw==
+            }
+        engines: { node: ^18.18.0 || ^20.9.0 || >=21.1.0 }
+
+    eslint@9.16.0:
+        resolution:
+            {
+                integrity: sha512-whp8mSQI4C8VXd+fLgSM0lh3UlmcFtVwUQjyKCFfsp+2ItAIYhlq/hqGahGqHE6cv9unM41VlqKk2VtKYR2TaA==
+            }
+        engines: { node: ^18.18.0 || ^20.9.0 || >=21.1.0 }
+        hasBin: true
+        peerDependencies:
+            jiti: "*"
+        peerDependenciesMeta:
+            jiti:
+                optional: true
+
+    espree@10.3.0:
+        resolution:
+            {
+                integrity: sha512-0QYC8b24HWY8zjRnDTL6RiHfDbAWn63qb4LMj1Z4b076A4une81+z03Kg7l7mn/48PUTqoLptSXez8oknU8Clg==
+            }
+        engines: { node: ^18.18.0 || ^20.9.0 || >=21.1.0 }
+
+    esquery@1.6.0:
+        resolution:
+            {
+                integrity: sha512-ca9pw9fomFcKPvFLXhBKUK90ZvGibiGOvRJNbjljY7s7uq/5YO4BOzcYtJqExdx99rF6aAcnRxHmcUHcz6sQsg==
+            }
+        engines: { node: ">=0.10" }
+
+    esrecurse@4.3.0:
+        resolution:
+            {
+                integrity: sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==
+            }
+        engines: { node: ">=4.0" }
+
+    estraverse@5.3.0:
+        resolution:
+            {
+                integrity: sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==
+            }
+        engines: { node: ">=4.0" }
+
+    esutils@2.0.3:
+        resolution:
+            {
+                integrity: sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==
+            }
+        engines: { node: ">=0.10.0" }
+
+    expand-tilde@2.0.2:
+        resolution:
+            {
+                integrity: sha512-A5EmesHW6rfnZ9ysHQjPdJRni0SRar0tjtG5MNtm9n5TUvsYU8oozprtRD4AqHxcZWWlVuAmQo2nWKfN9oyjTw==
+            }
+        engines: { node: ">=0.10.0" }
+
+    exponential-backoff@3.1.1:
+        resolution:
+            {
+                integrity: sha512-dX7e/LHVJ6W3DE1MHWi9S1EYzDESENfLrYohG2G++ovZrYOkm4Knwa0mc1cn84xJOR4KEU0WSchhLbd0UklbHw==
+            }
+
+    extend-shallow@2.0.1:
+        resolution:
+            {
+                integrity: sha512-zCnTtlxNoAiDc3gqY2aYAWFx7XWWiasuF2K8Me5WbN8otHKTUKBwjPtNpRs/rbUZm7KxWAaNj7P1a/p52GbVug==
+            }
+        engines: { node: ">=0.10.0" }
+
+    extend-shallow@3.0.2:
+        resolution:
+            {
+                integrity: sha512-BwY5b5Ql4+qZoefgMj2NUmx+tehVTH/Kf4k1ZEtOHNFcm2wSxMRo992l6X3TIgni2eZVTZ85xMOjF31fwZAj6Q==
+            }
+        engines: { node: ">=0.10.0" }
+
+    extract-zip@2.0.1:
+        resolution:
+            {
+                integrity: sha512-GDhU9ntwuKyGXdZBUgTIe+vXnWj0fppUEtMDL0+idd5Sta8TGpHssn/eusA9mrPr9qNDym6SxAYZjNvCn/9RBg==
+            }
+        engines: { node: ">= 10.17.0" }
+        hasBin: true
+
+    extsprintf@1.4.1:
+        resolution:
+            {
+                integrity: sha512-Wrk35e8ydCKDj/ArClo1VrPVmN8zph5V4AtHwIuHhvMXsKf73UT3BOD+azBIW+3wOJ4FhEH7zyaJCFvChjYvMA==
+            }
+        engines: { "0": node >=0.6.0 }
+
+    fast-deep-equal@3.1.3:
+        resolution:
+            {
+                integrity: sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==
+            }
+
+    fast-diff@1.3.0:
+        resolution:
+            {
+                integrity: sha512-VxPP4NqbUjj6MaAOafWeUn2cXWLcCtljklUtZf0Ind4XQ+QPtmA0b18zZy0jIQx+ExRVCR/ZQpBmik5lXshNsw==
+            }
+
+    fast-glob@3.3.2:
+        resolution:
+            {
+                integrity: sha512-oX2ruAFQwf/Orj8m737Y5adxDQO0LAB7/S5MnxCdTNDd4p6BsyIVsv9JQsATbTSq8KHRpLwIHbVlUNatxd+1Ow==
+            }
+        engines: { node: ">=8.6.0" }
+
+    fast-json-stable-stringify@2.1.0:
+        resolution:
+            {
+                integrity: sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==
+            }
+
+    fast-levenshtein@2.0.6:
+        resolution:
+            {
+                integrity: sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==
+            }
+
+    fastq@1.17.1:
+        resolution:
+            {
+                integrity: sha512-sRVD3lWVIXWg6By68ZN7vho9a1pQcN/WBFaAAsDDFzlJjvoGx0P8z7V1t72grFJfJhu3YPZBuu25f7Kaw2jN1w==
+            }
+
+    fd-slicer@1.1.0:
+        resolution:
+            {
+                integrity: sha512-cE1qsB/VwyQozZ+q1dGxR8LBYNZeofhEdUNGSMbQD3Gw2lAzX9Zb3uIU6Ebc/Fmyjo9AWWfnn0AUCHqtevs/8g==
+            }
+
+    file-entry-cache@8.0.0:
+        resolution:
+            {
+                integrity: sha512-XXTUwCvisa5oacNGRP9SfNtYBNAMi+RPwBFmblZEF7N7swHYQS6/Zfk7SRwx4D5j3CH211YNRco1DEMNVfZCnQ==
+            }
+        engines: { node: ">=16.0.0" }
+
+    filelist@1.0.4:
+        resolution:
+            {
+                integrity: sha512-w1cEuf3S+DrLCQL7ET6kz+gmlJdbq9J7yXCSjK/OZCPA+qEN1WyF4ZAf0YYJa4/shHJra2t/d/r8SV4Ji+x+8Q==
+            }
+
+    fill-range@7.1.1:
+        resolution:
+            {
+                integrity: sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==
+            }
+        engines: { node: ">=8" }
+
+    find-file-up@2.0.1:
+        resolution:
+            {
+                integrity: sha512-qVdaUhYO39zmh28/JLQM5CoYN9byEOKEH4qfa8K1eNV17W0UUMJ9WgbR/hHFH+t5rcl+6RTb5UC7ck/I+uRkpQ==
+            }
+        engines: { node: ">=8" }
+
+    find-pkg@2.0.0:
+        resolution:
+            {
+                integrity: sha512-WgZ+nKbELDa6N3i/9nrHeNznm+lY3z4YfhDDWgW+5P0pdmMj26bxaxU11ookgY3NyP9GC7HvZ9etp0jRFqGEeQ==
+            }
+        engines: { node: ">=8" }
+
+    find-up@5.0.0:
+        resolution:
+            {
+                integrity: sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==
+            }
+        engines: { node: ">=10" }
+
+    flat-cache@4.0.1:
+        resolution:
+            {
+                integrity: sha512-f7ccFPK3SXFHpx15UIGyRJ/FJQctuKZ0zVuN3frBo4HnK3cay9VEW0R6yPYFHC0AgqhukPzKjq22t5DmAyqGyw==
+            }
+        engines: { node: ">=16" }
+
+    flatted@3.3.2:
+        resolution:
+            {
+                integrity: sha512-AiwGJM8YcNOaobumgtng+6NHuOqC3A7MixFeDafM3X9cIUM+xUXoS5Vfgf+OihAYe20fxqNM9yPBXJzRtZ/4eA==
+            }
+
+    follow-redirects@1.15.9:
+        resolution:
+            {
+                integrity: sha512-gew4GsXizNgdoRyqmyfMHyAmXsZDk6mHkSxZFCzW9gwlbtOW44CDtYavM+y+72qD/Vq2l550kMF52DT8fOLJqQ==
+            }
+        engines: { node: ">=4.0" }
+        peerDependencies:
+            debug: "*"
+        peerDependenciesMeta:
+            debug:
+                optional: true
+
+    for-each@0.3.3:
+        resolution:
+            {
+                integrity: sha512-jqYfLp7mo9vIyQf8ykW2v7A+2N4QjeCeI5+Dz9XraiO1ign81wjiH7Fb9vSOWvQfNtmSa4H2RoQTrrXivdUZmw==
+            }
+
+    for-in@1.0.2:
+        resolution:
+            {
+                integrity: sha512-7EwmXrOjyL+ChxMhmG5lnW9MPt1aIeZEwKhQzoBUdTV0N3zuwWDZYVJatDvZ2OyzPUvdIAZDsCetk3coyMfcnQ==
+            }
+        engines: { node: ">=0.10.0" }
+
+    foreground-child@3.3.0:
+        resolution:
+            {
+                integrity: sha512-Ld2g8rrAyMYFXBhEqMz8ZAHBi4J4uS1i/CxGMDnjyFWddMXLVcDp051DZfu+t7+ab7Wv6SMqpWmyFIj5UbfFvg==
+            }
+        engines: { node: ">=14" }
+
+    form-data@4.0.1:
+        resolution:
+            {
+                integrity: sha512-tzN8e4TX8+kkxGPK8D5u0FNmjPUjw3lwC9lSLxxoB/+GtsJG91CO8bSWy73APlgAZzZbXEYZJuxjkHH2w+Ezhw==
+            }
+        engines: { node: ">= 6" }
+
+    fragment-cache@0.2.1:
+        resolution:
+            {
+                integrity: sha512-GMBAbW9antB8iZRHLoGw0b3HANt57diZYFO/HL1JGIC1MjKrdmhxvrJbupnVvpys0zsz7yBApXdQyfepKly2kA==
+            }
+        engines: { node: ">=0.10.0" }
+
+    fs-constants@1.0.0:
+        resolution:
+            {
+                integrity: sha512-y6OAwoSIf7FyjMIv94u+b5rdheZEjzR63GTyZJm5qh4Bi+2YgwLCcI/fPFZkL5PSixOt6ZNKm+w+Hfp/Bciwow==
+            }
+
+    fs-extra@10.1.0:
+        resolution:
+            {
+                integrity: sha512-oRXApq54ETRj4eMiFzGnHWGy+zo5raudjuxN0b8H7s/RU2oW0Wvsx9O0ACRN/kRq9E8Vu/ReskGB5o3ji+FzHQ==
+            }
+        engines: { node: ">=12" }
+
+    fs-extra@11.2.0:
+        resolution:
+            {
+                integrity: sha512-PmDi3uwK5nFuXh7XDTlVnS17xJS7vW36is2+w3xcv8SVxiB4NyATf4ctkVY5bkSjX0Y4nbvZCq1/EjtEyr9ktw==
+            }
+        engines: { node: ">=14.14" }
+
+    fs-extra@8.1.0:
+        resolution:
+            {
+                integrity: sha512-yhlQgA6mnOJUKOsRUFsgJdQCvkKhcz8tlZG5HBQfReYZy46OwLcY+Zia0mtdHsOo9y/hP+CxMN0TU9QxoOtG4g==
+            }
+        engines: { node: ">=6 <7 || >=8" }
+
+    fs-extra@9.1.0:
+        resolution:
+            {
+                integrity: sha512-hcg3ZmepS30/7BSFqRvoo3DOMQu7IjqxO5nCDt+zM9XWjb33Wg7ziNT+Qvqbuc3+gWpzO02JubVyk2G4Zvo1OQ==
+            }
+        engines: { node: ">=10" }
+
+    fs-minipass@2.1.0:
+        resolution:
+            {
+                integrity: sha512-V/JgOLFCS+R6Vcq0slCuaeWEdNC3ouDlJMNIsacH2VtALiu9mV4LPrHc5cDl8k5aw6J8jwgWWpiTo5RYhmIzvg==
+            }
+        engines: { node: ">= 8" }
+
+    fs.realpath@1.0.0:
+        resolution:
+            {
+                integrity: sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==
+            }
+
+    fsevents@2.3.3:
+        resolution:
+            {
+                integrity: sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==
+            }
+        engines: { node: ^8.16.0 || ^10.6.0 || >=11.0.0 }
+        os: [darwin]
+
+    function-bind@1.1.2:
+        resolution:
+            {
+                integrity: sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==
+            }
+
+    function.prototype.name@1.1.6:
+        resolution:
+            {
+                integrity: sha512-Z5kx79swU5P27WEayXM1tBi5Ze/lbIyiNgU3qyXUOf9b2rgXYyF9Dy9Cx+IQv/Lc8WCG6L82zwUPpSS9hGehIg==
+            }
+        engines: { node: ">= 0.4" }
+
+    functions-have-names@1.2.3:
+        resolution:
+            {
+                integrity: sha512-xckBUXyTIqT97tq2x2AMb+g163b5JFysYk0x4qxNFwbfQkmNZoiRHb6sPzI9/QV33WeuvVYBUIiD4NzNIyqaRQ==
+            }
+
+    gauge@4.0.4:
+        resolution:
+            {
+                integrity: sha512-f9m+BEN5jkg6a0fZjleidjN51VE1X+mPFQ2DJ0uv1V39oCLCbsGe6yjbBnp7eK7z/+GAon99a3nHuqbuuthyPg==
+            }
+        engines: { node: ^12.13.0 || ^14.15.0 || >=16.0.0 }
+        deprecated: This package is no longer supported.
+
+    get-caller-file@2.0.5:
+        resolution:
+            {
+                integrity: sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==
+            }
+        engines: { node: 6.* || 8.* || >= 10.* }
+
+    get-intrinsic@1.2.4:
+        resolution:
+            {
+                integrity: sha512-5uYhsJH8VJBTv7oslg4BznJYhDoRI6waYCxMmCdnTrcCrHA/fCFKoTFz2JKKE0HdDFUF7/oQuhzumXJK7paBRQ==
+            }
+        engines: { node: ">= 0.4" }
+
+    get-stream@5.2.0:
+        resolution:
+            {
+                integrity: sha512-nBF+F1rAZVCu/p7rjzgA+Yb4lfYXrpl7a6VmJrU8wF9I1CKvP/QwPNZHnOlwbTkY6dvtFIzFMSyQXbLoTQPRpA==
+            }
+        engines: { node: ">=8" }
+
+    get-symbol-description@1.0.2:
+        resolution:
+            {
+                integrity: sha512-g0QYk1dZBxGwk+Ngc+ltRH2IBp2f7zBkBMBJZCDerh6EhlhSR6+9irMCuT/09zD6qkarHUSn529sK/yL4S27mg==
+            }
+        engines: { node: ">= 0.4" }
+
+    get-tsconfig@4.8.1:
+        resolution:
+            {
+                integrity: sha512-k9PN+cFBmaLWtVz29SkUoqU5O0slLuHJXt/2P+tMVFT+phsSGXGkp9t3rQIqdz0e+06EHNGs3oM6ZX1s2zHxRg==
+            }
+
+    get-value@2.0.6:
+        resolution:
+            {
+                integrity: sha512-Ln0UQDlxH1BapMu3GPtf7CuYNwRZf2gwCuPqbyG6pB8WfmFpzqcy4xtAaAMUhnNqjMKTiCPZG2oMT3YSx8U2NA==
+            }
+        engines: { node: ">=0.10.0" }
+
+    glob-parent@5.1.2:
+        resolution:
+            {
+                integrity: sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==
+            }
+        engines: { node: ">= 6" }
+
+    glob-parent@6.0.2:
+        resolution:
+            {
+                integrity: sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==
+            }
+        engines: { node: ">=10.13.0" }
+
+    glob@10.4.5:
+        resolution:
+            {
+                integrity: sha512-7Bv8RF0k6xjo7d4A/PxYLbUCfb6c+Vpd2/mB2yRDlew7Jb5hEXiCD9ibfO7wpk8i4sevK6DFny9h7EYbM3/sHg==
+            }
+        hasBin: true
+
+    glob@7.2.3:
+        resolution:
+            {
+                integrity: sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==
+            }
+        deprecated: Glob versions prior to v9 are no longer supported
+
+    glob@8.1.0:
+        resolution:
+            {
+                integrity: sha512-r8hpEjiQEYlF2QU0df3dS+nxxSIreXQS1qRhMJM0Q5NDdR386C7jb7Hwwod8Fgiuex+k0GFjgft18yvxm5XoCQ==
+            }
+        engines: { node: ">=12" }
+        deprecated: Glob versions prior to v9 are no longer supported
+
+    global-agent@3.0.0:
+        resolution:
+            {
+                integrity: sha512-PT6XReJ+D07JvGoxQMkT6qji/jVNfX/h364XHZOWeRzy64sSFr+xJ5OX7LI3b4MPQzdL4H8Y8M0xzPpsVMwA8Q==
+            }
+        engines: { node: ">=10.0" }
+
+    global-modules@1.0.0:
+        resolution:
+            {
+                integrity: sha512-sKzpEkf11GpOFuw0Zzjzmt4B4UZwjOcG757PPvrfhxcLFbq0wpsgpOqxpxtxFiCG4DtG93M6XRVbF2oGdev7bg==
+            }
+        engines: { node: ">=0.10.0" }
+
+    global-prefix@1.0.2:
+        resolution:
+            {
+                integrity: sha512-5lsx1NUDHtSjfg0eHlmYvZKv8/nVqX4ckFbM+FrGcQ+04KWcWFo9P5MxPZYSzUvyzmdTbI7Eix8Q4IbELDqzKg==
+            }
+        engines: { node: ">=0.10.0" }
+
+    globals@14.0.0:
+        resolution:
+            {
+                integrity: sha512-oahGvuMGQlPw/ivIYBjVSrWAfWLBeku5tpPE2fOPLi+WHffIWbuh2tCjhyQhTBPMf5E9jDEH4FOmTYgYwbKwtQ==
+            }
+        engines: { node: ">=18" }
+
+    globalthis@1.0.4:
+        resolution:
+            {
+                integrity: sha512-DpLKbNU4WylpxJykQujfCcwYWiV/Jhm50Goo0wrVILAv5jOr9d+H+UR3PhSCD2rCCEIg0uc+G+muBTwD54JhDQ==
+            }
+        engines: { node: ">= 0.4" }
+
+    gopd@1.1.0:
+        resolution:
+            {
+                integrity: sha512-FQoVQnqcdk4hVM4JN1eromaun4iuS34oStkdlLENLdpULsuQcTyXj8w7ayhuUfPwEYZ1ZOooOTT6fdA9Vmx/RA==
+            }
+        engines: { node: ">= 0.4" }
+
+    got@11.8.6:
+        resolution:
+            {
+                integrity: sha512-6tfZ91bOr7bOXnK7PRDCGBLa1H4U080YHNaAQ2KsMGlLEzRbk44nsZF2E1IeRc3vtJHPVbKCYgdFbaGO2ljd8g==
+            }
+        engines: { node: ">=10.19.0" }
+
+    graceful-fs@4.2.11:
+        resolution:
+            {
+                integrity: sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==
+            }
+
+    graphemer@1.4.0:
+        resolution:
+            {
+                integrity: sha512-EtKwoO6kxCL9WO5xipiHTZlSzBm7WLT627TqC/uVRd0HKmq8NXyebnNYxDoBi7wt8eTWrUrKXCOVaFq9x1kgag==
+            }
+
+    has-bigints@1.0.2:
+        resolution:
+            {
+                integrity: sha512-tSvCKtBr9lkF0Ex0aQiP9N+OpV4zi2r/Nee5VkRDbaqv35RLYMzbwQfFSZZH0kR+Rd6302UJZ2p/bJCEoR3VoQ==
+            }
+
+    has-flag@4.0.0:
+        resolution:
+            {
+                integrity: sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==
+            }
+        engines: { node: ">=8" }
+
+    has-property-descriptors@1.0.2:
+        resolution:
+            {
+                integrity: sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==
+            }
+
+    has-proto@1.1.0:
+        resolution:
+            {
+                integrity: sha512-QLdzI9IIO1Jg7f9GT1gXpPpXArAn6cS31R1eEZqz08Gc+uQ8/XiqHWt17Fiw+2p6oTTIq5GXEpQkAlA88YRl/Q==
+            }
+        engines: { node: ">= 0.4" }
+
+    has-symbols@1.1.0:
+        resolution:
+            {
+                integrity: sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==
+            }
+        engines: { node: ">= 0.4" }
+
+    has-tostringtag@1.0.2:
+        resolution:
+            {
+                integrity: sha512-NqADB8VjPFLM2V0VvHUewwwsw0ZWBaIdgo+ieHtK3hasLz4qeCRjYcqfB6AQrBggRKppKF8L52/VqdVsO47Dlw==
+            }
+        engines: { node: ">= 0.4" }
+
+    has-unicode@2.0.1:
+        resolution:
+            {
+                integrity: sha512-8Rf9Y83NBReMnx0gFzA8JImQACstCYWUplepDa9xprwwtmgEZUF0h/i5xSA625zB/I37EtrswSST6OXxwaaIJQ==
+            }
+
+    has-value@0.3.1:
+        resolution:
+            {
+                integrity: sha512-gpG936j8/MzaeID5Yif+577c17TxaDmhuyVgSwtnL/q8UUTySg8Mecb+8Cf1otgLoD7DDH75axp86ER7LFsf3Q==
+            }
+        engines: { node: ">=0.10.0" }
+
+    has-value@1.0.0:
+        resolution:
+            {
+                integrity: sha512-IBXk4GTsLYdQ7Rvt+GRBrFSVEkmuOUy4re0Xjd9kJSUQpnTrWR4/y9RpfexN9vkAPMFuQoeWKwqzPozRTlasGw==
+            }
+        engines: { node: ">=0.10.0" }
+
+    has-values@0.1.4:
+        resolution:
+            {
+                integrity: sha512-J8S0cEdWuQbqD9//tlZxiMuMNmxB8PlEwvYwuxsTmR1G5RXUePEX/SJn7aD0GMLieuZYSwNH0cQuJGwnYunXRQ==
+            }
+        engines: { node: ">=0.10.0" }
+
+    has-values@1.0.0:
+        resolution:
+            {
+                integrity: sha512-ODYZC64uqzmtfGMEAX/FvZiRyWLpAC3vYnNunURUnkGVTS+mI0smVsWaPydRBsE3g+ok7h960jChO8mFcWlHaQ==
+            }
+        engines: { node: ">=0.10.0" }
+
+    hasown@2.0.2:
+        resolution:
+            {
+                integrity: sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==
+            }
+        engines: { node: ">= 0.4" }
+
+    homedir-polyfill@1.0.3:
+        resolution:
+            {
+                integrity: sha512-eSmmWE5bZTK2Nou4g0AI3zZ9rswp7GRKoKXS1BLUkvPviOqs4YTN1djQIqrXy9k5gEtdLPy86JjRwsNM9tnDcA==
+            }
+        engines: { node: ">=0.10.0" }
+
+    hosted-git-info@4.1.0:
+        resolution:
+            {
+                integrity: sha512-kyCuEOWjJqZuDbRHzL8V93NzQhwIB71oFWSyzVo+KPZI+pnQPPxucdkrOZvkLRnrf5URsQM+IJ09Dw29cRALIA==
+            }
+        engines: { node: ">=10" }
+
+    http-cache-semantics@4.1.1:
+        resolution:
+            {
+                integrity: sha512-er295DKPVsV82j5kw1Gjt+ADA/XYHsajl82cGNQG2eyoPkvgUhX+nDIyelzhIWbbsXP39EHcI6l5tYs2FYqYXQ==
+            }
+
+    http-proxy-agent@5.0.0:
+        resolution:
+            {
+                integrity: sha512-n2hY8YdoRE1i7r6M0w9DIw5GgZN0G25P8zLCRQ8rjXtTU3vsNFBI/vWK/UIeE6g5MUUz6avwAPXmL6Fy9D/90w==
+            }
+        engines: { node: ">= 6" }
+
+    http-proxy-agent@7.0.2:
+        resolution:
+            {
+                integrity: sha512-T1gkAiYYDWYx3V5Bmyu7HcfcvL7mUrTWiM6yOfa3PIphViJ/gFPbvidQ+veqSOHci/PxBcDabeUNCzpOODJZig==
+            }
+        engines: { node: ">= 14" }
+
+    http2-wrapper@1.0.3:
+        resolution:
+            {
+                integrity: sha512-V+23sDMr12Wnz7iTcDeJr3O6AIxlnvT/bmaAAAP/Xda35C90p9599p0F1eHR/N1KILWSoWVAiOMFjBBXaXSMxg==
+            }
+        engines: { node: ">=10.19.0" }
+
+    https-proxy-agent@5.0.1:
+        resolution:
+            {
+                integrity: sha512-dFcAjpTQFgoLMzC2VwU+C/CbS7uRL0lWmxDITmqm7C+7F0Odmj6s9l6alZc6AELXhrnggM2CeWSXHGOdX2YtwA==
+            }
+        engines: { node: ">= 6" }
+
+    https-proxy-agent@7.0.5:
+        resolution:
+            {
+                integrity: sha512-1e4Wqeblerz+tMKPIq2EMGiiWW1dIjZOksyHWSUm1rmuvw/how9hBHZ38lAGj5ID4Ik6EdkOw7NmWPy6LAwalw==
+            }
+        engines: { node: ">= 14" }
+
+    humanize-ms@1.2.1:
+        resolution:
+            {
+                integrity: sha512-Fl70vYtsAFb/C06PTS9dZBo7ihau+Tu/DNCk/OyHhea07S+aeMWpFFkUaXRa8fI+ScZbEI8dfSxwY7gxZ9SAVQ==
+            }
+
+    iconv-corefoundation@1.1.7:
+        resolution:
+            {
+                integrity: sha512-T10qvkw0zz4wnm560lOEg0PovVqUXuOFhhHAkixw8/sycy7TJt7v/RrkEKEQnAw2viPSJu6iAkErxnzR0g8PpQ==
+            }
+        engines: { node: ^8.11.2 || >=10 }
+        os: [darwin]
+
+    iconv-lite@0.6.3:
+        resolution:
+            {
+                integrity: sha512-4fCk79wshMdzMp2rH06qWrJE4iolqLhCUH+OiuIgU++RB0+94NlDL81atO7GX55uUKueo0txHNtvEyI6D7WdMw==
+            }
+        engines: { node: ">=0.10.0" }
+
+    ieee754@1.2.1:
+        resolution:
+            {
+                integrity: sha512-dcyqhDvX1C46lXZcVqCpK+FtMRQVdIMN6/Df5js2zouUsqG7I6sFxitIC+7KYK29KdXOLHdu9zL4sFnoVQnqaA==
+            }
+
+    ignore@5.3.2:
+        resolution:
+            {
+                integrity: sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==
+            }
+        engines: { node: ">= 4" }
+
+    import-fresh@3.3.0:
+        resolution:
+            {
+                integrity: sha512-veYYhQa+D1QBKznvhUHxb8faxlrwUnxseDAbAp457E0wLNio2bOSKnjYDhMj+YiAq61xrMGhQk9iXVk5FzgQMw==
+            }
+        engines: { node: ">=6" }
+
+    imurmurhash@0.1.4:
+        resolution:
+            {
+                integrity: sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==
+            }
+        engines: { node: ">=0.8.19" }
+
+    indent-string@4.0.0:
+        resolution:
+            {
+                integrity: sha512-EdDDZu4A2OyIK7Lr/2zG+w5jmbuk1DVBnEwREQvBzspBJkCEbRa8GxU1lghYcaGJCnRWibjDXlq779X1/y5xwg==
+            }
+        engines: { node: ">=8" }
+
+    infer-owner@1.0.4:
+        resolution:
+            {
+                integrity: sha512-IClj+Xz94+d7irH5qRyfJonOdfTzuDaifE6ZPWfx0N0+/ATZCbuTPq2prFl526urkQd90WyUKIh1DfBQ2hMz9A==
+            }
+
+    inflight@1.0.6:
+        resolution:
+            {
+                integrity: sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==
+            }
+        deprecated: This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.
+
+    inherits@2.0.4:
+        resolution:
+            {
+                integrity: sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==
+            }
+
+    ini@1.3.8:
+        resolution:
+            {
+                integrity: sha512-JV/yugV2uzW5iMRSiZAyDtQd+nxtUnjeLt0acNdw98kKLrvuRVyB80tsREOE7yvGVgalhZ6RNXCmEHkUKBKxew==
+            }
+
+    internal-slot@1.0.7:
+        resolution:
+            {
+                integrity: sha512-NGnrKwXzSms2qUUih/ILZ5JBqNTSa1+ZmP6flaIp6KmSElgE9qdndzS3cqjrDovwFdmwsGsLdeFgB6suw+1e9g==
+            }
+        engines: { node: ">= 0.4" }
+
+    ip-address@9.0.5:
+        resolution:
+            {
+                integrity: sha512-zHtQzGojZXTwZTHQqra+ETKd4Sn3vgi7uBmlPoXVWZqYvuKmtI0l/VZTjqGmJY9x88GGOaZ9+G9ES8hC4T4X8g==
+            }
+        engines: { node: ">= 12" }
+
+    is-accessor-descriptor@1.0.1:
+        resolution:
+            {
+                integrity: sha512-YBUanLI8Yoihw923YeFUS5fs0fF2f5TSFTNiYAAzhhDscDa3lEqYuz1pDOEP5KvX94I9ey3vsqjJcLVFVU+3QA==
+            }
+        engines: { node: ">= 0.10" }
+
+    is-array-buffer@3.0.4:
+        resolution:
+            {
+                integrity: sha512-wcjaerHw0ydZwfhiKbXJWLDY8A7yV7KhjQOpb83hGgGfId/aQa4TOvwyzn2PuswW2gPCYEL/nEAiSVpdOj1lXw==
+            }
+        engines: { node: ">= 0.4" }
+
+    is-async-function@2.0.0:
+        resolution:
+            {
+                integrity: sha512-Y1JXKrfykRJGdlDwdKlLpLyMIiWqWvuSd17TvZk68PLAOGOoF4Xyav1z0Xhoi+gCYjZVeC5SI+hYFOfvXmGRCA==
+            }
+        engines: { node: ">= 0.4" }
+
+    is-bigint@1.1.0:
+        resolution:
+            {
+                integrity: sha512-n4ZT37wG78iz03xPRKJrHTdZbe3IicyucEtdRsV5yglwc3GyUfbAfpSeD0FJ41NbUNSt5wbhqfp1fS+BgnvDFQ==
+            }
+        engines: { node: ">= 0.4" }
+
+    is-boolean-object@1.2.0:
+        resolution:
+            {
+                integrity: sha512-kR5g0+dXf/+kXnqI+lu0URKYPKgICtHGGNCDSB10AaUFj3o/HkB3u7WfpRBJGFopxxY0oH3ux7ZsDjLtK7xqvw==
+            }
+        engines: { node: ">= 0.4" }
+
+    is-buffer@1.1.6:
+        resolution:
+            {
+                integrity: sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w==
+            }
+
+    is-callable@1.2.7:
+        resolution:
+            {
+                integrity: sha512-1BC0BVFhS/p0qtw6enp8e+8OD0UrK0oFLztSjNzhcKA3WDuJxxAPXzPuPtKkjEY9UUoEWlX/8fgKeu2S8i9JTA==
+            }
+        engines: { node: ">= 0.4" }
+
+    is-ci@3.0.1:
+        resolution:
+            {
+                integrity: sha512-ZYvCgrefwqoQ6yTyYUbQu64HsITZ3NfKX1lzaEYdkTDcfKzzCI/wthRRYKkdjHKFVgNiXKAKm65Zo1pk2as/QQ==
+            }
+        hasBin: true
+
+    is-core-module@2.15.1:
+        resolution:
+            {
+                integrity: sha512-z0vtXSwucUJtANQWldhbtbt7BnL0vxiFjIdDLAatwhDYty2bad6s+rijD6Ri4YuYJubLzIJLUidCh09e1djEVQ==
+            }
+        engines: { node: ">= 0.4" }
+
+    is-data-descriptor@1.0.1:
+        resolution:
+            {
+                integrity: sha512-bc4NlCDiCr28U4aEsQ3Qs2491gVq4V8G7MQyws968ImqjKuYtTJXrl7Vq7jsN7Ly/C3xj5KWFrY7sHNeDkAzXw==
+            }
+        engines: { node: ">= 0.4" }
+
+    is-data-view@1.0.1:
+        resolution:
+            {
+                integrity: sha512-AHkaJrsUVW6wq6JS8y3JnM/GJF/9cf+k20+iDzlSaJrinEo5+7vRiteOSwBhHRiAyQATN1AmY4hwzxJKPmYf+w==
+            }
+        engines: { node: ">= 0.4" }
+
+    is-date-object@1.0.5:
+        resolution:
+            {
+                integrity: sha512-9YQaSxsAiSwcvS33MBk3wTCVnWK+HhF8VZR2jRxehM16QcVOdHqPn4VPHmRK4lSr38n9JriurInLcP90xsYNfQ==
+            }
+        engines: { node: ">= 0.4" }
+
+    is-descriptor@0.1.7:
+        resolution:
+            {
+                integrity: sha512-C3grZTvObeN1xud4cRWl366OMXZTj0+HGyk4hvfpx4ZHt1Pb60ANSXqCK7pdOTeUQpRzECBSTphqvD7U+l22Eg==
+            }
+        engines: { node: ">= 0.4" }
+
+    is-descriptor@1.0.3:
+        resolution:
+            {
+                integrity: sha512-JCNNGbwWZEVaSPtS45mdtrneRWJFp07LLmykxeFV5F6oBvNF8vHSfJuJgoT472pSfk+Mf8VnlrspaFBHWM8JAw==
+            }
+        engines: { node: ">= 0.4" }
+
+    is-extendable@0.1.1:
+        resolution:
+            {
+                integrity: sha512-5BMULNob1vgFX6EjQw5izWDxrecWK9AM72rugNr0TFldMOi0fj6Jk+zeKIt0xGj4cEfQIJth4w3OKWOJ4f+AFw==
+            }
+        engines: { node: ">=0.10.0" }
+
+    is-extendable@1.0.1:
+        resolution:
+            {
+                integrity: sha512-arnXMxT1hhoKo9k1LZdmlNyJdDDfy2v0fXjFlmok4+i8ul/6WlbVge9bhM74OpNPQPMGUToDtz+KXa1PneJxOA==
+            }
+        engines: { node: ">=0.10.0" }
+
+    is-extglob@2.1.1:
+        resolution:
+            {
+                integrity: sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==
+            }
+        engines: { node: ">=0.10.0" }
+
+    is-finalizationregistry@1.1.0:
+        resolution:
+            {
+                integrity: sha512-qfMdqbAQEwBw78ZyReKnlA8ezmPdb9BemzIIip/JkjaZUhitfXDkkr+3QTboW0JrSXT1QWyYShpvnNHGZ4c4yA==
+            }
+        engines: { node: ">= 0.4" }
+
+    is-fullwidth-code-point@3.0.0:
+        resolution:
+            {
+                integrity: sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==
+            }
+        engines: { node: ">=8" }
+
+    is-generator-function@1.0.10:
+        resolution:
+            {
+                integrity: sha512-jsEjy9l3yiXEQ+PsXdmBwEPcOxaXWLspKdplFUVI9vq1iZgIekeC0L167qeu86czQaxed3q/Uzuw0swL0irL8A==
+            }
+        engines: { node: ">= 0.4" }
+
+    is-glob@4.0.3:
+        resolution:
+            {
+                integrity: sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==
+            }
+        engines: { node: ">=0.10.0" }
+
+    is-interactive@1.0.0:
+        resolution:
+            {
+                integrity: sha512-2HvIEKRoqS62guEC+qBjpvRubdX910WCMuJTZ+I9yvqKU2/12eSL549HMwtabb4oupdj2sMP50k+XJfB/8JE6w==
+            }
+        engines: { node: ">=8" }
+
+    is-lambda@1.0.1:
+        resolution:
+            {
+                integrity: sha512-z7CMFGNrENq5iFB9Bqo64Xk6Y9sg+epq1myIcdHaGnbMTYOxvzsEtdYqQUylB7LxfkvgrrjP32T6Ywciio9UIQ==
+            }
+
+    is-map@2.0.3:
+        resolution:
+            {
+                integrity: sha512-1Qed0/Hr2m+YqxnM09CjA2d/i6YZNfF6R2oRAOj36eUdS6qIV/huPJNSEpKbupewFs+ZsJlxsjjPbc0/afW6Lw==
+            }
+        engines: { node: ">= 0.4" }
+
+    is-negative-zero@2.0.3:
+        resolution:
+            {
+                integrity: sha512-5KoIu2Ngpyek75jXodFvnafB6DJgr3u8uuK0LEZJjrU19DrMD3EVERaR8sjz8CCGgpZvxPl9SuE1GMVPFHx1mw==
+            }
+        engines: { node: ">= 0.4" }
+
+    is-number-object@1.1.0:
+        resolution:
+            {
+                integrity: sha512-KVSZV0Dunv9DTPkhXwcZ3Q+tUc9TsaE1ZwX5J2WMvsSGS6Md8TFPun5uwh0yRdrNerI6vf/tbJxqSx4c1ZI1Lw==
+            }
+        engines: { node: ">= 0.4" }
+
+    is-number@3.0.0:
+        resolution:
+            {
+                integrity: sha512-4cboCqIpliH+mAvFNegjZQ4kgKc3ZUhQVr3HvWbSh5q3WH2v82ct+T2Y1hdU5Gdtorx/cLifQjqCbL7bpznLTg==
+            }
+        engines: { node: ">=0.10.0" }
+
+    is-number@7.0.0:
+        resolution:
+            {
+                integrity: sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==
+            }
+        engines: { node: ">=0.12.0" }
+
+    is-plain-object@2.0.4:
+        resolution:
+            {
+                integrity: sha512-h5PpgXkWitc38BBMYawTYMWJHFZJVnBquFE57xFpjB8pJFiF6gZ+bU+WyI/yqXiFR5mdLsgYNaPe8uao6Uv9Og==
+            }
+        engines: { node: ">=0.10.0" }
+
+    is-regex@1.2.0:
+        resolution:
+            {
+                integrity: sha512-B6ohK4ZmoftlUe+uvenXSbPJFo6U37BH7oO1B3nQH8f/7h27N56s85MhUtbFJAziz5dcmuR3i8ovUl35zp8pFA==
+            }
+        engines: { node: ">= 0.4" }
+
+    is-set@2.0.3:
+        resolution:
+            {
+                integrity: sha512-iPAjerrse27/ygGLxw+EBR9agv9Y6uLeYVJMu+QNCoouJ1/1ri0mGrcWpfCqFZuzzx3WjtwxG098X+n4OuRkPg==
+            }
+        engines: { node: ">= 0.4" }
+
+    is-shared-array-buffer@1.0.3:
+        resolution:
+            {
+                integrity: sha512-nA2hv5XIhLR3uVzDDfCIknerhx8XUKnstuOERPNNIinXG7v9u+ohXF67vxm4TPTEPU6lm61ZkwP3c9PCB97rhg==
+            }
+        engines: { node: ">= 0.4" }
+
+    is-string@1.1.0:
+        resolution:
+            {
+                integrity: sha512-PlfzajuF9vSo5wErv3MJAKD/nqf9ngAs1NFQYm16nUYFO2IzxJ2hcm+IOCg+EEopdykNNUhVq5cz35cAUxU8+g==
+            }
+        engines: { node: ">= 0.4" }
+
+    is-symbol@1.1.0:
+        resolution:
+            {
+                integrity: sha512-qS8KkNNXUZ/I+nX6QT8ZS1/Yx0A444yhzdTKxCzKkNjQ9sHErBxJnJAgh+f5YhusYECEcjo4XcyH87hn6+ks0A==
+            }
+        engines: { node: ">= 0.4" }
+
+    is-typed-array@1.1.13:
+        resolution:
+            {
+                integrity: sha512-uZ25/bUAlUY5fR4OKT4rZQEBrzQWYV9ZJYGGsUmEJ6thodVJ1HX64ePQ6Z0qPWP+m+Uq6e9UugrE38jeYsDSMw==
+            }
+        engines: { node: ">= 0.4" }
+
+    is-unicode-supported@0.1.0:
+        resolution:
+            {
+                integrity: sha512-knxG2q4UC3u8stRGyAVJCOdxFmv5DZiRcdlIaAQXAbSfJya+OhopNotLQrstBhququ4ZpuKbDc/8S6mgXgPFPw==
+            }
+        engines: { node: ">=10" }
+
+    is-weakmap@2.0.2:
+        resolution:
+            {
+                integrity: sha512-K5pXYOm9wqY1RgjpL3YTkF39tni1XajUIkawTLUo9EZEVUFga5gSQJF8nNS7ZwJQ02y+1YCNYcMh+HIf1ZqE+w==
+            }
+        engines: { node: ">= 0.4" }
+
+    is-weakref@1.0.2:
+        resolution:
+            {
+                integrity: sha512-qctsuLZmIQ0+vSSMfoVvyFe2+GSEvnmZ2ezTup1SBse9+twCCeial6EEi3Nc2KFcf6+qz2FBPnjXsk8xhKSaPQ==
+            }
+
+    is-weakset@2.0.3:
+        resolution:
+            {
+                integrity: sha512-LvIm3/KWzS9oRFHugab7d+M/GcBXuXX5xZkzPmN+NxihdQlZUQ4dWuSV1xR/sq6upL1TJEDrfBgRepHFdBtSNQ==
+            }
+        engines: { node: ">= 0.4" }
+
+    is-windows@1.0.2:
+        resolution:
+            {
+                integrity: sha512-eXK1UInq2bPmjyX6e3VHIzMLobc4J94i4AWn+Hpq3OU5KkrRC96OAcR3PRJ/pGu6m8TRnBHP9dkXQVsT/COVIA==
+            }
+        engines: { node: ">=0.10.0" }
+
+    isarray@1.0.0:
+        resolution:
+            {
+                integrity: sha512-VLghIWNM6ELQzo7zwmcg0NmTVyWKYjvIeM83yjp0wRDTmUnrM678fQbcKBo6n2CJEF0szoG//ytg+TKla89ALQ==
+            }
+
+    isarray@2.0.5:
+        resolution:
+            {
+                integrity: sha512-xHjhDr3cNBK0BzdUJSPXZntQUx/mwMS5Rw4A7lPJ90XGAO6ISP/ePDNuo0vhqOZU+UD5JoodwCAAoZQd3FeAKw==
+            }
+
+    isbinaryfile@4.0.10:
+        resolution:
+            {
+                integrity: sha512-iHrqe5shvBUcFbmZq9zOQHBoeOhZJu6RQGrDpBgenUm/Am+F3JM2MgQj+rK3Z601fzrL5gLZWtAPH2OBaSVcyw==
+            }
+        engines: { node: ">= 8.0.0" }
+
+    isbinaryfile@5.0.4:
+        resolution:
+            {
+                integrity: sha512-YKBKVkKhty7s8rxddb40oOkuP0NbaeXrQvLin6QMHL7Ypiy2RW9LwOVrVgZRyOrhQlayMd9t+D8yDy8MKFTSDQ==
+            }
+        engines: { node: ">= 18.0.0" }
+
+    isexe@2.0.0:
+        resolution:
+            {
+                integrity: sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==
+            }
+
+    isobject@2.1.0:
+        resolution:
+            {
+                integrity: sha512-+OUdGJlgjOBZDfxnDjYYG6zp487z0JGNQq3cYQYg5f5hKR+syHMsaztzGeml/4kGG55CSpKSpWTY+jYGgsHLgA==
+            }
+        engines: { node: ">=0.10.0" }
+
+    isobject@3.0.1:
+        resolution:
+            {
+                integrity: sha512-WhB9zCku7EGTj/HQQRz5aUQEUeoQZH2bWcltRErOpymJ4boYE6wL9Tbr23krRPSZ+C5zqNSrSw+Cc7sZZ4b7vg==
+            }
+        engines: { node: ">=0.10.0" }
+
+    jackspeak@3.4.3:
+        resolution:
+            {
+                integrity: sha512-OGlZQpz2yfahA/Rd1Y8Cd9SIEsqvXkLVoSw/cgwhnhFMDbsQFeZYoJJ7bIZBS9BcamUW96asq/npPWugM+RQBw==
+            }
+
+    jake@10.9.2:
+        resolution:
+            {
+                integrity: sha512-2P4SQ0HrLQ+fw6llpLnOaGAvN2Zu6778SJMrCUwns4fOoG9ayrTiZk3VV8sCPkVZF8ab0zksVpS8FDY5pRCNBA==
+            }
+        engines: { node: ">=10" }
+        hasBin: true
+
+    js-yaml@4.1.0:
+        resolution:
+            {
+                integrity: sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==
+            }
+        hasBin: true
+
+    jsbn@1.1.0:
+        resolution:
+            {
+                integrity: sha512-4bYVV3aAMtDTTu4+xsDYa6sy9GyJ69/amsu9sYF2zqjiEoZA5xJi3BrfX3uY+/IekIu7MwdObdbDWpoZdBv3/A==
+            }
+
+    json-buffer@3.0.1:
+        resolution:
+            {
+                integrity: sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==
+            }
+
+    json-schema-traverse@0.4.1:
+        resolution:
+            {
+                integrity: sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==
+            }
+
+    json-stable-stringify-without-jsonify@1.0.1:
+        resolution:
+            {
+                integrity: sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==
+            }
+
+    json-stringify-safe@5.0.1:
+        resolution:
+            {
+                integrity: sha512-ZClg6AaYvamvYEE82d3Iyd3vSSIjQ+odgjaTzRuO3s7toCdFKczob2i0zCh7JE8kWn17yvAWhUVxvqGwUalsRA==
+            }
+
+    json5@1.0.2:
+        resolution:
+            {
+                integrity: sha512-g1MWMLBiz8FKi1e4w0UyVL3w+iJceWAFBAaBnnGKOpNa5f8TLktkbre1+s6oICydWAm+HRUGTmI+//xv2hvXYA==
+            }
+        hasBin: true
+
+    json5@2.2.3:
+        resolution:
+            {
+                integrity: sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==
+            }
+        engines: { node: ">=6" }
+        hasBin: true
+
+    jsonfile@4.0.0:
+        resolution:
+            {
+                integrity: sha512-m6F1R3z8jjlf2imQHS2Qez5sjKWQzbuuhuJ/FKYFRZvPE3PuHcSMVZzfsLhGVOkfd20obL5SWEBew5ShlquNxg==
+            }
+
+    jsonfile@6.1.0:
+        resolution:
+            {
+                integrity: sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==
+            }
+
+    keyv@4.5.4:
+        resolution:
+            {
+                integrity: sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==
+            }
+
+    kind-of@3.2.2:
+        resolution:
+            {
+                integrity: sha512-NOW9QQXMoZGg/oqnVNoNTTIFEIid1627WCffUBJEdMxYApq7mNE7CpzucIPc+ZQg25Phej7IJSmX3hO+oblOtQ==
+            }
+        engines: { node: ">=0.10.0" }
+
+    kind-of@4.0.0:
+        resolution:
+            {
+                integrity: sha512-24XsCxmEbRwEDbz/qz3stgin8TTzZ1ESR56OMCN0ujYg+vRutNSiOj9bHH9u85DKgXguraugV5sFuvbD4FW/hw==
+            }
+        engines: { node: ">=0.10.0" }
+
+    kind-of@6.0.3:
+        resolution:
+            {
+                integrity: sha512-dcS1ul+9tmeD95T+x28/ehLgd9mENa3LsvDTtzm3vyBEO7RPptvAD+t44WVXaUjTBRcrpFeFlC8WCruUR456hw==
+            }
+        engines: { node: ">=0.10.0" }
+
+    lazy-val@1.0.5:
+        resolution:
+            {
+                integrity: sha512-0/BnGCCfyUMkBpeDgWihanIAF9JmZhHBgUhEqzvf+adhNGLoP6TaiI5oF8oyb3I45P+PcnrqihSf01M0l0G5+Q==
+            }
+
+    lazystream@1.0.1:
+        resolution:
+            {
+                integrity: sha512-b94GiNHQNy6JNTrt5w6zNyffMrNkXZb3KTkCZJb2V1xaEGCk093vkZ2jk3tpaeP33/OiXC+WvK9AxUebnf5nbw==
+            }
+        engines: { node: ">= 0.6.3" }
+
+    levn@0.4.1:
+        resolution:
+            {
+                integrity: sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==
+            }
+        engines: { node: ">= 0.8.0" }
+
+    locate-path@6.0.0:
+        resolution:
+            {
+                integrity: sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==
+            }
+        engines: { node: ">=10" }
+
+    lodash.defaults@4.2.0:
+        resolution:
+            {
+                integrity: sha512-qjxPLHd3r5DnsdGacqOMU6pb/avJzdh9tFX2ymgoZE27BmjXrNy/y4LoaiTeAb+O3gL8AfpJGtqfX/ae2leYYQ==
+            }
+
+    lodash.difference@4.5.0:
+        resolution:
+            {
+                integrity: sha512-dS2j+W26TQ7taQBGN8Lbbq04ssV3emRw4NY58WErlTO29pIqS0HmoT5aJ9+TUQ1N3G+JOZSji4eugsWwGp9yPA==
+            }
+
+    lodash.escaperegexp@4.1.2:
+        resolution:
+            {
+                integrity: sha512-TM9YBvyC84ZxE3rgfefxUWiQKLilstD6k7PTGt6wfbtXF8ixIJLOL3VYyV/z+ZiPLsVxAsKAFVwWlWeb2Y8Yyw==
+            }
+
+    lodash.flatten@4.4.0:
+        resolution:
+            {
+                integrity: sha512-C5N2Z3DgnnKr0LOpv/hKCgKdb7ZZwafIrsesve6lmzvZIRZRGaZ/l6Q8+2W7NaT+ZwO3fFlSCzCzrDCFdJfZ4g==
+            }
+
+    lodash.isequal@4.5.0:
+        resolution:
+            {
+                integrity: sha512-pDo3lu8Jhfjqls6GkMgpahsF9kCyayhgykjyLMNFTKWrpVdAQtYyB4muAMWozBB4ig/dtWAmsMxLEI8wuz+DYQ==
+            }
+
+    lodash.isplainobject@4.0.6:
+        resolution:
+            {
+                integrity: sha512-oSXzaWypCMHkPC3NvBEaPHf0KsA5mvPrOPgQWDsbg8n7orZ290M0BmC/jgRZ4vcJ6DTAhjrsSYgdsW/F+MFOBA==
+            }
+
+    lodash.merge@4.6.2:
+        resolution:
+            {
+                integrity: sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==
+            }
+
+    lodash.union@4.6.0:
+        resolution:
+            {
+                integrity: sha512-c4pB2CdGrGdjMKYLA+XiRDO7Y0PRQbm/Gzg8qMj+QH+pFVAoTp5sBpO0odL3FjoPCGjK96p6qsP+yQoiLoOBcw==
+            }
+
+    lodash@4.17.21:
+        resolution:
+            {
+                integrity: sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==
+            }
+
+    log-symbols@4.1.0:
+        resolution:
+            {
+                integrity: sha512-8XPvpAA8uyhfteu8pIvQxpJZ7SYYdpUivZpGy6sFsBuKRY/7rQGavedeB8aK+Zkyq6upMFVL/9AW6vOYzfRyLg==
+            }
+        engines: { node: ">=10" }
+
+    lowercase-keys@2.0.0:
+        resolution:
+            {
+                integrity: sha512-tqNXrS78oMOE73NMxK4EMLQsQowWf8jKooH9g7xPavRT706R6bkQJ6DY2Te7QukaZsulxa30wQ7bk0pm4XiHmA==
+            }
+        engines: { node: ">=8" }
+
+    lru-cache@10.4.3:
+        resolution:
+            {
+                integrity: sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==
+            }
+
+    lru-cache@6.0.0:
+        resolution:
+            {
+                integrity: sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==
+            }
+        engines: { node: ">=10" }
+
+    lru-cache@7.18.3:
+        resolution:
+            {
+                integrity: sha512-jumlc0BIUrS3qJGgIkWZsyfAM7NCWiBcCDhnd+3NNM5KbBmLTgHVfWBcg6W+rLUsIpzpERPsvwUP7CckAQSOoA==
+            }
+        engines: { node: ">=12" }
+
+    make-fetch-happen@10.2.1:
+        resolution:
+            {
+                integrity: sha512-NgOPbRiaQM10DYXvN3/hhGVI2M5MtITFryzBGxHM5p4wnFxsVCbxkrBrDsk+EZ5OB4jEOT7AjDxtdF+KVEFT7w==
+            }
+        engines: { node: ^12.13.0 || ^14.15.0 || >=16.0.0 }
+
+    map-cache@0.2.2:
+        resolution:
+            {
+                integrity: sha512-8y/eV9QQZCiyn1SprXSrCmqJN0yNRATe+PO8ztwqrvrbdRLA3eYJF0yaR0YayLWkMbsQSKWS9N2gPcGEc4UsZg==
+            }
+        engines: { node: ">=0.10.0" }
+
+    map-visit@1.0.0:
+        resolution:
+            {
+                integrity: sha512-4y7uGv8bd2WdM9vpQsiQNo41Ln1NvhvDRuVt0k2JZQ+ezN2uaQes7lZeZ+QQUHOLQAtDaBJ+7wCbi+ab/KFs+w==
+            }
+        engines: { node: ">=0.10.0" }
+
+    matcher@3.0.0:
+        resolution:
+            {
+                integrity: sha512-OkeDaAZ/bQCxeFAozM55PKcKU0yJMPGifLwV4Qgjitu+5MoAfSQN4lsLJeXZ1b8w0x+/Emda6MZgXS1jvsapng==
+            }
+        engines: { node: ">=10" }
+
+    memory-stream@1.0.0:
+        resolution:
+            {
+                integrity: sha512-Wm13VcsPIMdG96dzILfij09PvuS3APtcKNh7M28FsCA/w6+1mjR7hhPmfFNoilX9xU7wTdhsH5lJAm6XNzdtww==
+            }
+
+    merge2@1.4.1:
+        resolution:
+            {
+                integrity: sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==
+            }
+        engines: { node: ">= 8" }
+
+    micromatch@4.0.8:
+        resolution:
+            {
+                integrity: sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==
+            }
+        engines: { node: ">=8.6" }
+
+    mime-db@1.52.0:
+        resolution:
+            {
+                integrity: sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==
+            }
+        engines: { node: ">= 0.6" }
+
+    mime-types@2.1.35:
+        resolution:
+            {
+                integrity: sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==
+            }
+        engines: { node: ">= 0.6" }
+
+    mime@2.6.0:
+        resolution:
+            {
+                integrity: sha512-USPkMeET31rOMiarsBNIHZKLGgvKc/LrjofAnBlOttf5ajRvqiRA8QsenbcooctK6d6Ts6aqZXBA+XbkKthiQg==
+            }
+        engines: { node: ">=4.0.0" }
+        hasBin: true
+
+    mimic-fn@2.1.0:
+        resolution:
+            {
+                integrity: sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg==
+            }
+        engines: { node: ">=6" }
+
+    mimic-response@1.0.1:
+        resolution:
+            {
+                integrity: sha512-j5EctnkH7amfV/q5Hgmoal1g2QHFJRraOtmx0JpIqkxhBhI/lJSl1nMpQ45hVarwNETOoWEimndZ4QK0RHxuxQ==
+            }
+        engines: { node: ">=4" }
+
+    mimic-response@3.1.0:
+        resolution:
+            {
+                integrity: sha512-z0yWI+4FDrrweS8Zmt4Ej5HdJmky15+L2e6Wgn3+iK5fWzb6T3fhNFq2+MeTRb064c6Wr4N/wv0DzQTjNzHNGQ==
+            }
+        engines: { node: ">=10" }
+
+    minimatch@10.0.1:
+        resolution:
+            {
+                integrity: sha512-ethXTt3SGGR+95gudmqJ1eNhRO7eGEGIgYA9vnPatK4/etz2MEVDno5GMCibdMTuBMyElzIlgxMna3K94XDIDQ==
+            }
+        engines: { node: 20 || >=22 }
+
+    minimatch@3.1.2:
+        resolution:
+            {
+                integrity: sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==
+            }
+
+    minimatch@5.1.6:
+        resolution:
+            {
+                integrity: sha512-lKwV/1brpG6mBUFHtb7NUmtABCb2WZZmm2wNiOA5hAb8VdCS4B3dtMWyvcoViccwAW/COERjXLt0zP1zXUN26g==
+            }
+        engines: { node: ">=10" }
+
+    minimatch@9.0.5:
+        resolution:
+            {
+                integrity: sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==
+            }
+        engines: { node: ">=16 || 14 >=14.17" }
+
+    minimist@1.2.8:
+        resolution:
+            {
+                integrity: sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==
+            }
+
+    minipass-collect@1.0.2:
+        resolution:
+            {
+                integrity: sha512-6T6lH0H8OG9kITm/Jm6tdooIbogG9e0tLgpY6mphXSm/A9u8Nq1ryBG+Qspiub9LjWlBPsPS3tWQ/Botq4FdxA==
+            }
+        engines: { node: ">= 8" }
+
+    minipass-fetch@2.1.2:
+        resolution:
+            {
+                integrity: sha512-LT49Zi2/WMROHYoqGgdlQIZh8mLPZmOrN2NdJjMXxYe4nkN6FUyuPuOAOedNJDrx0IRGg9+4guZewtp8hE6TxA==
+            }
+        engines: { node: ^12.13.0 || ^14.15.0 || >=16.0.0 }
+
+    minipass-flush@1.0.5:
+        resolution:
+            {
+                integrity: sha512-JmQSYYpPUqX5Jyn1mXaRwOda1uQ8HP5KAT/oDSLCzt1BYRhQU0/hDtsB1ufZfEEzMZ9aAVmsBw8+FWsIXlClWw==
+            }
+        engines: { node: ">= 8" }
+
+    minipass-pipeline@1.2.4:
+        resolution:
+            {
+                integrity: sha512-xuIq7cIOt09RPRJ19gdi4b+RiNvDFYe5JH+ggNvBqGqpQXcru3PcRmOZuHBKWK1Txf9+cQ+HMVN4d6z46LZP7A==
+            }
+        engines: { node: ">=8" }
+
+    minipass-sized@1.0.3:
+        resolution:
+            {
+                integrity: sha512-MbkQQ2CTiBMlA2Dm/5cY+9SWFEN8pzzOXi6rlM5Xxq0Yqbda5ZQy9sU75a673FE9ZK0Zsbr6Y5iP6u9nktfg2g==
+            }
+        engines: { node: ">=8" }
+
+    minipass@3.3.6:
+        resolution:
+            {
+                integrity: sha512-DxiNidxSEK+tHG6zOIklvNOwm3hvCrbUrdtzY74U6HKTJxvIDfOUL5W5P2Ghd3DTkhhKPYGqeNUIh5qcM4YBfw==
+            }
+        engines: { node: ">=8" }
+
+    minipass@5.0.0:
+        resolution:
+            {
+                integrity: sha512-3FnjYuehv9k6ovOEbyOswadCDPX1piCfhV8ncmYtHOjuPwylVWsghTLo7rabjC3Rx5xD4HDx8Wm1xnMF7S5qFQ==
+            }
+        engines: { node: ">=8" }
+
+    minipass@7.1.2:
+        resolution:
+            {
+                integrity: sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==
+            }
+        engines: { node: ">=16 || 14 >=14.17" }
+
+    minizlib@2.1.2:
+        resolution:
+            {
+                integrity: sha512-bAxsR8BVfj60DWXHE3u30oHzfl4G7khkSuPW+qvpd7jFRHm7dLxOjUk1EHACJ/hxLY8phGJ0YhYHZo7jil7Qdg==
+            }
+        engines: { node: ">= 8" }
+
+    mixin-deep@1.3.2:
+        resolution:
+            {
+                integrity: sha512-WRoDn//mXBiJ1H40rqa3vH0toePwSsGb45iInWlTySa+Uu4k3tYUSxa2v1KqAiLtvlrSzaExqS1gtk96A9zvEA==
+            }
+        engines: { node: ">=0.10.0" }
+
+    mkdirp@1.0.4:
+        resolution:
+            {
+                integrity: sha512-vVqVZQyf3WLx2Shd0qJ9xuvqgAyKPLAiqITEtqW0oIUjzo3PePDd6fW9iFz30ef7Ysp/oiWqbhszeGWW2T6Gzw==
+            }
+        engines: { node: ">=10" }
+        hasBin: true
+
+    moment@2.30.1:
+        resolution:
+            {
+                integrity: sha512-uEmtNhbDOrWPFS+hdjFCBfy9f2YoyzRpwcl+DqpC6taX21FzsTLQVbMV/W7PzNSX6x/bhC1zA3c2UQ5NzH6how==
+            }
+
+    ms@2.0.0:
+        resolution:
+            {
+                integrity: sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==
+            }
+
+    ms@2.1.3:
+        resolution:
+            {
+                integrity: sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==
+            }
+
+    nanomatch@1.2.13:
+        resolution:
+            {
+                integrity: sha512-fpoe2T0RbHwBTBUOftAfBPaDEi06ufaUai0mE6Yn1kacc3SnTErfb/h+X94VXzI64rKFHYImXSvdwGGCmwOqCA==
+            }
+        engines: { node: ">=0.10.0" }
+
+    natural-compare@1.4.0:
+        resolution:
+            {
+                integrity: sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==
+            }
+
+    negotiator@0.6.4:
+        resolution:
+            {
+                integrity: sha512-myRT3DiWPHqho5PrJaIRyaMv2kgYf0mUVgBNOYMuCH5Ki1yEiQaf/ZJuQ62nvpc44wL5WDbTX7yGJi1Neevw8w==
+            }
+        engines: { node: ">= 0.6" }
+
+    node-abi@3.71.0:
+        resolution:
+            {
+                integrity: sha512-SZ40vRiy/+wRTf21hxkkEjPJZpARzUMVcJoQse2EF8qkUWbbO2z7vd5oA/H6bVH6SZQ5STGcu0KRDS7biNRfxw==
+            }
+        engines: { node: ">=10" }
+
+    node-addon-api@1.7.2:
+        resolution:
+            {
+                integrity: sha512-ibPK3iA+vaY1eEjESkQkM0BbCqFOaZMiXRTtdB0u7b4djtY6JnsjvPdUHVMg6xQt3B8fpTTWHI9A+ADjM9frzg==
+            }
+
+    node-addon-api@8.3.0:
+        resolution:
+            {
+                integrity: sha512-8VOpLHFrOQlAH+qA0ZzuGRlALRA6/LVh8QJldbrC4DY0hXoMP0l4Acq8TzFC018HztWiRqyCEj2aTWY2UvnJUg==
+            }
+        engines: { node: ^18 || ^20 || >= 21 }
+
+    node-api-headers@1.4.0:
+        resolution:
+            {
+                integrity: sha512-u83U3WnRbBpWlhc0sQbpF3slHRLV/a6/OXByc+QzHcLxiDiJUWLuKGZp4/ntZUchnXGOCnCq++JUEtwb1/tyow==
+            }
+
+    node-api-version@0.2.0:
+        resolution:
+            {
+                integrity: sha512-fthTTsi8CxaBXMaBAD7ST2uylwvsnYxh2PfaScwpMhos6KlSFajXQPcM4ogNE1q2s3Lbz9GCGqeIHC+C6OZnKg==
+            }
+
+    node-gyp@9.4.1:
+        resolution:
+            {
+                integrity: sha512-OQkWKbjQKbGkMf/xqI1jjy3oCTgMKJac58G2+bjZb3fza6gW2YrCSdMQYaoTb70crvE//Gngr4f0AgVHmqHvBQ==
+            }
+        engines: { node: ^12.13 || ^14.13 || >=16 }
+        hasBin: true
+
+    nopt@6.0.0:
+        resolution:
+            {
+                integrity: sha512-ZwLpbTgdhuZUnZzjd7nb1ZV+4DoiC6/sfiVKok72ym/4Tlf+DFdlHYmT2JPmcNNWV6Pi3SDf1kT+A4r9RTuT9g==
+            }
+        engines: { node: ^12.13.0 || ^14.15.0 || >=16.0.0 }
+        hasBin: true
+
+    normalize-path@3.0.0:
+        resolution:
+            {
+                integrity: sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==
+            }
+        engines: { node: ">=0.10.0" }
+
+    normalize-url@6.1.0:
+        resolution:
+            {
+                integrity: sha512-DlL+XwOy3NxAQ8xuC0okPgK46iuVNAK01YN7RueYBqqFeGsBjV9XmCAzAdgt+667bCl5kPh9EqKKDwnaPG1I7A==
+            }
+        engines: { node: ">=10" }
+
+    npmlog@6.0.2:
+        resolution:
+            {
+                integrity: sha512-/vBvz5Jfr9dT/aFWd0FIRf+T/Q2WBsLENygUaFUqstqsycmZAP/t5BvFJTK0viFmSUxiUKTUplWy5vt+rvKIxg==
+            }
+        engines: { node: ^12.13.0 || ^14.15.0 || >=16.0.0 }
+        deprecated: This package is no longer supported.
+
+    object-copy@0.1.0:
+        resolution:
+            {
+                integrity: sha512-79LYn6VAb63zgtmAteVOWo9Vdj71ZVBy3Pbse+VqxDpEP83XuujMrGqHIwAXJ5I/aM0zU7dIyIAhifVTPrNItQ==
+            }
+        engines: { node: ">=0.10.0" }
+
+    object-inspect@1.13.3:
+        resolution:
+            {
+                integrity: sha512-kDCGIbxkDSXE3euJZZXzc6to7fCrKHNI/hSRQnRuQ+BWjFNzZwiFF8fj/6o2t2G9/jTj8PSIYTfCLelLZEeRpA==
+            }
+        engines: { node: ">= 0.4" }
+
+    object-keys@1.1.1:
+        resolution:
+            {
+                integrity: sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==
+            }
+        engines: { node: ">= 0.4" }
+
+    object-visit@1.0.1:
+        resolution:
+            {
+                integrity: sha512-GBaMwwAVK9qbQN3Scdo0OyvgPW7l3lnaVMj84uTOZlswkX0KpF6fyDBJhtTthf7pymztoN36/KEr1DyhF96zEA==
+            }
+        engines: { node: ">=0.10.0" }
+
+    object.assign@4.1.5:
+        resolution:
+            {
+                integrity: sha512-byy+U7gp+FVwmyzKPYhW2h5l3crpmGsxl7X2s8y43IgxvG4g3QZ6CffDtsNQy1WsmZpQbO+ybo0AlW7TY6DcBQ==
+            }
+        engines: { node: ">= 0.4" }
+
+    object.fromentries@2.0.8:
+        resolution:
+            {
+                integrity: sha512-k6E21FzySsSK5a21KRADBd/NGneRegFO5pLHfdQLpRDETUNJueLXs3WCzyQ3tFRDYgbq3KHGXfTbi2bs8WQ6rQ==
+            }
+        engines: { node: ">= 0.4" }
+
+    object.groupby@1.0.3:
+        resolution:
+            {
+                integrity: sha512-+Lhy3TQTuzXI5hevh8sBGqbmurHbbIjAi0Z4S63nthVLmLxfbj4T54a4CfZrXIrt9iP4mVAPYMo/v99taj3wjQ==
+            }
+        engines: { node: ">= 0.4" }
+
+    object.pick@1.3.0:
+        resolution:
+            {
+                integrity: sha512-tqa/UMy/CCoYmj+H5qc07qvSL9dqcs/WZENZ1JbtWBlATP+iVOe778gE6MSijnyCnORzDuX6hU+LA4SZ09YjFQ==
+            }
+        engines: { node: ">=0.10.0" }
+
+    object.values@1.2.0:
+        resolution:
+            {
+                integrity: sha512-yBYjY9QX2hnRmZHAjG/f13MzmBzxzYgQhFrke06TTyKY5zSTEqkOeukBzIdVA3j3ulu8Qa3MbVFShV7T2RmGtQ==
+            }
+        engines: { node: ">= 0.4" }
+
+    once@1.4.0:
+        resolution:
+            {
+                integrity: sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==
+            }
+
+    onetime@5.1.2:
+        resolution:
+            {
+                integrity: sha512-kbpaSSGJTWdAY5KPVeMOKXSrPtr8C8C7wodJbcsd51jRnmD+GZu8Y0VoU6Dm5Z4vWr0Ig/1NKuWRKf7j5aaYSg==
+            }
+        engines: { node: ">=6" }
+
+    optionator@0.9.4:
+        resolution:
+            {
+                integrity: sha512-6IpQ7mKUxRcZNLIObR0hz7lxsapSSIYNZJwXPGeF0mTVqGKFIXj1DQcMoT22S3ROcLyY/rz0PWaWZ9ayWmad9g==
+            }
+        engines: { node: ">= 0.8.0" }
+
+    ora@5.4.1:
+        resolution:
+            {
+                integrity: sha512-5b6Y85tPxZZ7QytO+BQzysW31HJku27cRIlkbAXaNx+BdcVi+LlRFmVXzeF6a7JCwJpyw5c4b+YSVImQIrBpuQ==
+            }
+        engines: { node: ">=10" }
+
+    p-cancelable@2.1.1:
+        resolution:
+            {
+                integrity: sha512-BZOr3nRQHOntUjTrH8+Lh54smKHoHyur8We1V8DSMVrl5A2malOOwuJRnKRDjSnkoeBh4at6BwEnb5I7Jl31wg==
+            }
+        engines: { node: ">=8" }
+
+    p-limit@3.1.0:
+        resolution:
+            {
+                integrity: sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==
+            }
+        engines: { node: ">=10" }
+
+    p-locate@5.0.0:
+        resolution:
+            {
+                integrity: sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==
+            }
+        engines: { node: ">=10" }
+
+    p-map@4.0.0:
+        resolution:
+            {
+                integrity: sha512-/bjOqmgETBYB5BoEeGVea8dmvHb2m9GLy1E9W43yeyfP6QQCZGFNa+XRceJEuDB6zqr+gKpIAmlLebMpykw/MQ==
+            }
+        engines: { node: ">=10" }
+
+    package-json-from-dist@1.0.1:
+        resolution:
+            {
+                integrity: sha512-UEZIS3/by4OC8vL3P2dTXRETpebLI2NiI5vIrjaD/5UtrkFX/tNbwjTSRAGC/+7CAo2pIcBaRgWmcBBHcsaCIw==
+            }
+
+    parent-module@1.0.1:
+        resolution:
+            {
+                integrity: sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==
+            }
+        engines: { node: ">=6" }
+
+    parse-passwd@1.0.0:
+        resolution:
+            {
+                integrity: sha512-1Y1A//QUXEZK7YKz+rD9WydcE1+EuPr6ZBgKecAB8tmoW6UFv0NREVJe1p+jRxtThkcbbKkfwIbWJe/IeE6m2Q==
+            }
+        engines: { node: ">=0.10.0" }
+
+    pascalcase@0.1.1:
+        resolution:
+            {
+                integrity: sha512-XHXfu/yOQRy9vYOtUDVMN60OEJjW013GoObG1o+xwQTpB9eYJX/BjXMsdW13ZDPruFhYYn0AG22w0xgQMwl3Nw==
+            }
+        engines: { node: ">=0.10.0" }
+
+    path-exists@4.0.0:
+        resolution:
+            {
+                integrity: sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==
+            }
+        engines: { node: ">=8" }
+
+    path-is-absolute@1.0.1:
+        resolution:
+            {
+                integrity: sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==
+            }
+        engines: { node: ">=0.10.0" }
+
+    path-key@3.1.1:
+        resolution:
+            {
+                integrity: sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==
+            }
+        engines: { node: ">=8" }
+
+    path-parse@1.0.7:
+        resolution:
+            {
+                integrity: sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==
+            }
+
+    path-scurry@1.11.1:
+        resolution:
+            {
+                integrity: sha512-Xa4Nw17FS9ApQFJ9umLiJS4orGjm7ZzwUrwamcGQuHSzDyth9boKDaycYdDcZDuqYATXw4HFXgaqWTctW/v1HA==
+            }
+        engines: { node: ">=16 || 14 >=14.18" }
+
+    pe-library@0.4.1:
+        resolution:
+            {
+                integrity: sha512-eRWB5LBz7PpDu4PUlwT0PhnQfTQJlDDdPa35urV4Osrm0t0AqQFGn+UIkU3klZvwJ8KPO3VbBFsXquA6p6kqZw==
+            }
+        engines: { node: ">=12", npm: ">=6" }
+
+    pend@1.2.0:
+        resolution:
+            {
+                integrity: sha512-F3asv42UuXchdzt+xXqfW1OGlVBe+mxa2mqI0pg5yAHZPvFmY3Y6drSf/GQ1A86WgWEN9Kzh/WrgKa6iGcHXLg==
+            }
+
+    picomatch@2.3.1:
+        resolution:
+            {
+                integrity: sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==
+            }
+        engines: { node: ">=8.6" }
+
+    picomatch@4.0.2:
+        resolution:
+            {
+                integrity: sha512-M7BAV6Rlcy5u+m6oPhAPFgJTzAioX/6B0DxyvDlo9l8+T3nLKbrczg2WLUyzd45L8RqfUMyGPzekbMvX2Ldkwg==
+            }
+        engines: { node: ">=12" }
+
+    pkg-prebuilds@0.2.1:
+        resolution:
+            {
+                integrity: sha512-FdOlDiRqRL7i9aYzQflhGWCoiJf/8u6Qgzq48gKsRDYejtfjvGb1U5QGSzllcqpNg2a8Swx/9fMgtuVefwU+zw==
+            }
+        engines: { node: ">= 14.15.0" }
+        hasBin: true
+
+    plist@3.1.0:
+        resolution:
+            {
+                integrity: sha512-uysumyrvkUX0rX/dEVqt8gC3sTBzd4zoWfLeS29nb53imdaXVvLINYXTI2GNqzaMuvacNx4uJQ8+b3zXR0pkgQ==
+            }
+        engines: { node: ">=10.4.0" }
+
+    possible-typed-array-names@1.0.0:
+        resolution:
+            {
+                integrity: sha512-d7Uw+eZoloe0EHDIYoe+bQ5WXnGMOpmiZFTuMWCwpjzzkL2nTjcKiAk4hh8TjnGye2TwWOk3UXucZ+3rbmBa8Q==
+            }
+        engines: { node: ">= 0.4" }
+
+    prelude-ls@1.2.1:
+        resolution:
+            {
+                integrity: sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==
+            }
+        engines: { node: ">= 0.8.0" }
+
+    prettier-linter-helpers@1.0.0:
+        resolution:
+            {
+                integrity: sha512-GbK2cP9nraSSUF9N2XwUwqfzlAFlMNYYl+ShE/V+H8a9uNl/oUqB1w2EL54Jh0OlyRSd8RfWYJ3coVS4TROP2w==
+            }
+        engines: { node: ">=6.0.0" }
+
+    prettier@3.4.1:
+        resolution:
+            {
+                integrity: sha512-G+YdqtITVZmOJje6QkXQWzl3fSfMxFwm1tjTyo9exhkmWSqC4Yhd1+lug++IlR2mvRVAxEDDWYkQdeSztajqgg==
+            }
+        engines: { node: ">=14" }
+        hasBin: true
+
+    process-nextick-args@2.0.1:
+        resolution:
+            {
+                integrity: sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag==
+            }
+
+    progress@2.0.3:
+        resolution:
+            {
+                integrity: sha512-7PiHtLll5LdnKIMw100I+8xJXR5gW2QwWYkT6iJva0bXitZKa/XMrSbdmg3r2Xnaidz9Qumd0VPaMrZlF9V9sA==
+            }
+        engines: { node: ">=0.4.0" }
+
+    promise-inflight@1.0.1:
+        resolution:
+            {
+                integrity: sha512-6zWPyEOFaQBJYcGMHBKTKJ3u6TBsnMFOIZSa6ce1e/ZrrsOlnHRHbabMjLiBYKp+n44X9eUI6VUPaukCXHuG4g==
+            }
+        peerDependencies:
+            bluebird: "*"
+        peerDependenciesMeta:
+            bluebird:
+                optional: true
+
+    promise-retry@2.0.1:
+        resolution:
+            {
+                integrity: sha512-y+WKFlBR8BGXnsNlIHFGPZmyDf3DFMoLhaflAnyZgV6rG6xu+JwesTo2Q9R6XwYmtmwAFCkAk3e35jEdoeh/3g==
+            }
+        engines: { node: ">=10" }
+
+    proxy-from-env@1.1.0:
+        resolution:
+            {
+                integrity: sha512-D+zkORCbA9f1tdWRK0RaCR3GPv50cMxcrz4X8k5LTSUD1Dkw47mKJEZQNunItRTkWwgtaUSo1RVFRIG9ZXiFYg==
+            }
+
+    pump@3.0.2:
+        resolution:
+            {
+                integrity: sha512-tUPXtzlGM8FE3P0ZL6DVs/3P58k9nk8/jZeQCurTJylQA8qFYzHFfhBJkuqyE0FifOsQ0uKWekiZ5g8wtr28cw==
+            }
+
+    punycode@2.3.1:
+        resolution:
+            {
+                integrity: sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==
+            }
+        engines: { node: ">=6" }
+
+    queue-microtask@1.2.3:
+        resolution:
+            {
+                integrity: sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==
+            }
+
+    quick-lru@5.1.1:
+        resolution:
+            {
+                integrity: sha512-WuyALRjWPDGtt/wzJiadO5AXY+8hZ80hVpe6MyivgraREW751X3SbhRvG3eLKOYN+8VEvqLcf3wdnt44Z4S4SA==
+            }
+        engines: { node: ">=10" }
+
+    rc@1.2.8:
+        resolution:
+            {
+                integrity: sha512-y3bGgqKj3QBdxLbLkomlohkvsA8gdAiUQlSBJnBhfn+BPxg4bc62d8TcBW15wavDfgexCgccckhcZvywyQYPOw==
+            }
+        hasBin: true
+
+    read-binary-file-arch@1.0.6:
+        resolution:
+            {
+                integrity: sha512-BNg9EN3DD3GsDXX7Aa8O4p92sryjkmzYYgmgTAc6CA4uGLEDzFfxOxugu21akOxpcXHiEgsYkC6nPsQvLLLmEg==
+            }
+        hasBin: true
+
+    readable-stream@2.3.8:
+        resolution:
+            {
+                integrity: sha512-8p0AUk4XODgIewSi0l8Epjs+EVnWiK7NoDIEGU0HhE7+ZyY8D1IMY7odu5lRrFXGg71L15KG8QrPmum45RTtdA==
+            }
+
+    readable-stream@3.6.2:
+        resolution:
+            {
+                integrity: sha512-9u/sniCrY3D5WdsERHzHE4G2YCXqoG5FTHUiCC4SIbr6XcLZBY05ya9EKjYek9O5xOAwjGq+1JdGBAS7Q9ScoA==
+            }
+        engines: { node: ">= 6" }
+
+    readdir-glob@1.1.3:
+        resolution:
+            {
+                integrity: sha512-v05I2k7xN8zXvPD9N+z/uhXPaj0sUFCe2rcWZIpBsqxfP7xXFQ0tipAd/wjj1YxWyWtUS5IDJpOG82JKt2EAVA==
+            }
+
+    reflect.getprototypeof@1.0.7:
+        resolution:
+            {
+                integrity: sha512-bMvFGIUKlc/eSfXNX+aZ+EL95/EgZzuwA0OBPTbZZDEJw/0AkentjMuM1oiRfwHrshqk4RzdgiTg5CcDalXN5g==
+            }
+        engines: { node: ">= 0.4" }
+
+    regex-not@1.0.2:
+        resolution:
+            {
+                integrity: sha512-J6SDjUgDxQj5NusnOtdFxDwN/+HWykR8GELwctJ7mdqhcyy1xEc4SRFHUXvxTp661YaVKAjfRLZ9cCqS6tn32A==
+            }
+        engines: { node: ">=0.10.0" }
+
+    regexp.prototype.flags@1.5.3:
+        resolution:
+            {
+                integrity: sha512-vqlC04+RQoFalODCbCumG2xIOvapzVMHwsyIGM/SIE8fRhFFsXeH8/QQ+s0T0kDAhKc4k30s73/0ydkHQz6HlQ==
+            }
+        engines: { node: ">= 0.4" }
+
+    require-directory@2.1.1:
+        resolution:
+            {
+                integrity: sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==
+            }
+        engines: { node: ">=0.10.0" }
+
+    resedit@1.7.2:
+        resolution:
+            {
+                integrity: sha512-vHjcY2MlAITJhC0eRD/Vv8Vlgmu9Sd3LX9zZvtGzU5ZImdTN3+d6e/4mnTyV8vEbyf1sgNIrWxhWlrys52OkEA==
+            }
+        engines: { node: ">=12", npm: ">=6" }
+
+    resolve-alpn@1.2.1:
+        resolution:
+            {
+                integrity: sha512-0a1F4l73/ZFZOakJnQ3FvkJ2+gSTQWz/r2KE5OdDY0TxPm5h4GkqkWWfM47T7HsbnOtcJVEF4epCVy6u7Q3K+g==
+            }
+
+    resolve-dir@1.0.1:
+        resolution:
+            {
+                integrity: sha512-R7uiTjECzvOsWSfdM0QKFNBVFcK27aHOUwdvK53BcW8zqnGdYp0Fbj82cy54+2A4P2tFM22J5kRfe1R+lM/1yg==
+            }
+        engines: { node: ">=0.10.0" }
+
+    resolve-from@4.0.0:
+        resolution:
+            {
+                integrity: sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==
+            }
+        engines: { node: ">=4" }
+
+    resolve-pkg-maps@1.0.0:
+        resolution:
+            {
+                integrity: sha512-seS2Tj26TBVOC2NIc2rOe2y2ZO7efxITtLZcGSOnHHNOQ7CkiUBfw0Iw2ck6xkIhPwLhKNLS8BO+hEpngQlqzw==
+            }
+
+    resolve-url@0.2.1:
+        resolution:
+            {
+                integrity: sha512-ZuF55hVUQaaczgOIwqWzkEcEidmlD/xl44x1UZnhOXcYuFN2S6+rcxpG+C1N3So0wvNI3DmJICUFfu2SxhBmvg==
+            }
+        deprecated: https://github.com/lydell/resolve-url#deprecated
+
+    resolve@1.22.8:
+        resolution:
+            {
+                integrity: sha512-oKWePCxqpd6FlLvGV1VU0x7bkPmmCNolxzjMf4NczoDnQcIWrAF+cPtZn5i6n+RfD2d9i0tzpKnG6Yk168yIyw==
+            }
+        hasBin: true
+
+    responselike@2.0.1:
+        resolution:
+            {
+                integrity: sha512-4gl03wn3hj1HP3yzgdI7d3lCkF95F21Pz4BPGvKHinyQzALR5CapwC8yIi0Rh58DEMQ/SguC03wFj2k0M/mHhw==
+            }
+
+    restore-cursor@3.1.0:
+        resolution:
+            {
+                integrity: sha512-l+sSefzHpj5qimhFSE5a8nufZYAM3sBSVMAPtYkmC+4EH2anSGaEMXSD0izRQbu9nfyQ9y5JrVmp7E8oZrUjvA==
+            }
+        engines: { node: ">=8" }
+
+    ret@0.1.15:
+        resolution:
+            {
+                integrity: sha512-TTlYpa+OL+vMMNG24xSlQGEJ3B/RzEfUlLct7b5G/ytav+wPrplCpVMFuwzXbkecJrb6IYo1iFb0S9v37754mg==
+            }
+        engines: { node: ">=0.12" }
+
+    retry@0.12.0:
+        resolution:
+            {
+                integrity: sha512-9LkiTwjUh6rT555DtE9rTX+BKByPfrMzEAtnlEtdEwr3Nkffwiihqe2bWADg+OQRjt9gl6ICdmB/ZFDCGAtSow==
+            }
+        engines: { node: ">= 4" }
+
+    reusify@1.0.4:
+        resolution:
+            {
+                integrity: sha512-U9nH88a3fc/ekCF1l0/UP1IosiuIjyTh7hBvXVMHYgVcfGvt897Xguj2UOLDeI5BG2m7/uwyaLVT6fbtCwTyzw==
+            }
+        engines: { iojs: ">=1.0.0", node: ">=0.10.0" }
+
+    rimraf@3.0.2:
+        resolution:
+            {
+                integrity: sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==
+            }
+        deprecated: Rimraf versions prior to v4 are no longer supported
+        hasBin: true
+
+    roarr@2.15.4:
+        resolution:
+            {
+                integrity: sha512-CHhPh+UNHD2GTXNYhPWLnU8ONHdI+5DI+4EYIAOaiD63rHeYlZvyh8P+in5999TTSFgUYuKUAjzRI4mdh/p+2A==
+            }
+        engines: { node: ">=8.0" }
+
+    run-parallel@1.2.0:
+        resolution:
+            {
+                integrity: sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==
+            }
+
+    safe-array-concat@1.1.2:
+        resolution:
+            {
+                integrity: sha512-vj6RsCsWBCf19jIeHEfkRMw8DPiBb+DMXklQ/1SGDHOMlHdPUkZXFQ2YdplS23zESTijAcurb1aSgJA3AgMu1Q==
+            }
+        engines: { node: ">=0.4" }
+
+    safe-buffer@5.1.2:
+        resolution:
+            {
+                integrity: sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==
+            }
+
+    safe-buffer@5.2.1:
+        resolution:
+            {
+                integrity: sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==
+            }
+
+    safe-regex-test@1.0.3:
+        resolution:
+            {
+                integrity: sha512-CdASjNJPvRa7roO6Ra/gLYBTzYzzPyyBXxIMdGW3USQLyjWEls2RgW5UBTXaQVp+OrpeCK3bLem8smtmheoRuw==
+            }
+        engines: { node: ">= 0.4" }
+
+    safe-regex@1.1.0:
+        resolution:
+            {
+                integrity: sha512-aJXcif4xnaNUzvUuC5gcb46oTS7zvg4jpMTnuqtrEPlR3vFr4pxtdTwaF1Qs3Enjn9HK+ZlwQui+a7z0SywIzg==
+            }
+
+    safer-buffer@2.1.2:
+        resolution:
+            {
+                integrity: sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==
+            }
+
+    sanitize-filename@1.6.3:
+        resolution:
+            {
+                integrity: sha512-y/52Mcy7aw3gRm7IrcGDFx/bCk4AhRh2eI9luHOQM86nZsqwiRkkq2GekHXBBD+SmPidc8i2PqtYZl+pWJ8Oeg==
+            }
+
+    sax@1.4.1:
+        resolution:
+            {
+                integrity: sha512-+aWOz7yVScEGoKNd4PA10LZ8sk0A/z5+nXQG5giUO5rprX9jgYsTdov9qCchZiPIZezbZH+jRut8nPodFAX4Jg==
+            }
+
+    semver-compare@1.0.0:
+        resolution:
+            {
+                integrity: sha512-YM3/ITh2MJ5MtzaM429anh+x2jiLVjqILF4m4oyQB18W7Ggea7BfqdH/wGMK7dDiMghv/6WG7znWMwUDzJiXow==
+            }
+
+    semver@6.3.1:
+        resolution:
+            {
+                integrity: sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==
+            }
+        hasBin: true
+
+    semver@7.6.3:
+        resolution:
+            {
+                integrity: sha512-oVekP1cKtI+CTDvHWYFUcMtsK/00wmAEfyqKfNdARm8u1wNVhSgaX7A8d4UuIlUI5e84iEwOhs7ZPYRmzU9U6A==
+            }
+        engines: { node: ">=10" }
+        hasBin: true
+
+    serialize-error@7.0.1:
+        resolution:
+            {
+                integrity: sha512-8I8TjW5KMOKsZQTvoxjuSIa7foAwPWGOts+6o7sgjz41/qMD9VQHEDxi6PBvK2l0MXUmqZyNpUK+T2tQaaElvw==
+            }
+        engines: { node: ">=10" }
+
+    set-blocking@2.0.0:
+        resolution:
+            {
+                integrity: sha512-KiKBS8AnWGEyLzofFfmvKwpdPzqiy16LvQfK3yv/fVH7Bj13/wl3JSR1J+rfgRE9q7xUJK4qvgS8raSOeLUehw==
+            }
+
+    set-function-length@1.2.2:
+        resolution:
+            {
+                integrity: sha512-pgRc4hJ4/sNjWCSS9AmnS40x3bNMDTknHgL5UaMBTMyJnU90EgWh1Rz+MC9eFu4BuN/UwZjKQuY/1v3rM7HMfg==
+            }
+        engines: { node: ">= 0.4" }
+
+    set-function-name@2.0.2:
+        resolution:
+            {
+                integrity: sha512-7PGFlmtwsEADb0WYyvCMa1t+yke6daIG4Wirafur5kcf+MhUnPms1UeR0CKQdTZD81yESwMHbtn+TR+dMviakQ==
+            }
+        engines: { node: ">= 0.4" }
+
+    set-value@2.0.1:
+        resolution:
+            {
+                integrity: sha512-JxHc1weCN68wRY0fhCoXpyK55m/XPHafOmK4UWD7m2CI14GMcFypt4w/0+NV5f/ZMby2F6S2wwA7fgynh9gWSw==
+            }
+        engines: { node: ">=0.10.0" }
+
+    shebang-command@2.0.0:
+        resolution:
+            {
+                integrity: sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==
+            }
+        engines: { node: ">=8" }
+
+    shebang-regex@3.0.0:
+        resolution:
+            {
+                integrity: sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==
+            }
+        engines: { node: ">=8" }
+
+    side-channel@1.0.6:
+        resolution:
+            {
+                integrity: sha512-fDW/EZ6Q9RiO8eFG8Hj+7u/oW+XrPTIChwCOM2+th2A6OblDtYYIpve9m+KvI9Z4C9qSEXlaGR6bTEYHReuglA==
+            }
+        engines: { node: ">= 0.4" }
+
+    signal-exit@3.0.7:
+        resolution:
+            {
+                integrity: sha512-wnD2ZE+l+SPC/uoS0vXeE9L1+0wuaMqKlfz9AMUo38JsyLSBWSFcHR1Rri62LZc12vLr1gb3jl7iwQhgwpAbGQ==
+            }
+
+    signal-exit@4.1.0:
+        resolution:
+            {
+                integrity: sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==
+            }
+        engines: { node: ">=14" }
+
+    simple-update-notifier@2.0.0:
+        resolution:
+            {
+                integrity: sha512-a2B9Y0KlNXl9u/vsW6sTIu9vGEpfKu2wRV6l1H3XEas/0gUIzGzBoP/IouTcUQbm9JWZLH3COxyn03TYlFax6w==
+            }
+        engines: { node: ">=10" }
+
+    slice-ansi@3.0.0:
+        resolution:
+            {
+                integrity: sha512-pSyv7bSTC7ig9Dcgbw9AuRNUb5k5V6oDudjZoMBSr13qpLBG7tB+zgCkARjq7xIUgdz5P1Qe8u+rSGdouOOIyQ==
+            }
+        engines: { node: ">=8" }
+
+    smart-buffer@4.2.0:
+        resolution:
+            {
+                integrity: sha512-94hK0Hh8rPqQl2xXc3HsaBoOXKV20MToPkcXvwbISWLEs+64sBq5kFgn2kJDHb1Pry9yrP0dxrCI9RRci7RXKg==
+            }
+        engines: { node: ">= 6.0.0", npm: ">= 3.0.0" }
+
+    snapdragon@0.8.2:
+        resolution:
+            {
+                integrity: sha512-FtyOnWN/wCHTVXOMwvSv26d+ko5vWlIDD6zoUJ7LW8vh+ZBC8QdljveRP+crNrtBwioEUWy/4dMtbBjA4ioNlg==
+            }
+        engines: { node: ">=0.10.0" }
+
+    socks-proxy-agent@7.0.0:
+        resolution:
+            {
+                integrity: sha512-Fgl0YPZ902wEsAyiQ+idGd1A7rSFx/ayC1CQVMw5P+EQx2V0SgpGtf6OKFhVjPflPUl9YMmEOnmfjCdMUsygww==
+            }
+        engines: { node: ">= 10" }
+
+    socks@2.8.3:
+        resolution:
+            {
+                integrity: sha512-l5x7VUUWbjVFbafGLxPWkYsHIhEvmF85tbIeFZWc8ZPtoMyybuEhL7Jye/ooC4/d48FgOjSJXgsF/AJPYCW8Zw==
+            }
+        engines: { node: ">= 10.0.0", npm: ">= 3.0.0" }
+
+    source-map-resolve@0.5.3:
+        resolution:
+            {
+                integrity: sha512-Htz+RnsXWk5+P2slx5Jh3Q66vhQj1Cllm0zvnaY98+NFx+Dv2CF/f5O/t8x+KaNdrdIAsruNzoh/KpialbqAnw==
+            }
+        deprecated: See https://github.com/lydell/source-map-resolve#deprecated
+
+    source-map-support@0.5.21:
+        resolution:
+            {
+                integrity: sha512-uBHU3L3czsIyYXKX88fdrGovxdSCoTGDRZ6SYXtSRxLZUzHg5P/66Ht6uoUlHu9EZod+inXhKo3qQgwXUT/y1w==
+            }
+
+    source-map-url@0.4.1:
+        resolution:
+            {
+                integrity: sha512-cPiFOTLUKvJFIg4SKVScy4ilPPW6rFgMgfuZJPNoDuMs3nC1HbMUycBoJw77xFIp6z1UJQJOfx6C9GMH80DiTw==
+            }
+        deprecated: See https://github.com/lydell/source-map-url#deprecated
+
+    source-map@0.5.7:
+        resolution:
+            {
+                integrity: sha512-LbrmJOMUSdEVxIKvdcJzQC+nQhe8FUZQTXQy6+I75skNgn3OoQ0DZA8YnFa7gp8tqtL3KPf1kmo0R5DoApeSGQ==
+            }
+        engines: { node: ">=0.10.0" }
+
+    source-map@0.6.1:
+        resolution:
+            {
+                integrity: sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==
+            }
+        engines: { node: ">=0.10.0" }
+
+    split-string@3.1.0:
+        resolution:
+            {
+                integrity: sha512-NzNVhJDYpwceVVii8/Hu6DKfD2G+NrQHlS/V/qgv763EYudVwEcMQNxd2lh+0VrUByXN/oJkl5grOhYWvQUYiw==
+            }
+        engines: { node: ">=0.10.0" }
+
+    sprintf-js@1.1.3:
+        resolution:
+            {
+                integrity: sha512-Oo+0REFV59/rz3gfJNKQiBlwfHaSESl1pcGyABQsnnIfWOFt6JNj5gCog2U6MLZ//IGYD+nA8nI+mTShREReaA==
+            }
+
+    ssri@9.0.1:
+        resolution:
+            {
+                integrity: sha512-o57Wcn66jMQvfHG1FlYbWeZWW/dHZhJXjpIcTfXldXEk5nz5lStPo3mK0OJQfGR3RbZUlbISexbljkJzuEj/8Q==
+            }
+        engines: { node: ^12.13.0 || ^14.15.0 || >=16.0.0 }
+
+    standalone-electron-types@1.0.0:
+        resolution:
+            {
+                integrity: sha512-0HOi/tlTz3mjWhsAz4uRbpQcHMZ+ifj1JzWW9nugykOHClBBG77ps8QinrzX1eow4Iw2pnC+RFaSYRgufF4BOg==
+            }
+
+    stat-mode@1.0.0:
+        resolution:
+            {
+                integrity: sha512-jH9EhtKIjuXZ2cWxmXS8ZP80XyC3iasQxMDV8jzhNJpfDb7VbQLVW4Wvsxz9QZvzV+G4YoSfBUVKDOyxLzi/sg==
+            }
+        engines: { node: ">= 6" }
+
+    static-extend@0.1.2:
+        resolution:
+            {
+                integrity: sha512-72E9+uLc27Mt718pMHt9VMNiAL4LMsmDbBva8mxWUCkT07fSzEGMYUCk0XWY6lp0j6RBAG4cJ3mWuZv2OE3s0g==
+            }
+        engines: { node: ">=0.10.0" }
+
+    string-width@4.2.3:
+        resolution:
+            {
+                integrity: sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==
+            }
+        engines: { node: ">=8" }
+
+    string-width@5.1.2:
+        resolution:
+            {
+                integrity: sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==
+            }
+        engines: { node: ">=12" }
+
+    string.prototype.trim@1.2.9:
+        resolution:
+            {
+                integrity: sha512-klHuCNxiMZ8MlsOihJhJEBJAiMVqU3Z2nEXWfWnIqjN0gEFS9J9+IxKozWWtQGcgoa1WUZzLjKPTr4ZHNFTFxw==
+            }
+        engines: { node: ">= 0.4" }
+
+    string.prototype.trimend@1.0.8:
+        resolution:
+            {
+                integrity: sha512-p73uL5VCHCO2BZZ6krwwQE3kCzM7NKmis8S//xEC6fQonchbum4eP6kR4DLEjQFO3Wnj3Fuo8NM0kOSjVdHjZQ==
+            }
+
+    string.prototype.trimstart@1.0.8:
+        resolution:
+            {
+                integrity: sha512-UXSH262CSZY1tfu3G3Secr6uGLCFVPMhIqHjlgCUtCCcgihYc/xKs9djMTMUOb2j1mVSeU8EU6NWc/iQKU6Gfg==
+            }
+        engines: { node: ">= 0.4" }
+
+    string_decoder@1.1.1:
+        resolution:
+            {
+                integrity: sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==
+            }
+
+    string_decoder@1.3.0:
+        resolution:
+            {
+                integrity: sha512-hkRX8U1WjJFd8LsDJ2yQ/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup/wKeA==
+            }
+
+    strip-ansi@6.0.1:
+        resolution:
+            {
+                integrity: sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==
+            }
+        engines: { node: ">=8" }
+
+    strip-ansi@7.1.0:
+        resolution:
+            {
+                integrity: sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==
+            }
+        engines: { node: ">=12" }
+
+    strip-bom@3.0.0:
+        resolution:
+            {
+                integrity: sha512-vavAMRXOgBVNF6nyEEmL3DBK19iRpDcoIwW+swQ+CbGiu7lju6t+JklA1MHweoWtadgt4ISVUsXLyDq34ddcwA==
+            }
+        engines: { node: ">=4" }
+
+    strip-json-comments@2.0.1:
+        resolution:
+            {
+                integrity: sha512-4gB8na07fecVVkOI6Rs4e7T6NOTki5EmL7TUduTs6bu3EdnSycntVJ4re8kgZA+wx9IueI2Y11bfbgwtzuE0KQ==
+            }
+        engines: { node: ">=0.10.0" }
+
+    strip-json-comments@3.1.1:
+        resolution:
+            {
+                integrity: sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==
+            }
+        engines: { node: ">=8" }
+
+    sumchecker@3.0.1:
+        resolution:
+            {
+                integrity: sha512-MvjXzkz/BOfyVDkG0oFOtBxHX2u3gKbMHIF/dXblZsgD3BWOFLmHovIpZY7BykJdAjcqRCBi1WYBNdEC9yI7vg==
+            }
+        engines: { node: ">= 8.0" }
+
+    supports-color@7.2.0:
+        resolution:
+            {
+                integrity: sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==
+            }
+        engines: { node: ">=8" }
+
+    supports-preserve-symlinks-flag@1.0.0:
+        resolution:
+            {
+                integrity: sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==
+            }
+        engines: { node: ">= 0.4" }
+
+    synckit@0.9.2:
+        resolution:
+            {
+                integrity: sha512-vrozgXDQwYO72vHjUb/HnFbQx1exDjoKzqx23aXEg2a9VIg2TSFZ8FmeZpTjUCFMYw7mpX4BE2SFu8wI7asYsw==
+            }
+        engines: { node: ^14.18.0 || >=16.0.0 }
+
+    tar-stream@2.2.0:
+        resolution:
+            {
+                integrity: sha512-ujeqbceABgwMZxEJnk2HDY2DlnUZ+9oEcb1KzTVfYHio0UE6dG71n60d8D2I4qNvleWrrXpmjpt7vZeF1LnMZQ==
+            }
+        engines: { node: ">=6" }
+
+    tar@6.2.1:
+        resolution:
+            {
+                integrity: sha512-DZ4yORTwrbTj/7MZYq2w+/ZFdI6OZ/f9SFHR+71gIVUZhOQPHzVCLpvRnPgyaMpfWxxk/4ONva3GQSyNIKRv6A==
+            }
+        engines: { node: ">=10" }
+
+    temp-file@3.4.0:
+        resolution:
+            {
+                integrity: sha512-C5tjlC/HCtVUOi3KWVokd4vHVViOmGjtLwIh4MuzPo/nMYTV/p1urt3RnMz2IWXDdKEGJH3k5+KPxtqRsUYGtg==
+            }
+
+    tiny-typed-emitter@2.1.0:
+        resolution:
+            {
+                integrity: sha512-qVtvMxeXbVej0cQWKqVSSAHmKZEHAvxdF8HEUBFWts8h+xEo5m/lEiPakuyZ3BnCBjOD8i24kzNOiOLLgsSxhA==
+            }
+
+    tmp-promise@3.0.3:
+        resolution:
+            {
+                integrity: sha512-RwM7MoPojPxsOBYnyd2hy0bxtIlVrihNs9pj5SUvY8Zz1sQcQG2tG1hSr8PDxfgEB8RNKDhqbIlroIarSNDNsQ==
+            }
+
+    tmp@0.2.3:
+        resolution:
+            {
+                integrity: sha512-nZD7m9iCPC5g0pYmcaxogYKggSfLsdxl8of3Q/oIbqCqLLIO9IAF0GWjX1z9NZRHPiXv8Wex4yDCaZsgEw0Y8w==
+            }
+        engines: { node: ">=14.14" }
+
+    to-object-path@0.3.0:
+        resolution:
+            {
+                integrity: sha512-9mWHdnGRuh3onocaHzukyvCZhzvr6tiflAy/JRFXcJX0TjgfWA9pk9t8CMbzmBE4Jfw58pXbkngtBtqYxzNEyg==
+            }
+        engines: { node: ">=0.10.0" }
+
+    to-regex-range@5.0.1:
+        resolution:
+            {
+                integrity: sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==
+            }
+        engines: { node: ">=8.0" }
+
+    to-regex@3.0.2:
+        resolution:
+            {
+                integrity: sha512-FWtleNAtZ/Ki2qtqej2CXTOayOH9bHDQF+Q48VpWyDXjbYxA4Yz8iDB31zXOBUlOHHKidDbqGVrTUvQMPmBGBw==
+            }
+        engines: { node: ">=0.10.0" }
+
+    truncate-utf8-bytes@1.0.2:
+        resolution:
+            {
+                integrity: sha512-95Pu1QXQvruGEhv62XCMO3Mm90GscOCClvrIUwCM0PYOXK3kaF3l3sIHxx71ThJfcbM2O5Au6SO3AWCSEfW4mQ==
+            }
+
+    ts-api-utils@1.4.3:
+        resolution:
+            {
+                integrity: sha512-i3eMG77UTMD0hZhgRS562pv83RC6ukSAC2GMNWc+9dieh/+jDM5u5YG+NHX6VNDRHQcHwmsTHctP9LhbC3WxVw==
+            }
+        engines: { node: ">=16" }
+        peerDependencies:
+            typescript: ">=4.2.0"
+
+    tsconfig-paths@3.15.0:
+        resolution:
+            {
+                integrity: sha512-2Ac2RgzDe/cn48GvOe3M+o82pEFewD3UPbyoUHHdKasHwJKjds4fLXWf/Ux5kATBKN20oaFGu+jbElp1pos0mg==
+            }
+
+    tslib@2.8.1:
+        resolution:
+            {
+                integrity: sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==
+            }
+
+    tsx@4.19.2:
+        resolution:
+            {
+                integrity: sha512-pOUl6Vo2LUq/bSa8S5q7b91cgNSjctn9ugq/+Mvow99qW6x/UZYwzxy/3NmqoT66eHYfCVvFvACC58UBPFf28g==
+            }
+        engines: { node: ">=18.0.0" }
+        hasBin: true
+
+    type-check@0.4.0:
+        resolution:
+            {
+                integrity: sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==
+            }
+        engines: { node: ">= 0.8.0" }
+
+    type-fest@0.13.1:
+        resolution:
+            {
+                integrity: sha512-34R7HTnG0XIJcBSn5XhDd7nNFPRcXYRZrBB2O2jdKqYODldSzBAqzsWoZYYvduky73toYS/ESqxPvkDf/F0XMg==
+            }
+        engines: { node: ">=10" }
+
+    type-fest@3.13.1:
+        resolution:
+            {
+                integrity: sha512-tLq3bSNx+xSpwvAJnzrK0Ep5CLNWjvFTOp71URMaAEWBfRb9nnJiBoUe0tF8bI4ZFO3omgBR6NvnbzVUT3Ly4g==
+            }
+        engines: { node: ">=14.16" }
+
+    type-fest@4.30.0:
+        resolution:
+            {
+                integrity: sha512-G6zXWS1dLj6eagy6sVhOMQiLtJdxQBHIA9Z6HFUNLOlr6MFOgzV8wvmidtPONfPtEUv0uZsy77XJNzTAfwPDaA==
+            }
+        engines: { node: ">=16" }
+
+    typed-array-buffer@1.0.2:
+        resolution:
+            {
+                integrity: sha512-gEymJYKZtKXzzBzM4jqa9w6Q1Jjm7x2d+sh19AdsD4wqnMPDYyvwpsIc2Q/835kHuo3BEQ7CjelGhfTsoBb2MQ==
+            }
+        engines: { node: ">= 0.4" }
+
+    typed-array-byte-length@1.0.1:
+        resolution:
+            {
+                integrity: sha512-3iMJ9q0ao7WE9tWcaYKIptkNBuOIcZCCT0d4MRvuuH88fEoEH62IuQe0OtraD3ebQEoTRk8XCBoknUNc1Y67pw==
+            }
+        engines: { node: ">= 0.4" }
+
+    typed-array-byte-offset@1.0.3:
+        resolution:
+            {
+                integrity: sha512-GsvTyUHTriq6o/bHcTd0vM7OQ9JEdlvluu9YISaA7+KzDzPaIzEeDFNkTfhdE3MYcNhNi0vq/LlegYgIs5yPAw==
+            }
+        engines: { node: ">= 0.4" }
+
+    typed-array-length@1.0.7:
+        resolution:
+            {
+                integrity: sha512-3KS2b+kL7fsuk/eJZ7EQdnEmQoaho/r6KUef7hxvltNA5DR8NAUM+8wJMbJyZ4G9/7i3v5zPBIMN5aybAh2/Jg==
+            }
+        engines: { node: ">= 0.4" }
+
+    typescript-eslint@8.17.0:
+        resolution:
+            {
+                integrity: sha512-409VXvFd/f1br1DCbuKNFqQpXICoTB+V51afcwG1pn1a3Cp92MqAUges3YjwEdQ0cMUoCIodjVDAYzyD8h3SYA==
+            }
+        engines: { node: ^18.18.0 || ^20.9.0 || >=21.1.0 }
+        peerDependencies:
+            eslint: ^8.57.0 || ^9.0.0
+            typescript: "*"
+        peerDependenciesMeta:
+            typescript:
+                optional: true
+
+    typescript@5.7.2:
+        resolution:
+            {
+                integrity: sha512-i5t66RHxDvVN40HfDd1PsEThGNnlMCMT3jMUuoh9/0TaqWevNontacunWyN02LA9/fIbEWlcHZcgTKb9QoaLfg==
+            }
+        engines: { node: ">=14.17" }
+        hasBin: true
+
+    unbox-primitive@1.0.2:
+        resolution:
+            {
+                integrity: sha512-61pPlCD9h51VoreyJ0BReideM3MDKMKnh6+V9L08331ipq6Q8OFXZYiqP6n/tbHx4s5I9uRhcye6BrbkizkBDw==
+            }
+
+    undici-types@5.26.5:
+        resolution:
+            {
+                integrity: sha512-JlCMO+ehdEIKqlFxk6IfVoAUVmgz7cU7zD/h9XZ0qzeosSHmUJVOzSQvvYSYWXkFXC+IfLKSIffhv0sVZup6pA==
+            }
+
+    undici-types@6.19.8:
+        resolution:
+            {
+                integrity: sha512-ve2KP6f/JnbPBFyobGHuerC9g1FYGn/F8n1LWTwNxCEzd6IfqTwUQcNXgEtmmQ6DlRrC1hrSrBnCZPokRrDHjw==
+            }
+
+    undici-types@6.20.0:
+        resolution:
+            {
+                integrity: sha512-Ny6QZ2Nju20vw1SRHe3d9jVu6gJ+4e3+MMpqu7pqE5HT6WsTSlce++GQmK5UXS8mzV8DSYHrQH+Xrf2jVcuKNg==
+            }
+
+    union-value@1.0.1:
+        resolution:
+            {
+                integrity: sha512-tJfXmxMeWYnczCVs7XAEvIV7ieppALdyepWMkHkwciRpZraG/xwT+s2JN8+pr1+8jCRf80FFzvr+MpQeeoF4Xg==
+            }
+        engines: { node: ">=0.10.0" }
+
+    unique-filename@2.0.1:
+        resolution:
+            {
+                integrity: sha512-ODWHtkkdx3IAR+veKxFV+VBkUMcN+FaqzUUd7IZzt+0zhDZFPFxhlqwPF3YQvMHx1TD0tdgYl+kuPnJ8E6ql7A==
+            }
+        engines: { node: ^12.13.0 || ^14.15.0 || >=16.0.0 }
+
+    unique-slug@3.0.0:
+        resolution:
+            {
+                integrity: sha512-8EyMynh679x/0gqE9fT9oilG+qEt+ibFyqjuVTsZn1+CMxH+XLlpvr2UZx4nVcCwTpx81nICr2JQFkM+HPLq4w==
+            }
+        engines: { node: ^12.13.0 || ^14.15.0 || >=16.0.0 }
+
+    universalify@0.1.2:
+        resolution:
+            {
+                integrity: sha512-rBJeI5CXAlmy1pV+617WB9J63U6XcazHHF2f2dbJix4XzpUF0RS3Zbj0FGIOCAva5P/d/GBOYaACQ1w+0azUkg==
+            }
+        engines: { node: ">= 4.0.0" }
+
+    universalify@2.0.1:
+        resolution:
+            {
+                integrity: sha512-gptHNQghINnc/vTGIk0SOFGFNXw7JVrlRUtConJRlvaw6DuX0wO5Jeko9sWrMBhh+PsYAZ7oXAiOnf/UKogyiw==
+            }
+        engines: { node: ">= 10.0.0" }
+
+    unset-value@1.0.0:
+        resolution:
+            {
+                integrity: sha512-PcA2tsuGSF9cnySLHTLSh2qrQiJ70mn+r+Glzxv2TWZblxsxCC52BDlZoPCsz7STd9pN7EZetkWZBAvk4cgZdQ==
+            }
+        engines: { node: ">=0.10.0" }
+
+    uri-js@4.4.1:
+        resolution:
+            {
+                integrity: sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==
+            }
+
+    urix@0.1.0:
+        resolution:
+            {
+                integrity: sha512-Am1ousAhSLBeB9cG/7k7r2R0zj50uDRlZHPGbazid5s9rlF1F/QKYObEKSIunSjIOkJZqwRRLpvewjEkM7pSqg==
+            }
+        deprecated: Please see https://github.com/lydell/urix#deprecated
+
+    url-join@4.0.1:
+        resolution:
+            {
+                integrity: sha512-jk1+QP6ZJqyOiuEI9AEWQfju/nB2Pw466kbA0LEZljHwKeMgd9WrAEgEGxjPDD2+TNbbb37rTyhEfrCXfuKXnA==
+            }
+
+    use@3.1.1:
+        resolution:
+            {
+                integrity: sha512-cwESVXlO3url9YWlFW/TA9cshCEhtu7IKJ/p5soJ/gGpj7vbvFrAY/eIioQ6Dw23KjZhYgiIo8HOs1nQ2vr/oQ==
+            }
+        engines: { node: ">=0.10.0" }
+
+    utf8-byte-length@1.0.5:
+        resolution:
+            {
+                integrity: sha512-Xn0w3MtiQ6zoz2vFyUVruaCL53O/DwUvkEeOvj+uulMm0BkUGYWmBYVyElqZaSLhY6ZD0ulfU3aBra2aVT4xfA==
+            }
+
+    util-deprecate@1.0.2:
+        resolution:
+            {
+                integrity: sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==
+            }
+
+    venbind@0.0.2:
+        resolution:
+            {
+                integrity: sha512-TlkghnnV43lmINTMOuZWvgRIIZJ3I5oNykXbGZPC22GE7gdoen9uPBWWEKLtN7BG4wjtT/dIAv2Xz9gHz9P4Gw==
+            }
+
+    verror@1.10.1:
+        resolution:
+            {
+                integrity: sha512-veufcmxri4e3XSrT0xwfUR7kguIkaxBeosDg00yDWhk49wdwkSUrvvsm7nc75e1PUyvIeZj6nS8VQRYz2/S4Xg==
+            }
+        engines: { node: ">=0.6.0" }
+
+    wcwidth@1.0.1:
+        resolution:
+            {
+                integrity: sha512-XHPEwS0q6TaxcvG85+8EYkbiCux2XtWG2mkc47Ng2A77BQu9+DqIOJldST4HgPkuea7dvKSj5VgX3P1d4rW8Tg==
+            }
+
+    which-boxed-primitive@1.1.0:
+        resolution:
+            {
+                integrity: sha512-Ei7Miu/AXe2JJ4iNF5j/UphAgRoma4trE6PtisM09bPygb3egMH3YLW/befsWb1A1AxvNSFidOFTB18XtnIIng==
+            }
+        engines: { node: ">= 0.4" }
+
+    which-builtin-type@1.2.0:
+        resolution:
+            {
+                integrity: sha512-I+qLGQ/vucCby4tf5HsLmGueEla4ZhwTBSqaooS+Y0BuxN4Cp+okmGuV+8mXZ84KDI9BA+oklo+RzKg0ONdSUA==
+            }
+        engines: { node: ">= 0.4" }
+
+    which-collection@1.0.2:
+        resolution:
+            {
+                integrity: sha512-K4jVyjnBdgvc86Y6BkaLZEN933SwYOuBFkdmBu9ZfkcAbdVbpITnDmjvZ/aQjRXQrv5EPkTnD1s39GiiqbngCw==
+            }
+        engines: { node: ">= 0.4" }
+
+    which-typed-array@1.1.16:
+        resolution:
+            {
+                integrity: sha512-g+N+GAWiRj66DngFwHvISJd+ITsyphZvD1vChfVg6cEdnzy53GzB3oy0fUNlvhz7H7+MiqhYr26qxQShCpKTTQ==
+            }
+        engines: { node: ">= 0.4" }
+
+    which@1.3.1:
+        resolution:
+            {
+                integrity: sha512-HxJdYWq1MTIQbJ3nw0cqssHoTNU267KlrDuGZ1WYlxDStUtKUhOaJmh112/TZmHxxUfuJqPXSOm7tDyas0OSIQ==
+            }
+        hasBin: true
+
+    which@2.0.2:
+        resolution:
+            {
+                integrity: sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==
+            }
+        engines: { node: ">= 8" }
+        hasBin: true
+
+    wide-align@1.1.5:
+        resolution:
+            {
+                integrity: sha512-eDMORYaPNZ4sQIuuYPDHdQvf4gyCF9rEEV/yPxGfwPkRodwEgiMUUXTx/dex+Me0wxx53S+NgUHaP7y3MGlDmg==
+            }
+
+    word-wrap@1.2.5:
+        resolution:
+            {
+                integrity: sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==
+            }
+        engines: { node: ">=0.10.0" }
+
+    wrap-ansi@7.0.0:
+        resolution:
+            {
+                integrity: sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==
+            }
+        engines: { node: ">=10" }
+
+    wrap-ansi@8.1.0:
+        resolution:
+            {
+                integrity: sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==
+            }
+        engines: { node: ">=12" }
+
+    wrappy@1.0.2:
+        resolution:
+            {
+                integrity: sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==
+            }
+
+    ws@8.18.0:
+        resolution:
+            {
+                integrity: sha512-8VbfWfHLbbwu3+N6OKsOMpBdT4kXPDDB9cJk2bJ6mh9ucxdlnNvH1e+roYkKmN9Nxw2yjz7VzeO9oOz2zJ04Pw==
+            }
+        engines: { node: ">=10.0.0" }
+        peerDependencies:
+            bufferutil: ^4.0.1
+            utf-8-validate: ">=5.0.2"
+        peerDependenciesMeta:
+            bufferutil:
+                optional: true
+            utf-8-validate:
+                optional: true
+
+    xml-formatter@3.6.3:
+        resolution:
+            {
+                integrity: sha512-++x1TlRO1FRlQ82AZ4WnoCSufaI/PT/sycn4K8nRl4gnrNC1uYY2VV/67aALZ2m0Q4Q/BLj/L69K360Itw9NNg==
+            }
+        engines: { node: ">= 16" }
+
+    xml-parser-xo@4.1.2:
+        resolution:
+            {
+                integrity: sha512-Z/DRB0ZAKj5vAQg++XsfQQKfT73Vfj5n5lKIVXobBDQEva6NHWUTxOA6OohJmEcpoy8AEqBmSGkXXAnFwt5qAA==
+            }
+        engines: { node: ">= 16" }
+
+    xmlbuilder@15.1.1:
+        resolution:
+            {
+                integrity: sha512-yMqGBqtXyeN1e3TGYvgNgDVZ3j84W4cwkOXQswghol6APgZWaff9lnbvN7MHYJOiXsvGPXtjTYJEiC9J2wv9Eg==
+            }
+        engines: { node: ">=8.0" }
+
+    y18n@5.0.8:
+        resolution:
+            {
+                integrity: sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==
+            }
+        engines: { node: ">=10" }
+
+    yallist@4.0.0:
+        resolution:
+            {
+                integrity: sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==
+            }
+
+    yargs-parser@21.1.1:
+        resolution:
+            {
+                integrity: sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw==
+            }
+        engines: { node: ">=12" }
+
+    yargs@17.7.2:
+        resolution:
+            {
+                integrity: sha512-7dSzzRQ++CKnNI/krKnYRV7JKKPUXMEh61soaHKg9mrWEhzFWhFnxPxGl+69cD1Ou63C13NUPCnmIcrvqCuM6w==
+            }
+        engines: { node: ">=12" }
+
+    yauzl@2.10.0:
+        resolution:
+            {
+                integrity: sha512-p4a9I6X6nu6IhoGmBqAcbJy1mlC4j27vEPZX9F4L4/vZT3Lyq1VkFHw/V/PUcB9Buo+DG3iHkT0x3Qya58zc3g==
+            }
+
+    yocto-queue@0.1.0:
+        resolution:
+            {
+                integrity: sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==
+            }
+        engines: { node: ">=10" }
+
+    zip-stream@4.1.1:
+        resolution:
+            {
+                integrity: sha512-9qv4rlDiopXg4E69k+vMHjNN63YFMe9sZMrdlvKnCjlCRWeCBswPPMPUfx+ipsAWq1LXHe70RcbaHdJJpS6hyQ==
+            }
+        engines: { node: ">= 10" }
 
-  7zip-bin@5.2.0:
-    resolution: {integrity: sha512-ukTPVhqG4jNzMro2qA9HSCSSVJN3aN7tlb+hfqYCt3ER0yWroeA2VR38MNrOHLQ/cVj+DaIMad0kFCtWWowh/A==}
-
-  '@develar/schema-utils@2.6.5':
-    resolution: {integrity: sha512-0cp4PsWQ/9avqTVMCtZ+GirikIA36ikvjtHweU4/j8yLtgObI0+JUPhYFScgwlteveGB1rt3Cm8UhN04XayDig==}
-    engines: {node: '>= 8.9.0'}
-
-  '@electron/asar@3.2.17':
-    resolution: {integrity: sha512-OcWImUI686w8LkghQj9R2ynZ2ME693Ek6L1SiaAgqGKzBaTIZw3fHDqN82Rcl+EU1Gm9EgkJ5KLIY/q5DCRbbA==}
-    engines: {node: '>=10.12.0'}
-    hasBin: true
-
-  '@electron/get@2.0.3':
-    resolution: {integrity: sha512-Qkzpg2s9GnVV2I2BjRksUi43U5e6+zaQMcjoJy0C+C5oxaKl+fmckGDQFtRpZpZV0NQekuZZ+tGz7EA9TVnQtQ==}
-    engines: {node: '>=12'}
-
-  '@electron/notarize@2.5.0':
-    resolution: {integrity: sha512-jNT8nwH1f9X5GEITXaQ8IF/KdskvIkOFfB2CvwumsveVidzpSc+mvhhTMdAGSYF3O+Nq49lJ7y+ssODRXu06+A==}
-    engines: {node: '>= 10.0.0'}
-
-  '@electron/osx-sign@1.3.1':
-    resolution: {integrity: sha512-BAfviURMHpmb1Yb50YbCxnOY0wfwaLXH5KJ4+80zS0gUkzDX3ec23naTlEqKsN+PwYn+a1cCzM7BJ4Wcd3sGzw==}
-    engines: {node: '>=12.0.0'}
-    hasBin: true
-
-  '@electron/rebuild@3.6.1':
-    resolution: {integrity: sha512-f6596ZHpEq/YskUd8emYvOUne89ij8mQgjYFA5ru25QwbrRO+t1SImofdDv7kKOuWCmVOuU5tvfkbgGxIl3E/w==}
-    engines: {node: '>=12.13.0'}
-    hasBin: true
-
-  '@electron/universal@2.0.1':
-    resolution: {integrity: sha512-fKpv9kg4SPmt+hY7SVBnIYULE9QJl8L3sCfcBsnqbJwwBwAeTLokJ9TRt9y7bK0JAzIW2y78TVVjvnQEms/yyA==}
-    engines: {node: '>=16.4'}
-
-  '@esbuild/aix-ppc64@0.23.1':
-    resolution: {integrity: sha512-6VhYk1diRqrhBAqpJEdjASR/+WVRtfjpqKuNw11cLiaWpAT/Uu+nokB+UJnevzy/P9C/ty6AOe0dwueMrGh/iQ==}
-    engines: {node: '>=18'}
-    cpu: [ppc64]
-    os: [aix]
-
-  '@esbuild/aix-ppc64@0.24.0':
-    resolution: {integrity: sha512-WtKdFM7ls47zkKHFVzMz8opM7LkcsIp9amDUBIAWirg70RM71WRSjdILPsY5Uv1D42ZpUfaPILDlfactHgsRkw==}
-    engines: {node: '>=18'}
-    cpu: [ppc64]
-    os: [aix]
-
-  '@esbuild/android-arm64@0.23.1':
-    resolution: {integrity: sha512-xw50ipykXcLstLeWH7WRdQuysJqejuAGPd30vd1i5zSyKK3WE+ijzHmLKxdiCMtH1pHz78rOg0BKSYOSB/2Khw==}
-    engines: {node: '>=18'}
-    cpu: [arm64]
-    os: [android]
-
-  '@esbuild/android-arm64@0.24.0':
-    resolution: {integrity: sha512-Vsm497xFM7tTIPYK9bNTYJyF/lsP590Qc1WxJdlB6ljCbdZKU9SY8i7+Iin4kyhV/KV5J2rOKsBQbB77Ab7L/w==}
-    engines: {node: '>=18'}
-    cpu: [arm64]
-    os: [android]
-
-  '@esbuild/android-arm@0.23.1':
-    resolution: {integrity: sha512-uz6/tEy2IFm9RYOyvKl88zdzZfwEfKZmnX9Cj1BHjeSGNuGLuMD1kR8y5bteYmwqKm1tj8m4cb/aKEorr6fHWQ==}
-    engines: {node: '>=18'}
-    cpu: [arm]
-    os: [android]
-
-  '@esbuild/android-arm@0.24.0':
-    resolution: {integrity: sha512-arAtTPo76fJ/ICkXWetLCc9EwEHKaeya4vMrReVlEIUCAUncH7M4bhMQ+M9Vf+FFOZJdTNMXNBrWwW+OXWpSew==}
-    engines: {node: '>=18'}
-    cpu: [arm]
-    os: [android]
-
-  '@esbuild/android-x64@0.23.1':
-    resolution: {integrity: sha512-nlN9B69St9BwUoB+jkyU090bru8L0NA3yFvAd7k8dNsVH8bi9a8cUAUSEcEEgTp2z3dbEDGJGfP6VUnkQnlReg==}
-    engines: {node: '>=18'}
-    cpu: [x64]
-    os: [android]
-
-  '@esbuild/android-x64@0.24.0':
-    resolution: {integrity: sha512-t8GrvnFkiIY7pa7mMgJd7p8p8qqYIz1NYiAoKc75Zyv73L3DZW++oYMSHPRarcotTKuSs6m3hTOa5CKHaS02TQ==}
-    engines: {node: '>=18'}
-    cpu: [x64]
-    os: [android]
-
-  '@esbuild/darwin-arm64@0.23.1':
-    resolution: {integrity: sha512-YsS2e3Wtgnw7Wq53XXBLcV6JhRsEq8hkfg91ESVadIrzr9wO6jJDMZnCQbHm1Guc5t/CdDiFSSfWP58FNuvT3Q==}
-    engines: {node: '>=18'}
-    cpu: [arm64]
-    os: [darwin]
-
-  '@esbuild/darwin-arm64@0.24.0':
-    resolution: {integrity: sha512-CKyDpRbK1hXwv79soeTJNHb5EiG6ct3efd/FTPdzOWdbZZfGhpbcqIpiD0+vwmpu0wTIL97ZRPZu8vUt46nBSw==}
-    engines: {node: '>=18'}
-    cpu: [arm64]
-    os: [darwin]
-
-  '@esbuild/darwin-x64@0.23.1':
-    resolution: {integrity: sha512-aClqdgTDVPSEGgoCS8QDG37Gu8yc9lTHNAQlsztQ6ENetKEO//b8y31MMu2ZaPbn4kVsIABzVLXYLhCGekGDqw==}
-    engines: {node: '>=18'}
-    cpu: [x64]
-    os: [darwin]
-
-  '@esbuild/darwin-x64@0.24.0':
-    resolution: {integrity: sha512-rgtz6flkVkh58od4PwTRqxbKH9cOjaXCMZgWD905JOzjFKW+7EiUObfd/Kav+A6Gyud6WZk9w+xu6QLytdi2OA==}
-    engines: {node: '>=18'}
-    cpu: [x64]
-    os: [darwin]
-
-  '@esbuild/freebsd-arm64@0.23.1':
-    resolution: {integrity: sha512-h1k6yS8/pN/NHlMl5+v4XPfikhJulk4G+tKGFIOwURBSFzE8bixw1ebjluLOjfwtLqY0kewfjLSrO6tN2MgIhA==}
-    engines: {node: '>=18'}
-    cpu: [arm64]
-    os: [freebsd]
-
-  '@esbuild/freebsd-arm64@0.24.0':
-    resolution: {integrity: sha512-6Mtdq5nHggwfDNLAHkPlyLBpE5L6hwsuXZX8XNmHno9JuL2+bg2BX5tRkwjyfn6sKbxZTq68suOjgWqCicvPXA==}
-    engines: {node: '>=18'}
-    cpu: [arm64]
-    os: [freebsd]
-
-  '@esbuild/freebsd-x64@0.23.1':
-    resolution: {integrity: sha512-lK1eJeyk1ZX8UklqFd/3A60UuZ/6UVfGT2LuGo3Wp4/z7eRTRYY+0xOu2kpClP+vMTi9wKOfXi2vjUpO1Ro76g==}
-    engines: {node: '>=18'}
-    cpu: [x64]
-    os: [freebsd]
-
-  '@esbuild/freebsd-x64@0.24.0':
-    resolution: {integrity: sha512-D3H+xh3/zphoX8ck4S2RxKR6gHlHDXXzOf6f/9dbFt/NRBDIE33+cVa49Kil4WUjxMGW0ZIYBYtaGCa2+OsQwQ==}
-    engines: {node: '>=18'}
-    cpu: [x64]
-    os: [freebsd]
-
-  '@esbuild/linux-arm64@0.23.1':
-    resolution: {integrity: sha512-/93bf2yxencYDnItMYV/v116zff6UyTjo4EtEQjUBeGiVpMmffDNUyD9UN2zV+V3LRV3/on4xdZ26NKzn6754g==}
-    engines: {node: '>=18'}
-    cpu: [arm64]
-    os: [linux]
-
-  '@esbuild/linux-arm64@0.24.0':
-    resolution: {integrity: sha512-TDijPXTOeE3eaMkRYpcy3LarIg13dS9wWHRdwYRnzlwlA370rNdZqbcp0WTyyV/k2zSxfko52+C7jU5F9Tfj1g==}
-    engines: {node: '>=18'}
-    cpu: [arm64]
-    os: [linux]
-
-  '@esbuild/linux-arm@0.23.1':
-    resolution: {integrity: sha512-CXXkzgn+dXAPs3WBwE+Kvnrf4WECwBdfjfeYHpMeVxWE0EceB6vhWGShs6wi0IYEqMSIzdOF1XjQ/Mkm5d7ZdQ==}
-    engines: {node: '>=18'}
-    cpu: [arm]
-    os: [linux]
-
-  '@esbuild/linux-arm@0.24.0':
-    resolution: {integrity: sha512-gJKIi2IjRo5G6Glxb8d3DzYXlxdEj2NlkixPsqePSZMhLudqPhtZ4BUrpIuTjJYXxvF9njql+vRjB2oaC9XpBw==}
-    engines: {node: '>=18'}
-    cpu: [arm]
-    os: [linux]
-
-  '@esbuild/linux-ia32@0.23.1':
-    resolution: {integrity: sha512-VTN4EuOHwXEkXzX5nTvVY4s7E/Krz7COC8xkftbbKRYAl96vPiUssGkeMELQMOnLOJ8k3BY1+ZY52tttZnHcXQ==}
-    engines: {node: '>=18'}
-    cpu: [ia32]
-    os: [linux]
-
-  '@esbuild/linux-ia32@0.24.0':
-    resolution: {integrity: sha512-K40ip1LAcA0byL05TbCQ4yJ4swvnbzHscRmUilrmP9Am7//0UjPreh4lpYzvThT2Quw66MhjG//20mrufm40mA==}
-    engines: {node: '>=18'}
-    cpu: [ia32]
-    os: [linux]
-
-  '@esbuild/linux-loong64@0.23.1':
-    resolution: {integrity: sha512-Vx09LzEoBa5zDnieH8LSMRToj7ir/Jeq0Gu6qJ/1GcBq9GkfoEAoXvLiW1U9J1qE/Y/Oyaq33w5p2ZWrNNHNEw==}
-    engines: {node: '>=18'}
-    cpu: [loong64]
-    os: [linux]
-
-  '@esbuild/linux-loong64@0.24.0':
-    resolution: {integrity: sha512-0mswrYP/9ai+CU0BzBfPMZ8RVm3RGAN/lmOMgW4aFUSOQBjA31UP8Mr6DDhWSuMwj7jaWOT0p0WoZ6jeHhrD7g==}
-    engines: {node: '>=18'}
-    cpu: [loong64]
-    os: [linux]
-
-  '@esbuild/linux-mips64el@0.23.1':
-    resolution: {integrity: sha512-nrFzzMQ7W4WRLNUOU5dlWAqa6yVeI0P78WKGUo7lg2HShq/yx+UYkeNSE0SSfSure0SqgnsxPvmAUu/vu0E+3Q==}
-    engines: {node: '>=18'}
-    cpu: [mips64el]
-    os: [linux]
-
-  '@esbuild/linux-mips64el@0.24.0':
-    resolution: {integrity: sha512-hIKvXm0/3w/5+RDtCJeXqMZGkI2s4oMUGj3/jM0QzhgIASWrGO5/RlzAzm5nNh/awHE0A19h/CvHQe6FaBNrRA==}
-    engines: {node: '>=18'}
-    cpu: [mips64el]
-    os: [linux]
-
-  '@esbuild/linux-ppc64@0.23.1':
-    resolution: {integrity: sha512-dKN8fgVqd0vUIjxuJI6P/9SSSe/mB9rvA98CSH2sJnlZ/OCZWO1DJvxj8jvKTfYUdGfcq2dDxoKaC6bHuTlgcw==}
-    engines: {node: '>=18'}
-    cpu: [ppc64]
-    os: [linux]
-
-  '@esbuild/linux-ppc64@0.24.0':
-    resolution: {integrity: sha512-HcZh5BNq0aC52UoocJxaKORfFODWXZxtBaaZNuN3PUX3MoDsChsZqopzi5UupRhPHSEHotoiptqikjN/B77mYQ==}
-    engines: {node: '>=18'}
-    cpu: [ppc64]
-    os: [linux]
-
-  '@esbuild/linux-riscv64@0.23.1':
-    resolution: {integrity: sha512-5AV4Pzp80fhHL83JM6LoA6pTQVWgB1HovMBsLQ9OZWLDqVY8MVobBXNSmAJi//Csh6tcY7e7Lny2Hg1tElMjIA==}
-    engines: {node: '>=18'}
-    cpu: [riscv64]
-    os: [linux]
-
-  '@esbuild/linux-riscv64@0.24.0':
-    resolution: {integrity: sha512-bEh7dMn/h3QxeR2KTy1DUszQjUrIHPZKyO6aN1X4BCnhfYhuQqedHaa5MxSQA/06j3GpiIlFGSsy1c7Gf9padw==}
-    engines: {node: '>=18'}
-    cpu: [riscv64]
-    os: [linux]
-
-  '@esbuild/linux-s390x@0.23.1':
-    resolution: {integrity: sha512-9ygs73tuFCe6f6m/Tb+9LtYxWR4c9yg7zjt2cYkjDbDpV/xVn+68cQxMXCjUpYwEkze2RcU/rMnfIXNRFmSoDw==}
-    engines: {node: '>=18'}
-    cpu: [s390x]
-    os: [linux]
-
-  '@esbuild/linux-s390x@0.24.0':
-    resolution: {integrity: sha512-ZcQ6+qRkw1UcZGPyrCiHHkmBaj9SiCD8Oqd556HldP+QlpUIe2Wgn3ehQGVoPOvZvtHm8HPx+bH20c9pvbkX3g==}
-    engines: {node: '>=18'}
-    cpu: [s390x]
-    os: [linux]
-
-  '@esbuild/linux-x64@0.23.1':
-    resolution: {integrity: sha512-EV6+ovTsEXCPAp58g2dD68LxoP/wK5pRvgy0J/HxPGB009omFPv3Yet0HiaqvrIrgPTBuC6wCH1LTOY91EO5hQ==}
-    engines: {node: '>=18'}
-    cpu: [x64]
-    os: [linux]
-
-  '@esbuild/linux-x64@0.24.0':
-    resolution: {integrity: sha512-vbutsFqQ+foy3wSSbmjBXXIJ6PL3scghJoM8zCL142cGaZKAdCZHyf+Bpu/MmX9zT9Q0zFBVKb36Ma5Fzfa8xA==}
-    engines: {node: '>=18'}
-    cpu: [x64]
-    os: [linux]
-
-  '@esbuild/netbsd-x64@0.23.1':
-    resolution: {integrity: sha512-aevEkCNu7KlPRpYLjwmdcuNz6bDFiE7Z8XC4CPqExjTvrHugh28QzUXVOZtiYghciKUacNktqxdpymplil1beA==}
-    engines: {node: '>=18'}
-    cpu: [x64]
-    os: [netbsd]
-
-  '@esbuild/netbsd-x64@0.24.0':
-    resolution: {integrity: sha512-hjQ0R/ulkO8fCYFsG0FZoH+pWgTTDreqpqY7UnQntnaKv95uP5iW3+dChxnx7C3trQQU40S+OgWhUVwCjVFLvg==}
-    engines: {node: '>=18'}
-    cpu: [x64]
-    os: [netbsd]
-
-  '@esbuild/openbsd-arm64@0.23.1':
-    resolution: {integrity: sha512-3x37szhLexNA4bXhLrCC/LImN/YtWis6WXr1VESlfVtVeoFJBRINPJ3f0a/6LV8zpikqoUg4hyXw0sFBt5Cr+Q==}
-    engines: {node: '>=18'}
-    cpu: [arm64]
-    os: [openbsd]
-
-  '@esbuild/openbsd-arm64@0.24.0':
-    resolution: {integrity: sha512-MD9uzzkPQbYehwcN583yx3Tu5M8EIoTD+tUgKF982WYL9Pf5rKy9ltgD0eUgs8pvKnmizxjXZyLt0z6DC3rRXg==}
-    engines: {node: '>=18'}
-    cpu: [arm64]
-    os: [openbsd]
-
-  '@esbuild/openbsd-x64@0.23.1':
-    resolution: {integrity: sha512-aY2gMmKmPhxfU+0EdnN+XNtGbjfQgwZj43k8G3fyrDM/UdZww6xrWxmDkuz2eCZchqVeABjV5BpildOrUbBTqA==}
-    engines: {node: '>=18'}
-    cpu: [x64]
-    os: [openbsd]
-
-  '@esbuild/openbsd-x64@0.24.0':
-    resolution: {integrity: sha512-4ir0aY1NGUhIC1hdoCzr1+5b43mw99uNwVzhIq1OY3QcEwPDO3B7WNXBzaKY5Nsf1+N11i1eOfFcq+D/gOS15Q==}
-    engines: {node: '>=18'}
-    cpu: [x64]
-    os: [openbsd]
-
-  '@esbuild/sunos-x64@0.23.1':
-    resolution: {integrity: sha512-RBRT2gqEl0IKQABT4XTj78tpk9v7ehp+mazn2HbUeZl1YMdaGAQqhapjGTCe7uw7y0frDi4gS0uHzhvpFuI1sA==}
-    engines: {node: '>=18'}
-    cpu: [x64]
-    os: [sunos]
-
-  '@esbuild/sunos-x64@0.24.0':
-    resolution: {integrity: sha512-jVzdzsbM5xrotH+W5f1s+JtUy1UWgjU0Cf4wMvffTB8m6wP5/kx0KiaLHlbJO+dMgtxKV8RQ/JvtlFcdZ1zCPA==}
-    engines: {node: '>=18'}
-    cpu: [x64]
-    os: [sunos]
-
-  '@esbuild/win32-arm64@0.23.1':
-    resolution: {integrity: sha512-4O+gPR5rEBe2FpKOVyiJ7wNDPA8nGzDuJ6gN4okSA1gEOYZ67N8JPk58tkWtdtPeLz7lBnY6I5L3jdsr3S+A6A==}
-    engines: {node: '>=18'}
-    cpu: [arm64]
-    os: [win32]
-
-  '@esbuild/win32-arm64@0.24.0':
-    resolution: {integrity: sha512-iKc8GAslzRpBytO2/aN3d2yb2z8XTVfNV0PjGlCxKo5SgWmNXx82I/Q3aG1tFfS+A2igVCY97TJ8tnYwpUWLCA==}
-    engines: {node: '>=18'}
-    cpu: [arm64]
-    os: [win32]
-
-  '@esbuild/win32-ia32@0.23.1':
-    resolution: {integrity: sha512-BcaL0Vn6QwCwre3Y717nVHZbAa4UBEigzFm6VdsVdT/MbZ38xoj1X9HPkZhbmaBGUD1W8vxAfffbDe8bA6AKnQ==}
-    engines: {node: '>=18'}
-    cpu: [ia32]
-    os: [win32]
-
-  '@esbuild/win32-ia32@0.24.0':
-    resolution: {integrity: sha512-vQW36KZolfIudCcTnaTpmLQ24Ha1RjygBo39/aLkM2kmjkWmZGEJ5Gn9l5/7tzXA42QGIoWbICfg6KLLkIw6yw==}
-    engines: {node: '>=18'}
-    cpu: [ia32]
-    os: [win32]
-
-  '@esbuild/win32-x64@0.23.1':
-    resolution: {integrity: sha512-BHpFFeslkWrXWyUPnbKm+xYYVYruCinGcftSBaa8zoF9hZO4BcSCFUvHVTtzpIY6YzUnYtuEhZ+C9iEXjxnasg==}
-    engines: {node: '>=18'}
-    cpu: [x64]
-    os: [win32]
-
-  '@esbuild/win32-x64@0.24.0':
-    resolution: {integrity: sha512-7IAFPrjSQIJrGsK6flwg7NFmwBoSTyF3rl7If0hNUFQU4ilTsEPL6GuMuU9BfIWVVGuRnuIidkSMC+c0Otu8IA==}
-    engines: {node: '>=18'}
-    cpu: [x64]
-    os: [win32]
-
-  '@eslint-community/eslint-utils@4.4.1':
-    resolution: {integrity: sha512-s3O3waFUrMV8P/XaF/+ZTp1X9XBZW1a4B97ZnjQF2KYWaFD2A8KyFBsrsfSjEmjn3RGWAIuvlneuZm3CUK3jbA==}
-    engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}
-    peerDependencies:
-      eslint: ^6.0.0 || ^7.0.0 || >=8.0.0
-
-  '@eslint-community/regexpp@4.12.1':
-    resolution: {integrity: sha512-CCZCDJuduB9OUkFkY2IgppNZMi2lBQgD2qzwXkEia16cge2pijY/aXi96CJMquDMn3nJdlPV1A5KrJEXwfLNzQ==}
-    engines: {node: ^12.0.0 || ^14.0.0 || >=16.0.0}
-
-  '@eslint/config-array@0.19.0':
-    resolution: {integrity: sha512-zdHg2FPIFNKPdcHWtiNT+jEFCHYVplAXRDlQDyqy0zGx/q2parwh7brGJSiTxRk/TSMkbM//zt/f5CHgyTyaSQ==}
-    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
-
-  '@eslint/core@0.9.0':
-    resolution: {integrity: sha512-7ATR9F0e4W85D/0w7cU0SNj7qkAexMG+bAHEZOjo9akvGuhHE2m7umzWzfnpa0XAg5Kxc1BWmtPMV67jJ+9VUg==}
-    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
-
-  '@eslint/eslintrc@3.2.0':
-    resolution: {integrity: sha512-grOjVNN8P3hjJn/eIETF1wwd12DdnwFDoyceUJLYYdkpbwq3nLi+4fqrTAONx7XDALqlL220wC/RHSC/QTI/0w==}
-    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
-
-  '@eslint/js@9.16.0':
-    resolution: {integrity: sha512-tw2HxzQkrbeuvyj1tG2Yqq+0H9wGoI2IMk4EOsQeX+vmd75FtJAzf+gTA69WF+baUKRYQ3x2kbLE08js5OsTVg==}
-    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
-
-  '@eslint/object-schema@2.1.4':
-    resolution: {integrity: sha512-BsWiH1yFGjXXS2yvrf5LyuoSIIbPrGUWob917o+BTKuZ7qJdxX8aJLRxs1fS9n6r7vESrq1OUqb68dANcFXuQQ==}
-    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
-
-  '@eslint/plugin-kit@0.2.3':
-    resolution: {integrity: sha512-2b/g5hRmpbb1o4GnTZax9N9m0FXzz9OV42ZzI4rDDMDuHUqigAiQCEWChBWCY4ztAGVRjoWT19v0yMmc5/L5kA==}
-    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
-
-  '@fal-works/esbuild-plugin-global-externals@2.1.2':
-    resolution: {integrity: sha512-cEee/Z+I12mZcFJshKcCqC8tuX5hG3s+d+9nZ3LabqKF1vKdF41B92pJVCBggjAGORAeOzyyDDKrZwIkLffeOQ==}
-
-  '@gar/promisify@1.1.3':
-    resolution: {integrity: sha512-k2Ty1JcVojjJFwrg/ThKi2ujJ7XNLYaFGNB/bWT9wGR+oSMJHMa5w+CUq6p/pVrKeNNgA7pCqEcjSnHVoqJQFw==}
-
-  '@humanfs/core@0.19.1':
-    resolution: {integrity: sha512-5DyQ4+1JEUzejeK1JGICcideyfUbGixgS9jNgex5nqkW+cY7WZhxBigmieN5Qnw9ZosSNVC9KQKyb+GUaGyKUA==}
-    engines: {node: '>=18.18.0'}
-
-  '@humanfs/node@0.16.6':
-    resolution: {integrity: sha512-YuI2ZHQL78Q5HbhDiBA1X4LmYdXCKCMQIfw0pw7piHJwyREFebJUvrQN4cMssyES6x+vfUbx1CIpaQUKYdQZOw==}
-    engines: {node: '>=18.18.0'}
-
-  '@humanwhocodes/module-importer@1.0.1':
-    resolution: {integrity: sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==}
-    engines: {node: '>=12.22'}
-
-  '@humanwhocodes/retry@0.3.1':
-    resolution: {integrity: sha512-JBxkERygn7Bv/GbN5Rv8Ul6LVknS+5Bp6RgDC/O8gEBU/yeH5Ui5C/OlWrTb6qct7LjjfT6Re2NxB0ln0yYybA==}
-    engines: {node: '>=18.18'}
-
-  '@humanwhocodes/retry@0.4.1':
-    resolution: {integrity: sha512-c7hNEllBlenFTHBky65mhq8WD2kbN9Q6gk0bTk8lSBvc554jpXSkST1iePudpt7+A/AQvuHs9EMqjHDXMY1lrA==}
-    engines: {node: '>=18.18'}
-
-  '@isaacs/cliui@8.0.2':
-    resolution: {integrity: sha512-O8jcjabXaleOG9DQ0+ARXWZBTfnP4WNAqzuiJK7ll44AmxGKv/J2M4TPjxjY3znBCfvBXFzucm1twdyFybFqEA==}
-    engines: {node: '>=12'}
-
-  '@malept/cross-spawn-promise@2.0.0':
-    resolution: {integrity: sha512-1DpKU0Z5ThltBwjNySMC14g0CkbyhCaz9FkhxqNsZI6uAPJXFS8cMXlBKo26FJ8ZuW6S9GCMcR9IO5k2X5/9Fg==}
-    engines: {node: '>= 12.13.0'}
-
-  '@malept/flatpak-bundler@0.4.0':
-    resolution: {integrity: sha512-9QOtNffcOF/c1seMCDnjckb3R9WHcG34tky+FHpNKKCW0wc/scYLwMtO+ptyGUfMW0/b/n4qRiALlaFHc9Oj7Q==}
-    engines: {node: '>= 10.0.0'}
-
-  '@nodelib/fs.scandir@2.1.5':
-    resolution: {integrity: sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==}
-    engines: {node: '>= 8'}
-
-  '@nodelib/fs.stat@2.0.5':
-    resolution: {integrity: sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==}
-    engines: {node: '>= 8'}
-
-  '@nodelib/fs.walk@1.2.8':
-    resolution: {integrity: sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==}
-    engines: {node: '>= 8'}
-
-  '@npmcli/fs@2.1.2':
-    resolution: {integrity: sha512-yOJKRvohFOaLqipNtwYB9WugyZKhC/DZC4VYPmpaCzDBrA8YpK3qHZ8/HGscMnE4GqbkLNuVcCnxkeQEdGt6LQ==}
-    engines: {node: ^12.13.0 || ^14.15.0 || >=16.0.0}
-
-  '@npmcli/move-file@2.0.1':
-    resolution: {integrity: sha512-mJd2Z5TjYWq/ttPLLGqArdtnC74J6bOzg4rMDnN+p1xTacZ2yPRCk2y0oSWQtygLR9YVQXgOcONrwtnk3JupxQ==}
-    engines: {node: ^12.13.0 || ^14.15.0 || >=16.0.0}
-    deprecated: This functionality has been moved to @npmcli/fs
-
-  '@pkgjs/parseargs@0.11.0':
-    resolution: {integrity: sha512-+1VkjdD0QBLPodGrJUeqarH8VAIvQODIbwh9XpP5Syisf7YoQgsJKPNFoqqLQlu+VQ/tVSshMR6loPMn8U+dPg==}
-    engines: {node: '>=14'}
-
-  '@pkgr/core@0.1.1':
-    resolution: {integrity: sha512-cq8o4cWH0ibXh9VGi5P20Tu9XF/0fFXl9EUinr9QfTM7a7p0oTA4iJRCQWppXR1Pg8dSM0UCItCkPwsk9qWWYA==}
-    engines: {node: ^12.20.0 || ^14.18.0 || >=16.0.0}
-
-  '@rtsao/scc@1.1.0':
-    resolution: {integrity: sha512-zt6OdqaDoOnJ1ZYsCYGt9YmWzDXl4vQdKTyJev62gFhRGKdx7mcT54V9KIjg+d2wi9EXsPvAPKe7i7WjfVWB8g==}
-
-  '@sindresorhus/is@4.6.0':
-    resolution: {integrity: sha512-t09vSN3MdfsyCHoFcTRCH/iUtG7OJ0CsjzB8cjAmKc/va/kIgeDI/TxsigdncE/4be734m0cvIYwNaV4i2XqAw==}
-    engines: {node: '>=10'}
-
-  '@stylistic/eslint-plugin@2.11.0':
-    resolution: {integrity: sha512-PNRHbydNG5EH8NK4c+izdJlxajIR6GxcUhzsYNRsn6Myep4dsZt0qFCz3rCPnkvgO5FYibDcMqgNHUT+zvjYZw==}
-    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
-    peerDependencies:
-      eslint: '>=8.40.0'
-
-  '@szmarczak/http-timer@4.0.6':
-    resolution: {integrity: sha512-4BAffykYOgO+5nzBWYwE3W90sBgLJoUPRWWcL8wlyiM8IB8ipJz3UMJ9KXQd1RKQXpKp8Tutn80HZtWsu2u76w==}
-    engines: {node: '>=10'}
-
-  '@tootallnate/once@2.0.0':
-    resolution: {integrity: sha512-XCuKFP5PS55gnMVu3dty8KPatLqUoy/ZYzDzAGCQ8JNFCkLXzmI7vNHCR+XpbZaMWQK/vQubr7PkYq8g470J/A==}
-    engines: {node: '>= 10'}
-
-  '@types/cacheable-request@6.0.3':
-    resolution: {integrity: sha512-IQ3EbTzGxIigb1I3qPZc1rWJnH0BmSKv5QYTalEwweFvyBDLSAe24zP0le/hyi7ecGfZVlIVAg4BZqb8WBwKqw==}
-
-  '@types/debug@4.1.12':
-    resolution: {integrity: sha512-vIChWdVG3LG1SMxEvI/AK+FWJthlrqlTu7fbrlywTkkaONwk/UAGaULXRlf8vkzFBLVm0zkMdCquhL5aOjhXPQ==}
-
-  '@types/estree@1.0.6':
-    resolution: {integrity: sha512-AYnb1nQyY49te+VRAVgmzfcgjYS91mY5P0TKUDCLEM+gNnA+3T6rWITXRLYCpahpqSQbN5cE+gHpnPyXjHWxcw==}
-
-  '@types/fs-extra@9.0.13':
-    resolution: {integrity: sha512-nEnwB++1u5lVDM2UI4c1+5R+FYaKfaAzS4OococimjVm3nQw3TuzH5UNsocrcTBbhnerblyHj4A49qXbIiZdpA==}
-
-  '@types/http-cache-semantics@4.0.4':
-    resolution: {integrity: sha512-1m0bIFVc7eJWyve9S0RnuRgcQqF/Xd5QsUZAZeQFr1Q3/p9JWoQQEqmVy+DPTNpGXwhgIetAoYF8JSc33q29QA==}
-
-  '@types/json-schema@7.0.15':
-    resolution: {integrity: sha512-5+fP8P8MFNC+AyZCDxrB2pkZFPGzqQWUzpSeuuVLvm8VMcorNYavBqoFcxK8bQz4Qsbn4oUEEem4wDLfcysGHA==}
-
-  '@types/json5@0.0.29':
-    resolution: {integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==}
-
-  '@types/keyv@3.1.4':
-    resolution: {integrity: sha512-BQ5aZNSCpj7D6K2ksrRCTmKRLEpnPvWDiLPfoGyhZ++8YtiK9d/3DBKPJgry359X/P1PfruyYwvnvwFjuEiEIg==}
-
-  '@types/lodash@4.17.13':
-    resolution: {integrity: sha512-lfx+dftrEZcdBPczf9d0Qv0x+j/rfNCMuC6OcfXmO8gkfeNAY88PgKUbvG56whcN23gc27yenwF6oJZXGFpYxg==}
-
-  '@types/ms@0.7.34':
-    resolution: {integrity: sha512-nG96G3Wp6acyAgJqGasjODb+acrI7KltPiRxzHPXnP3NgI28bpQDRv53olbqGXbfcgF5aiiHmO3xpwEpS5Ld9g==}
-
-  '@types/node@18.19.67':
-    resolution: {integrity: sha512-wI8uHusga+0ZugNp0Ol/3BqQfEcCCNfojtO6Oou9iVNGPTL6QNSdnUdqq85fRgIorLhLMuPIKpsN98QE9Nh+KQ==}
-
-  '@types/node@20.17.9':
-    resolution: {integrity: sha512-0JOXkRyLanfGPE2QRCwgxhzlBAvaRdCNMcvbd7jFfpmD4eEXll7LRwy5ymJmyeZqk7Nh7eD2LeUyQ68BbndmXw==}
-
-  '@types/node@22.10.1':
-    resolution: {integrity: sha512-qKgsUwfHZV2WCWLAnVP1JqnpE6Im6h3Y0+fYgMTasNQ7V++CBX5OT1as0g0f+OyubbFqhf6XVNIsmN4IIhEgGQ==}
-
-  '@types/plist@3.0.5':
-    resolution: {integrity: sha512-E6OCaRmAe4WDmWNsL/9RMqdkkzDCY1etutkflWk4c+AcjDU07Pcz1fQwTX0TQz+Pxqn9i4L1TU3UFpjnrcDgxA==}
-
-  '@types/prop-types@15.7.13':
-    resolution: {integrity: sha512-hCZTSvwbzWGvhqxp/RqVqwU999pBf2vp7hzIjiYOsl8wqOmUxkQ6ddw1cV3l8811+kdUFus/q4d1Y3E3SyEifA==}
-
-  '@types/react-dom@18.3.1':
-    resolution: {integrity: sha512-qW1Mfv8taImTthu4KoXgDfLuk4bydU6Q/TkADnDWWHwi4NX4BR+LWfTp2sVmTqRrsHvyDDTelgelxJ+SsejKKQ==}
-
-  '@types/react@17.0.2':
-    resolution: {integrity: sha512-Xt40xQsrkdvjn1EyWe1Bc0dJLcil/9x2vAuW7ya+PuQip4UYUaXyhzWmAbwRsdMgwOFHpfp7/FFZebDU6Y8VHA==}
-
-  '@types/react@18.3.12':
-    resolution: {integrity: sha512-D2wOSq/d6Agt28q7rSI3jhU7G6aiuzljDGZ2hTZHIkrTLUI+AF3WMeKkEZ9nN2fkBAlcktT6vcZjDFiIhMYEQw==}
-
-  '@types/responselike@1.0.3':
-    resolution: {integrity: sha512-H/+L+UkTV33uf49PH5pCAUBVPNj2nDBXTN+qS1dOwyyg24l3CcicicCA7ca+HMvJBZcFgl5r8e+RR6elsb4Lyw==}
-
-  '@types/verror@1.10.10':
-    resolution: {integrity: sha512-l4MM0Jppn18hb9xmM6wwD1uTdShpf9Pn80aXTStnK1C94gtPvJcV2FrDmbOQUAQfJ1cKZHktkQUDwEqaAKXMMg==}
-
-  '@types/yauzl@2.10.3':
-    resolution: {integrity: sha512-oJoftv0LSuaDZE3Le4DbKX+KS9G36NzOeSap90UIK0yMA/NhKJhqlSGtNDORNRaIbQfzjXDrQa0ytJ6mNRGz/Q==}
-
-  '@typescript-eslint/eslint-plugin@8.17.0':
-    resolution: {integrity: sha512-HU1KAdW3Tt8zQkdvNoIijfWDMvdSweFYm4hWh+KwhPstv+sCmWb89hCIP8msFm9N1R/ooh9honpSuvqKWlYy3w==}
-    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
-    peerDependencies:
-      '@typescript-eslint/parser': ^8.0.0 || ^8.0.0-alpha.0
-      eslint: ^8.57.0 || ^9.0.0
-      typescript: '*'
-    peerDependenciesMeta:
-      typescript:
+snapshots:
+    7zip-bin@5.2.0: {}
+
+    "@develar/schema-utils@2.6.5":
+        dependencies:
+            ajv: 6.12.6
+            ajv-keywords: 3.5.2(ajv@6.12.6)
+
+    "@electron/asar@3.2.17":
+        dependencies:
+            commander: 5.1.0
+            glob: 7.2.3
+            minimatch: 3.1.2
+
+    "@electron/get@2.0.3":
+        dependencies:
+            debug: 4.3.7
+            env-paths: 2.2.1
+            fs-extra: 8.1.0
+            got: 11.8.6
+            progress: 2.0.3
+            semver: 6.3.1
+            sumchecker: 3.0.1
+        optionalDependencies:
+            global-agent: 3.0.0
+        transitivePeerDependencies:
+            - supports-color
+
+    "@electron/notarize@2.5.0":
+        dependencies:
+            debug: 4.3.7
+            fs-extra: 9.1.0
+            promise-retry: 2.0.1
+        transitivePeerDependencies:
+            - supports-color
+
+    "@electron/osx-sign@1.3.1":
+        dependencies:
+            compare-version: 0.1.2
+            debug: 4.3.7
+            fs-extra: 10.1.0
+            isbinaryfile: 4.0.10
+            minimist: 1.2.8
+            plist: 3.1.0
+        transitivePeerDependencies:
+            - supports-color
+
+    "@electron/rebuild@3.6.1":
+        dependencies:
+            "@malept/cross-spawn-promise": 2.0.0
+            chalk: 4.1.2
+            debug: 4.3.7
+            detect-libc: 2.0.3
+            fs-extra: 10.1.0
+            got: 11.8.6
+            node-abi: 3.71.0
+            node-api-version: 0.2.0
+            node-gyp: 9.4.1
+            ora: 5.4.1
+            read-binary-file-arch: 1.0.6
+            semver: 7.6.3
+            tar: 6.2.1
+            yargs: 17.7.2
+        transitivePeerDependencies:
+            - bluebird
+            - supports-color
+
+    "@electron/universal@2.0.1":
+        dependencies:
+            "@electron/asar": 3.2.17
+            "@malept/cross-spawn-promise": 2.0.0
+            debug: 4.3.7
+            dir-compare: 4.2.0
+            fs-extra: 11.2.0
+            minimatch: 9.0.5
+            plist: 3.1.0
+        transitivePeerDependencies:
+            - supports-color
+
+    "@esbuild/aix-ppc64@0.23.1":
         optional: true
 
-  '@typescript-eslint/parser@8.17.0':
-    resolution: {integrity: sha512-Drp39TXuUlD49F7ilHHCG7TTg8IkA+hxCuULdmzWYICxGXvDXmDmWEjJYZQYgf6l/TFfYNE167m7isnc3xlIEg==}
-    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
-    peerDependencies:
-      eslint: ^8.57.0 || ^9.0.0
-      typescript: '*'
-    peerDependenciesMeta:
-      typescript:
+    "@esbuild/aix-ppc64@0.24.0":
         optional: true
 
-  '@typescript-eslint/scope-manager@8.17.0':
-    resolution: {integrity: sha512-/ewp4XjvnxaREtqsZjF4Mfn078RD/9GmiEAtTeLQ7yFdKnqwTOgRMSvFz4et9U5RiJQ15WTGXPLj89zGusvxBg==}
-    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
-
-  '@typescript-eslint/type-utils@8.17.0':
-    resolution: {integrity: sha512-q38llWJYPd63rRnJ6wY/ZQqIzPrBCkPdpIsaCfkR3Q4t3p6sb422zougfad4TFW9+ElIFLVDzWGiGAfbb/v2qw==}
-    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
-    peerDependencies:
-      eslint: ^8.57.0 || ^9.0.0
-      typescript: '*'
-    peerDependenciesMeta:
-      typescript:
+    "@esbuild/android-arm64@0.23.1":
         optional: true
 
-  '@typescript-eslint/types@8.17.0':
-    resolution: {integrity: sha512-gY2TVzeve3z6crqh2Ic7Cr+CAv6pfb0Egee7J5UAVWCpVvDI/F71wNfolIim4FE6hT15EbpZFVUj9j5i38jYXA==}
-    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
-
-  '@typescript-eslint/typescript-estree@8.17.0':
-    resolution: {integrity: sha512-JqkOopc1nRKZpX+opvKqnM3XUlM7LpFMD0lYxTqOTKQfCWAmxw45e3qlOCsEqEB2yuacujivudOFpCnqkBDNMw==}
-    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
-    peerDependencies:
-      typescript: '*'
-    peerDependenciesMeta:
-      typescript:
+    "@esbuild/android-arm64@0.24.0":
         optional: true
 
-  '@typescript-eslint/utils@8.17.0':
-    resolution: {integrity: sha512-bQC8BnEkxqG8HBGKwG9wXlZqg37RKSMY7v/X8VEWD8JG2JuTHuNK0VFvMPMUKQcbk6B+tf05k+4AShAEtCtJ/w==}
-    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
-    peerDependencies:
-      eslint: ^8.57.0 || ^9.0.0
-      typescript: '*'
-    peerDependenciesMeta:
-      typescript:
+    "@esbuild/android-arm@0.23.1":
         optional: true
 
-  '@typescript-eslint/visitor-keys@8.17.0':
-    resolution: {integrity: sha512-1Hm7THLpO6ww5QU6H/Qp+AusUUl+z/CAm3cNZZ0jQvon9yicgO7Rwd+/WWRpMKLYV6p2UvdbR27c86rzCPpreg==}
-    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
-
-  '@vencord/types@1.8.4':
-    resolution: {integrity: sha512-ogLqIOHVO+5zxKUVxAfGIAUZoEfIomrlg6f0cZ/2yd5vBAn1fA9Gi/NASoKfHZuJt8ZcYw329bgn0ah/VufqMg==}
-
-  '@vencord/venmic@6.1.0':
-    resolution: {integrity: sha512-YiCtzml/W8tYbGhu3jm5jfbbEnl2slKKARNK0jO+8qV979k9eFnfIRTxvhMN/SWq1h8ZNJdXVwvXpffQwq0RuA==}
-    engines: {node: '>=14.15'}
-    os: [linux]
-
-  '@xmldom/xmldom@0.8.10':
-    resolution: {integrity: sha512-2WALfTl4xo2SkGCYRt6rDTFfk9R1czmBvUQy12gK2KuRKIpWEhcbbzy8EZXtz/jkRqHX8bFEc6FC1HjX4TUWYw==}
-    engines: {node: '>=10.0.0'}
-
-  abbrev@1.1.1:
-    resolution: {integrity: sha512-nne9/IiQ/hzIhY6pdDnbBtz7DjPTKrY00P/zvPSm5pOFkl6xuGrGnXn/VtTNNfNtAfZ9/1RtehkszU9qcTii0Q==}
-
-  acorn-jsx@5.3.2:
-    resolution: {integrity: sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==}
-    peerDependencies:
-      acorn: ^6.0.0 || ^7.0.0 || ^8.0.0
-
-  acorn@8.14.0:
-    resolution: {integrity: sha512-cl669nCJTZBsL97OF4kUQm5g5hC2uihk0NxY3WENAC0TYdILVkAyHymAntgxGkl7K+t0cXIrH5siy5S4XkFycA==}
-    engines: {node: '>=0.4.0'}
-    hasBin: true
-
-  agent-base@6.0.2:
-    resolution: {integrity: sha512-RZNwNclF7+MS/8bDg70amg32dyeZGZxiDuQmZxKLAlQjr3jGyLx+4Kkk58UO7D2QdgFIQCovuSuZESne6RG6XQ==}
-    engines: {node: '>= 6.0.0'}
-
-  agent-base@7.1.1:
-    resolution: {integrity: sha512-H0TSyFNDMomMNJQBn8wFV5YC/2eJ+VXECwOadZJT554xP6cODZHPX3H9QMQECxvrgiSOP1pHjy1sMWQVYJOUOA==}
-    engines: {node: '>= 14'}
-
-  agentkeepalive@4.5.0:
-    resolution: {integrity: sha512-5GG/5IbQQpC9FpkRGsSvZI5QYeSCzlJHdpBQntCsuTOxhKD8lqKhrleg2Yi7yvMIf82Ycmmqln9U8V9qwEiJew==}
-    engines: {node: '>= 8.0.0'}
-
-  aggregate-error@3.1.0:
-    resolution: {integrity: sha512-4I7Td01quW/RpocfNayFdFVk1qSuoh0E7JrbRJ16nH01HhKFQ88INq9Sd+nd72zqRySlr9BmDA8xlEJ6vJMrYA==}
-    engines: {node: '>=8'}
-
-  ajv-keywords@3.5.2:
-    resolution: {integrity: sha512-5p6WTN0DdTGVQk6VjcEju19IgaHudalcfabD7yhDGeA6bcQnmL+CpveLJq/3hvfwd1aof6L386Ougkx6RfyMIQ==}
-    peerDependencies:
-      ajv: ^6.9.1
-
-  ajv@6.12.6:
-    resolution: {integrity: sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==}
-
-  ansi-regex@5.0.1:
-    resolution: {integrity: sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==}
-    engines: {node: '>=8'}
-
-  ansi-regex@6.1.0:
-    resolution: {integrity: sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==}
-    engines: {node: '>=12'}
-
-  ansi-styles@4.3.0:
-    resolution: {integrity: sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==}
-    engines: {node: '>=8'}
-
-  ansi-styles@6.2.1:
-    resolution: {integrity: sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==}
-    engines: {node: '>=12'}
-
-  app-builder-bin@5.0.0-alpha.10:
-    resolution: {integrity: sha512-Ev4jj3D7Bo+O0GPD2NMvJl+PGiBAfS7pUGawntBNpCbxtpncfUixqFj9z9Jme7V7s3LBGqsWZZP54fxBX3JKJw==}
-
-  app-builder-lib@25.1.8:
-    resolution: {integrity: sha512-pCqe7dfsQFBABC1jeKZXQWhGcCPF3rPCXDdfqVKjIeWBcXzyC1iOWZdfFhGl+S9MyE/k//DFmC6FzuGAUudNDg==}
-    engines: {node: '>=14.0.0'}
-    peerDependencies:
-      dmg-builder: 25.1.8
-      electron-builder-squirrel-windows: 25.1.8
-
-  aproba@2.0.0:
-    resolution: {integrity: sha512-lYe4Gx7QT+MKGbDsA+Z+he/Wtef0BiwDOlK/XkBrdfsh9J/jPPXbX0tE9x9cl27Tmu5gg3QUbUrQYa/y+KOHPQ==}
-
-  archiver-utils@2.1.0:
-    resolution: {integrity: sha512-bEL/yUb/fNNiNTuUz979Z0Yg5L+LzLxGJz8x79lYmR54fmTIb6ob/hNQgkQnIUDWIFjZVQwl9Xs356I6BAMHfw==}
-    engines: {node: '>= 6'}
-
-  archiver-utils@3.0.4:
-    resolution: {integrity: sha512-KVgf4XQVrTjhyWmx6cte4RxonPLR9onExufI1jhvw/MQ4BB6IsZD5gT8Lq+u/+pRkWna/6JoHpiQioaqFP5Rzw==}
-    engines: {node: '>= 10'}
-
-  archiver@5.3.2:
-    resolution: {integrity: sha512-+25nxyyznAXF7Nef3y0EbBeqmGZgeN/BxHX29Rs39djAfaFalmQ89SE6CWyDCHzGL0yt/ycBtNOmGTW0FyGWNw==}
-    engines: {node: '>= 10'}
-
-  are-we-there-yet@3.0.1:
-    resolution: {integrity: sha512-QZW4EDmGwlYur0Yyf/b2uGucHQMa8aFUP7eu9ddR73vvhFyt4V0Vl3QHPcTNJ8l6qYOBdxgXdnBXQrHilfRQBg==}
-    engines: {node: ^12.13.0 || ^14.15.0 || >=16.0.0}
-    deprecated: This package is no longer supported.
-
-  argparse@2.0.1:
-    resolution: {integrity: sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==}
-
-  arr-diff@4.0.0:
-    resolution: {integrity: sha512-YVIQ82gZPGBebQV/a8dar4AitzCQs0jjXwMPZllpXMaGjXPYVUawSxQrRsjhjupyVxEvbHgUmIhKVlND+j02kA==}
-    engines: {node: '>=0.10.0'}
-
-  arr-union@3.1.0:
-    resolution: {integrity: sha512-sKpyeERZ02v1FeCZT8lrfJq5u6goHCtpTAzPwJYe7c8SPFOboNjNg1vz2L4VTn9T4PQxEx13TbXLmYUcS6Ug7Q==}
-    engines: {node: '>=0.10.0'}
-
-  array-buffer-byte-length@1.0.1:
-    resolution: {integrity: sha512-ahC5W1xgou+KTXix4sAO8Ki12Q+jf4i0+tmk3sC+zgcynshkHxzpXdImBehiUYKKKDwvfFiJl1tZt6ewscS1Mg==}
-    engines: {node: '>= 0.4'}
-
-  array-includes@3.1.8:
-    resolution: {integrity: sha512-itaWrbYbqpGXkGhZPGUulwnhVf5Hpy1xiCFsGqyIGglbBxmG5vSjxQen3/WGOjPpNEv1RtBLKxbmVXm8HpJStQ==}
-    engines: {node: '>= 0.4'}
-
-  array-unique@0.3.2:
-    resolution: {integrity: sha512-SleRWjh9JUud2wH1hPs9rZBZ33H6T9HOiL0uwGnGx9FpE6wKGyfWugmbkEOIs6qWrZhg0LWeLziLrEwQJhs5mQ==}
-    engines: {node: '>=0.10.0'}
-
-  array.prototype.findlastindex@1.2.5:
-    resolution: {integrity: sha512-zfETvRFA8o7EiNn++N5f/kaCw221hrpGsDmcpndVupkPzEc1Wuf3VgC0qby1BbHs7f5DVYjgtEU2LLh5bqeGfQ==}
-    engines: {node: '>= 0.4'}
-
-  array.prototype.flat@1.3.2:
-    resolution: {integrity: sha512-djYB+Zx2vLewY8RWlNCUdHjDXs2XOgm602S9E7P/UpHgfeHL00cRiIF+IN/G/aUJ7kGPb6yO/ErDI5V2s8iycA==}
-    engines: {node: '>= 0.4'}
-
-  array.prototype.flatmap@1.3.2:
-    resolution: {integrity: sha512-Ewyx0c9PmpcsByhSW4r+9zDU7sGjFc86qf/kKtuSCRdhfbk0SNLLkaT5qvcHnRGgc5NP/ly/y+qkXkqONX54CQ==}
-    engines: {node: '>= 0.4'}
-
-  arraybuffer.prototype.slice@1.0.3:
-    resolution: {integrity: sha512-bMxMKAjg13EBSVscxTaYA4mRc5t1UAXa2kXiGTNfZ079HIWXEkKmkgFrh/nJqamaLSrXO5H4WFFkPEaLJWbs3A==}
-    engines: {node: '>= 0.4'}
-
-  arrpc@https://codeload.github.com/OpenAsar/arrpc/tar.gz/5aadc307cb9bf4479f0a12364a253b07a77ace22:
-    resolution: {tarball: https://codeload.github.com/OpenAsar/arrpc/tar.gz/5aadc307cb9bf4479f0a12364a253b07a77ace22}
-    version: 3.5.0
-    hasBin: true
-
-  assert-plus@1.0.0:
-    resolution: {integrity: sha512-NfJ4UzBCcQGLDlQq7nHxH+tv3kyZ0hHQqF5BO6J7tNJeP5do1llPr8dZ8zHonfhAu0PHAdMkSo+8o0wxg9lZWw==}
-    engines: {node: '>=0.8'}
-
-  assign-symbols@1.0.0:
-    resolution: {integrity: sha512-Q+JC7Whu8HhmTdBph/Tq59IoRtoy6KAm5zzPv00WdujX82lbAL8K7WVjne7vdCsAmbF4AYaDOPyO3k0kl8qIrw==}
-    engines: {node: '>=0.10.0'}
-
-  astral-regex@2.0.0:
-    resolution: {integrity: sha512-Z7tMw1ytTXt5jqMcOP+OQteU1VuNK9Y02uuJtKQ1Sv69jXQKKg5cibLwGJow8yzZP+eAc18EmLGPal0bp36rvQ==}
-    engines: {node: '>=8'}
-
-  async-exit-hook@2.0.1:
-    resolution: {integrity: sha512-NW2cX8m1Q7KPA7a5M2ULQeZ2wR5qI5PAbw5L0UOMxdioVk9PMZ0h1TmyZEkPYrCvYjDlFICusOu1dlEKAAeXBw==}
-    engines: {node: '>=0.12.0'}
-
-  async@3.2.6:
-    resolution: {integrity: sha512-htCUDlxyyCLMgaM3xXg0C0LW2xqfuQ6p05pCEIsXuyQ+a1koYKTuBMzRNwmybfLgvJDMd0r1LTn4+E0Ti6C2AA==}
-
-  asynckit@0.4.0:
-    resolution: {integrity: sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q==}
-
-  at-least-node@1.0.0:
-    resolution: {integrity: sha512-+q/t7Ekv1EDY2l6Gda6LLiX14rU9TV20Wa3ofeQmwPFZbOMo9DXrLbOjFaaclkXKWidIaopwAObQDqwWtGUjqg==}
-    engines: {node: '>= 4.0.0'}
-
-  atob@2.1.2:
-    resolution: {integrity: sha512-Wm6ukoaOGJi/73p/cl2GvLjTI5JM1k/O14isD73YML8StrH/7/lRFgmg8nICZgD3bZZvjwCGxtMOD3wWNAu8cg==}
-    engines: {node: '>= 4.5.0'}
-    hasBin: true
-
-  available-typed-arrays@1.0.7:
-    resolution: {integrity: sha512-wvUjBtSGN7+7SjNpq/9M2Tg350UZD3q62IFZLbRAR1bSMlCo1ZaeW+BJ+D090e4hIIZLBcTDWe4Mh4jvUDajzQ==}
-    engines: {node: '>= 0.4'}
-
-  axios@1.7.8:
-    resolution: {integrity: sha512-Uu0wb7KNqK2t5K+YQyVCLM76prD5sRFjKHbJYCP1J7JFGEQ6nN7HWn9+04LAeiJ3ji54lgS/gZCH1oxyrf1SPw==}
-
-  balanced-match@1.0.2:
-    resolution: {integrity: sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==}
-
-  base64-js@1.5.1:
-    resolution: {integrity: sha512-AKpaYlHn8t4SVbOHCy+b5+KKgvR4vrsD8vbvrbiQJps7fKDTkjkDry6ji0rUJjC0kzbNePLwzxq8iypo41qeWA==}
-
-  base@0.11.2:
-    resolution: {integrity: sha512-5T6P4xPgpp0YDFvSWwEZ4NoE3aM4QBQXDzmVbraCkFj8zHM+mba8SyqB5DbZWyR7mYHo6Y7BdQo3MoA4m0TeQg==}
-    engines: {node: '>=0.10.0'}
-
-  bl@4.1.0:
-    resolution: {integrity: sha512-1W07cM9gS6DcLperZfFSj+bWLtaPGSOHWhPiGzXmvVJbRLdG82sH/Kn8EtW1VqWVA54AKf2h5k5BbnIbwF3h6w==}
-
-  bluebird-lst@1.0.9:
-    resolution: {integrity: sha512-7B1Rtx82hjnSD4PGLAjVWeYH3tHAcVUmChh85a3lltKQm6FresXh9ErQo6oAv6CqxttczC3/kEg8SY5NluPuUw==}
-
-  bluebird@3.7.2:
-    resolution: {integrity: sha512-XpNj6GDQzdfW+r2Wnn7xiSAd7TM3jzkxGXBGTtWKuSXv1xUV+azxAm8jdWZN06QTQk+2N2XB9jRDkvbmQmcRtg==}
-
-  boolean@3.2.0:
-    resolution: {integrity: sha512-d0II/GO9uf9lfUHH2BQsjxzRJZBdsjgsBiW4BvhWk/3qoKwQFjIDVN19PfX8F2D/r9PCMTtLWjYVCFrpeYUzsw==}
-    deprecated: Package no longer supported. Contact Support at https://www.npmjs.com/support for more info.
-
-  brace-expansion@1.1.11:
-    resolution: {integrity: sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==}
-
-  brace-expansion@2.0.1:
-    resolution: {integrity: sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==}
-
-  braces@3.0.3:
-    resolution: {integrity: sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==}
-    engines: {node: '>=8'}
-
-  buffer-crc32@0.2.13:
-    resolution: {integrity: sha512-VO9Ht/+p3SN7SKWqcrgEzjGbRSJYTx+Q1pTQC0wrWqHx0vpJraQ6GtHx8tvcg1rlK1byhU5gccxgOgj7B0TDkQ==}
-
-  buffer-from@1.1.2:
-    resolution: {integrity: sha512-E+XQCRwSbaaiChtv6k6Dwgc+bx+Bs6vuKJHHl5kox/BaKbhiXzqQOwK4cO22yElGp2OCmjwVhT3HmxgyPGnJfQ==}
-
-  buffer@5.7.1:
-    resolution: {integrity: sha512-EHcyIPBQ4BSGlvjB16k5KgAJ27CIsHY/2JBmCRReo48y9rQ3MaUzWX3KVlBa4U7MyX02HdVj0K7C3WaB3ju7FQ==}
-
-  builder-util-runtime@9.2.10:
-    resolution: {integrity: sha512-6p/gfG1RJSQeIbz8TK5aPNkoztgY1q5TgmGFMAXcY8itsGW6Y2ld1ALsZ5UJn8rog7hKF3zHx5iQbNQ8uLcRlw==}
-    engines: {node: '>=12.0.0'}
-
-  builder-util@25.1.7:
-    resolution: {integrity: sha512-7jPjzBwEGRbwNcep0gGNpLXG9P94VA3CPAZQCzxkFXiV2GMQKlziMbY//rXPI7WKfhsvGgFXjTcXdBEwgXw9ww==}
-
-  cacache@16.1.3:
-    resolution: {integrity: sha512-/+Emcj9DAXxX4cwlLmRI9c166RuL3w30zp4R7Joiv2cQTtTtA+jeuCAjH3ZlGnYS3tKENSrKhAzVVP9GVyzeYQ==}
-    engines: {node: ^12.13.0 || ^14.15.0 || >=16.0.0}
-
-  cache-base@1.0.1:
-    resolution: {integrity: sha512-AKcdTnFSWATd5/GCPRxr2ChwIJ85CeyrEyjRHlKxQ56d4XJMGym0uAiKn0xbLOGOl3+yRpOTi484dVCEc5AUzQ==}
-    engines: {node: '>=0.10.0'}
-
-  cacheable-lookup@5.0.4:
-    resolution: {integrity: sha512-2/kNscPhpcxrOigMZzbiWF7dz8ilhb/nIHU3EyZiXWXpeq/au8qJ8VhdftMkty3n7Gj6HIGalQG8oiBNB3AJgA==}
-    engines: {node: '>=10.6.0'}
-
-  cacheable-request@7.0.4:
-    resolution: {integrity: sha512-v+p6ongsrp0yTGbJXjgxPow2+DL93DASP4kXCDKb8/bwRtt9OEF3whggkkDkGNzgcWy2XaF4a8nZglC7uElscg==}
-    engines: {node: '>=8'}
-
-  call-bind@1.0.7:
-    resolution: {integrity: sha512-GHTSNSYICQ7scH7sZ+M2rFopRoLh8t2bLSW6BbgrtLsahOIB5iyAVJf9GjWK3cYTDaMj4XdBpM1cA6pIS0Kv2w==}
-    engines: {node: '>= 0.4'}
-
-  callsites@3.1.0:
-    resolution: {integrity: sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==}
-    engines: {node: '>=6'}
-
-  chalk@4.1.2:
-    resolution: {integrity: sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==}
-    engines: {node: '>=10'}
-
-  chownr@2.0.0:
-    resolution: {integrity: sha512-bIomtDF5KGpdogkLd9VspvFzk9KfpyyGlS8YFVZl7TGPBHL5snIOnxeshwVgPteQ9b4Eydl+pVbIyE1DcvCWgQ==}
-    engines: {node: '>=10'}
-
-  chromium-pickle-js@0.2.0:
-    resolution: {integrity: sha512-1R5Fho+jBq0DDydt+/vHWj5KJNJCKdARKOCwZUen84I5BreWoLqRLANH1U87eJy1tiASPtMnGqJJq0ZsLoRPOw==}
-
-  ci-info@3.9.0:
-    resolution: {integrity: sha512-NIxF55hv4nSqQswkAeiOi1r83xy8JldOFDTWiug55KBu9Jnblncd2U6ViHmYgHf01TPZS77NJBhBMKdWj9HQMQ==}
-    engines: {node: '>=8'}
-
-  class-utils@0.3.6:
-    resolution: {integrity: sha512-qOhPa/Fj7s6TY8H8esGu5QNpMMQxz79h+urzrNYN6mn+9BnxlDGf5QZ+XeCDsxSjPqsSR56XOZOJmpeurnLMeg==}
-    engines: {node: '>=0.10.0'}
-
-  clean-stack@2.2.0:
-    resolution: {integrity: sha512-4diC9HaTE+KRAMWhDhrGOECgWZxoevMc5TlkObMqNSsVU62PYzXZ/SMTjzyGAFF1YusgxGcSWTEXBhp0CPwQ1A==}
-    engines: {node: '>=6'}
-
-  cli-cursor@3.1.0:
-    resolution: {integrity: sha512-I/zHAwsKf9FqGoXM4WWRACob9+SNukZTd94DWF57E4toouRulbCxcUh6RKUEOQlYTHJnzkPMySvPNaaSLNfLZw==}
-    engines: {node: '>=8'}
-
-  cli-spinners@2.9.2:
-    resolution: {integrity: sha512-ywqV+5MmyL4E7ybXgKys4DugZbX0FC6LnwrhjuykIjnK9k8OQacQ7axGKnjDXWNhns0xot3bZI5h55H8yo9cJg==}
-    engines: {node: '>=6'}
-
-  cli-truncate@2.1.0:
-    resolution: {integrity: sha512-n8fOixwDD6b/ObinzTrp1ZKFzbgvKZvuz/TvejnLn1aQfC6r52XEx85FmuC+3HI+JM7coBRXUvNqEU2PHVrHpg==}
-    engines: {node: '>=8'}
-
-  cliui@8.0.1:
-    resolution: {integrity: sha512-BSeNnyus75C4//NQ9gQt1/csTXyo/8Sb+afLAkzAptFuMsod9HFokGNudZpi/oQV73hnVK+sR+5PVRMd+Dr7YQ==}
-    engines: {node: '>=12'}
-
-  clone-response@1.0.3:
-    resolution: {integrity: sha512-ROoL94jJH2dUVML2Y/5PEDNaSHgeOdSDicUyS7izcF63G6sTc/FTjLub4b8Il9S8S0beOfYt0TaA5qvFK+w0wA==}
-
-  clone@1.0.4:
-    resolution: {integrity: sha512-JQHZ2QMW6l3aH/j6xCqQThY/9OH4D/9ls34cgkUBiEeocRTU04tHfKPBsUK1PqZCUQM7GiA0IIXJSuXHI64Kbg==}
-    engines: {node: '>=0.8'}
-
-  cmake-js@7.3.0:
-    resolution: {integrity: sha512-dXs2zq9WxrV87bpJ+WbnGKv8WUBXDw8blNiwNHoRe/it+ptscxhQHKB1SJXa1w+kocLMeP28Tk4/eTCezg4o+w==}
-    engines: {node: '>= 14.15.0'}
-    hasBin: true
-
-  collection-visit@1.0.0:
-    resolution: {integrity: sha512-lNkKvzEeMBBjUGHZ+q6z9pSJla0KWAQPvtzhEV9+iGyQYG+pBpl7xKDhxoNSOZH2hhv0v5k0y2yAM4o4SjoSkw==}
-    engines: {node: '>=0.10.0'}
-
-  color-convert@2.0.1:
-    resolution: {integrity: sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==}
-    engines: {node: '>=7.0.0'}
-
-  color-name@1.1.4:
-    resolution: {integrity: sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==}
-
-  color-support@1.1.3:
-    resolution: {integrity: sha512-qiBjkpbMLO/HL68y+lh4q0/O1MZFj2RX6X/KmMa3+gJD3z+WwI1ZzDHysvqHGS3mP6mznPckpXmw1nI9cJjyRg==}
-    hasBin: true
-
-  combined-stream@1.0.8:
-    resolution: {integrity: sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==}
-    engines: {node: '>= 0.8'}
-
-  commander@5.1.0:
-    resolution: {integrity: sha512-P0CysNDQ7rtVw4QIQtm+MRxV66vKFSvlsQvGYXZWR3qFU0jlMKHZZZgw8e+8DSah4UDKMqnknRDQz+xuQXQ/Zg==}
-    engines: {node: '>= 6'}
-
-  compare-version@0.1.2:
-    resolution: {integrity: sha512-pJDh5/4wrEnXX/VWRZvruAGHkzKdr46z11OlTPN+VrATlWWhSKewNCJ1futCO5C7eJB3nPMFZA1LeYtcFboZ2A==}
-    engines: {node: '>=0.10.0'}
-
-  component-emitter@1.3.1:
-    resolution: {integrity: sha512-T0+barUSQRTUQASh8bx02dl+DhF54GtIDY13Y3m9oWTklKbb3Wv974meRpeZ3lp1JpLVECWWNHC4vaG2XHXouQ==}
-
-  compress-commons@4.1.2:
-    resolution: {integrity: sha512-D3uMHtGc/fcO1Gt1/L7i1e33VOvD4A9hfQLP+6ewd+BvG/gQ84Yh4oftEhAdjSMgBgwGL+jsppT7JYNpo6MHHg==}
-    engines: {node: '>= 10'}
-
-  concat-map@0.0.1:
-    resolution: {integrity: sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==}
-
-  config-file-ts@0.2.8-rc1:
-    resolution: {integrity: sha512-GtNECbVI82bT4RiDIzBSVuTKoSHufnU7Ce7/42bkWZJZFLjmDF2WBpVsvRkhKCfKBnTBb3qZrBwPpFBU/Myvhg==}
-
-  console-control-strings@1.1.0:
-    resolution: {integrity: sha512-ty/fTekppD2fIwRvnZAVdeOiGd1c7YXEixbgJTNzqcxJWKQnjJ/V1bNEEE6hygpM3WjwHFUVK6HTjWSzV4a8sQ==}
-
-  copy-descriptor@0.1.1:
-    resolution: {integrity: sha512-XgZ0pFcakEUlbwQEVNg3+QAis1FyTL3Qel9FYy8pSkQqoG3PNoT0bOCQtOXcOkur21r2Eq2kI+IE+gsmAEVlYw==}
-    engines: {node: '>=0.10.0'}
-
-  core-util-is@1.0.2:
-    resolution: {integrity: sha512-3lqz5YjWTYnW6dlDa5TLaTCcShfar1e40rmcJVwCBJC6mWlFuj0eCHIElmG1g5kyuJ/GD+8Wn4FFCcz4gJPfaQ==}
-
-  core-util-is@1.0.3:
-    resolution: {integrity: sha512-ZQBvi1DcpJ4GDqanjucZ2Hj3wEO5pZDS89BWbkcrvdxksJorwUDDZamX9ldFkp9aw2lmBDLgkObEA4DWNJ9FYQ==}
-
-  crc-32@1.2.2:
-    resolution: {integrity: sha512-ROmzCKrTnOwybPcJApAA6WBWij23HVfGVNKqqrZpuyZOHqK2CwHSvpGuyt/UNNvaIjEd8X5IFGp4Mh+Ie1IHJQ==}
-    engines: {node: '>=0.8'}
-    hasBin: true
-
-  crc32-stream@4.0.3:
-    resolution: {integrity: sha512-NT7w2JVU7DFroFdYkeq8cywxrgjPHWkdX1wjpRQXPX5Asews3tA+Ght6lddQO5Mkumffp3X7GEqku3epj2toIw==}
-    engines: {node: '>= 10'}
-
-  crc@3.8.0:
-    resolution: {integrity: sha512-iX3mfgcTMIq3ZKLIsVFAbv7+Mc10kxabAGQb8HvjA1o3T1PIYprbakQ65d3I+2HGHt6nSKkM9PYjgoJO2KcFBQ==}
-
-  cross-spawn@7.0.6:
-    resolution: {integrity: sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==}
-    engines: {node: '>= 8'}
-
-  csstype@3.1.3:
-    resolution: {integrity: sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==}
-
-  data-view-buffer@1.0.1:
-    resolution: {integrity: sha512-0lht7OugA5x3iJLOWFhWK/5ehONdprk0ISXqVFn/NFrDu+cuc8iADFrGQz5BnRK7LLU3JmkbXSxaqX+/mXYtUA==}
-    engines: {node: '>= 0.4'}
-
-  data-view-byte-length@1.0.1:
-    resolution: {integrity: sha512-4J7wRJD3ABAzr8wP+OcIcqq2dlUKp4DVflx++hs5h5ZKydWMI6/D/fAot+yh6g2tHh8fLFTvNOaVN357NvSrOQ==}
-    engines: {node: '>= 0.4'}
-
-  data-view-byte-offset@1.0.0:
-    resolution: {integrity: sha512-t/Ygsytq+R995EJ5PZlD4Cu56sWa8InXySaViRzw9apusqsOO2bQP+SbYzAhR0pFKoB+43lYy8rWban9JSuXnA==}
-    engines: {node: '>= 0.4'}
-
-  debug@2.6.9:
-    resolution: {integrity: sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==}
-    peerDependencies:
-      supports-color: '*'
-    peerDependenciesMeta:
-      supports-color:
+    "@esbuild/android-arm@0.24.0":
         optional: true
 
-  debug@3.2.7:
-    resolution: {integrity: sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==}
-    peerDependencies:
-      supports-color: '*'
-    peerDependenciesMeta:
-      supports-color:
+    "@esbuild/android-x64@0.23.1":
         optional: true
 
-  debug@4.3.7:
-    resolution: {integrity: sha512-Er2nc/H7RrMXZBFCEim6TCmMk02Z8vLC2Rbi1KEBggpo0fS6l0S1nnapwmIi3yW/+GOJap1Krg4w0Hg80oCqgQ==}
-    engines: {node: '>=6.0'}
-    peerDependencies:
-      supports-color: '*'
-    peerDependenciesMeta:
-      supports-color:
+    "@esbuild/android-x64@0.24.0":
         optional: true
 
-  decode-uri-component@0.2.2:
-    resolution: {integrity: sha512-FqUYQ+8o158GyGTrMFJms9qh3CqTKvAqgqsTnkLI8sKu0028orqBhxNMFkFen0zGyg6epACD32pjVk58ngIErQ==}
-    engines: {node: '>=0.10'}
-
-  decompress-response@6.0.0:
-    resolution: {integrity: sha512-aW35yZM6Bb/4oJlZncMH2LCoZtJXTRxES17vE3hoRiowU2kWHaJKFkSBDnDR+cm9J+9QhXmREyIfv0pji9ejCQ==}
-    engines: {node: '>=10'}
-
-  deep-extend@0.6.0:
-    resolution: {integrity: sha512-LOHxIOaPYdHlJRtCQfDIVZtfw/ufM8+rVj649RIHzcm/vGwQRXFt6OPqIFWsm2XEMrNIEtWR64sY1LEKD2vAOA==}
-    engines: {node: '>=4.0.0'}
-
-  deep-is@0.1.4:
-    resolution: {integrity: sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==}
-
-  defaults@1.0.4:
-    resolution: {integrity: sha512-eFuaLoy/Rxalv2kr+lqMlUnrDWV+3j4pljOIJgLIhI058IQfWJ7vXhyEIHu+HtC738klGALYxOKDO0bQP3tg8A==}
-
-  defer-to-connect@2.0.1:
-    resolution: {integrity: sha512-4tvttepXG1VaYGrRibk5EwJd1t4udunSOVMdLSAL6mId1ix438oPwPZMALY41FCijukO1L0twNcGsdzS7dHgDg==}
-    engines: {node: '>=10'}
-
-  define-data-property@1.1.4:
-    resolution: {integrity: sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==}
-    engines: {node: '>= 0.4'}
-
-  define-properties@1.2.1:
-    resolution: {integrity: sha512-8QmQKqEASLd5nx0U1B1okLElbUuuttJ/AnYmRXbbbGDWh6uS208EjD4Xqq/I9wK7u0v6O08XhTWnt5XtEbR6Dg==}
-    engines: {node: '>= 0.4'}
-
-  define-property@0.2.5:
-    resolution: {integrity: sha512-Rr7ADjQZenceVOAKop6ALkkRAmH1A4Gx9hV/7ZujPUN2rkATqFO0JZLZInbAjpZYoJ1gUx8MRMQVkYemcbMSTA==}
-    engines: {node: '>=0.10.0'}
-
-  define-property@1.0.0:
-    resolution: {integrity: sha512-cZTYKFWspt9jZsMscWo8sc/5lbPC9Q0N5nBLgb+Yd915iL3udB1uFgS3B8YCx66UVHq018DAVFoee7x+gxggeA==}
-    engines: {node: '>=0.10.0'}
-
-  define-property@2.0.2:
-    resolution: {integrity: sha512-jwK2UV4cnPpbcG7+VRARKTZPUWowwXA8bzH5NP6ud0oeAxyYPuGZUAC7hMugpCdz4BeSZl2Dl9k66CHJ/46ZYQ==}
-    engines: {node: '>=0.10.0'}
-
-  delayed-stream@1.0.0:
-    resolution: {integrity: sha512-ZySD7Nf91aLB0RxL4KGrKHBXl7Eds1DAmEdcoVawXnLD7SDhpNgtuII2aAkg7a7QS41jxPSZ17p4VdGnMHk3MQ==}
-    engines: {node: '>=0.4.0'}
-
-  delegates@1.0.0:
-    resolution: {integrity: sha512-bd2L678uiWATM6m5Z1VzNCErI3jiGzt6HGY8OVICs40JQq/HALfbyNJmp0UDakEY4pMMaN0Ly5om/B1VI/+xfQ==}
-
-  detect-libc@2.0.3:
-    resolution: {integrity: sha512-bwy0MGW55bG41VqxxypOsdSdGqLwXPI/focwgTYCFMbdUiBAxLg9CFzG08sz2aqzknwiX7Hkl0bQENjg8iLByw==}
-    engines: {node: '>=8'}
-
-  detect-node@2.1.0:
-    resolution: {integrity: sha512-T0NIuQpnTvFDATNuHN5roPwSBG83rFsuO+MXXH9/3N1eFbn4wcPjttvjMLEPWJ0RGUYgQE7cGgS3tNxbqCGM7g==}
+    "@esbuild/darwin-arm64@0.23.1":
+        optional: true
 
-  dir-compare@4.2.0:
-    resolution: {integrity: sha512-2xMCmOoMrdQIPHdsTawECdNPwlVFB9zGcz3kuhmBO6U3oU+UQjsue0i8ayLKpgBcm+hcXPMVSGUN9d+pvJ6+VQ==}
+    "@esbuild/darwin-arm64@0.24.0":
+        optional: true
 
-  discord-types@1.3.26:
-    resolution: {integrity: sha512-ToG51AOCH+JTQf7b+8vuYQe5Iqwz7nZ7StpECAZ/VZcI1ZhQk13pvt9KkRTfRv1xNvwJ2qib4e3+RifQlo8VPQ==}
+    "@esbuild/darwin-x64@0.23.1":
+        optional: true
 
-  dmg-builder@25.1.8:
-    resolution: {integrity: sha512-NoXo6Liy2heSklTI5OIZbCgXC1RzrDQsZkeEwXhdOro3FT1VBOvbubvscdPnjVuQ4AMwwv61oaH96AbiYg9EnQ==}
+    "@esbuild/darwin-x64@0.24.0":
+        optional: true
 
-  dmg-license@1.0.11:
-    resolution: {integrity: sha512-ZdzmqwKmECOWJpqefloC5OJy1+WZBBse5+MR88z9g9Zn4VY+WYUkAyojmhzJckH5YbbZGcYIuGAkY5/Ys5OM2Q==}
-    engines: {node: '>=8'}
-    os: [darwin]
-    hasBin: true
+    "@esbuild/freebsd-arm64@0.23.1":
+        optional: true
 
-  doctrine@2.1.0:
-    resolution: {integrity: sha512-35mSku4ZXK0vfCuHEDAwt55dg2jNajHZ1odvF+8SSr82EsZY4QmXfuWso8oEd8zRhVObSN18aM0CjSdoBX7zIw==}
-    engines: {node: '>=0.10.0'}
+    "@esbuild/freebsd-arm64@0.24.0":
+        optional: true
 
-  dotenv-expand@11.0.7:
-    resolution: {integrity: sha512-zIHwmZPRshsCdpMDyVsqGmgyP0yT8GAgXUnkdAoJisxvf33k7yO6OuoKmcTGuXPWSsm8Oh88nZicRLA9Y0rUeA==}
-    engines: {node: '>=12'}
+    "@esbuild/freebsd-x64@0.23.1":
+        optional: true
 
-  dotenv@16.4.6:
-    resolution: {integrity: sha512-JhcR/+KIjkkjiU8yEpaB/USlzVi3i5whwOjpIRNGi9svKEXZSe+Qp6IWAjFjv+2GViAoDRCUv/QLNziQxsLqDg==}
-    engines: {node: '>=12'}
+    "@esbuild/freebsd-x64@0.24.0":
+        optional: true
 
-  eastasianwidth@0.2.0:
-    resolution: {integrity: sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==}
+    "@esbuild/linux-arm64@0.23.1":
+        optional: true
 
-  ejs@3.1.10:
-    resolution: {integrity: sha512-UeJmFfOrAQS8OJWPZ4qtgHyWExa088/MtK5UEyoJGFH67cDEXkZSviOiKRCZ4Xij0zxI3JECgYs3oKx+AizQBA==}
-    engines: {node: '>=0.10.0'}
-    hasBin: true
+    "@esbuild/linux-arm64@0.24.0":
+        optional: true
 
-  electron-builder-squirrel-windows@25.1.8:
-    resolution: {integrity: sha512-2ntkJ+9+0GFP6nAISiMabKt6eqBB0kX1QqHNWFWAXgi0VULKGisM46luRFpIBiU3u/TDmhZMM8tzvo2Abn3ayg==}
+    "@esbuild/linux-arm@0.23.1":
+        optional: true
 
-  electron-builder@25.1.8:
-    resolution: {integrity: sha512-poRgAtUHHOnlzZnc9PK4nzG53xh74wj2Jy7jkTrqZ0MWPoHGh1M2+C//hGeYdA+4K8w4yiVCNYoLXF7ySj2Wig==}
-    engines: {node: '>=14.0.0'}
-    hasBin: true
+    "@esbuild/linux-arm@0.24.0":
+        optional: true
 
-  electron-publish@25.1.7:
-    resolution: {integrity: sha512-+jbTkR9m39eDBMP4gfbqglDd6UvBC7RLh5Y0MhFSsc6UkGHj9Vj9TWobxevHYMMqmoujL11ZLjfPpMX+Pt6YEg==}
+    "@esbuild/linux-ia32@0.23.1":
+        optional: true
 
-  electron-updater@6.3.9:
-    resolution: {integrity: sha512-2PJNONi+iBidkoC5D1nzT9XqsE8Q1X28Fn6xRQhO3YX8qRRyJ3mkV4F1aQsuRnYPqq6Hw+E51y27W75WgDoofw==}
+    "@esbuild/linux-ia32@0.24.0":
+        optional: true
 
-  electron@33.2.1:
-    resolution: {integrity: sha512-SG/nmSsK9Qg1p6wAW+ZfqU+AV8cmXMTIklUL18NnOKfZLlum4ZsDoVdmmmlL39ZmeCaq27dr7CgslRPahfoVJg==}
-    engines: {node: '>= 12.20.55'}
-    hasBin: true
+    "@esbuild/linux-loong64@0.23.1":
+        optional: true
 
-  emoji-regex@8.0.0:
-    resolution: {integrity: sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==}
+    "@esbuild/linux-loong64@0.24.0":
+        optional: true
 
-  emoji-regex@9.2.2:
-    resolution: {integrity: sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==}
-
-  encoding@0.1.13:
-    resolution: {integrity: sha512-ETBauow1T35Y/WZMkio9jiM0Z5xjHHmJ4XmjZOq1l/dXz3lr2sRn87nJy20RupqSh1F2m3HHPSp8ShIPQJrJ3A==}
-
-  end-of-stream@1.4.4:
-    resolution: {integrity: sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x/oIyhLP5PR1H+phQAHu5Q==}
+    "@esbuild/linux-mips64el@0.23.1":
+        optional: true
 
-  env-paths@2.2.1:
-    resolution: {integrity: sha512-+h1lkLKhZMTYjog1VEpJNG7NZJWcuc2DDk/qsqSTRRCOXiLjeQ1d1/udrUGhqMxUgAlwKNZ0cf2uqan5GLuS2A==}
-    engines: {node: '>=6'}
+    "@esbuild/linux-mips64el@0.24.0":
+        optional: true
 
-  err-code@2.0.3:
-    resolution: {integrity: sha512-2bmlRpNKBxT/CRmPOlyISQpNj+qSeYvcym/uT0Jx2bMOlKLtSy1ZmLuVxSEKKyor/N5yhvp/ZiG1oE3DEYMSFA==}
+    "@esbuild/linux-ppc64@0.23.1":
+        optional: true
 
-  es-abstract@1.23.5:
-    resolution: {integrity: sha512-vlmniQ0WNPwXqA0BnmwV3Ng7HxiGlh6r5U6JcTMNx8OilcAGqVJBHJcPjqOMaczU9fRuRK5Px2BdVyPRnKMMVQ==}
-    engines: {node: '>= 0.4'}
+    "@esbuild/linux-ppc64@0.24.0":
+        optional: true
 
-  es-define-property@1.0.0:
-    resolution: {integrity: sha512-jxayLKShrEqqzJ0eumQbVhTYQM27CfT1T35+gCgDFoL82JLsXqTJ76zv6A0YLOgEnLUMvLzsDsGIrl8NFpT2gQ==}
-    engines: {node: '>= 0.4'}
+    "@esbuild/linux-riscv64@0.23.1":
+        optional: true
 
-  es-errors@1.3.0:
-    resolution: {integrity: sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==}
-    engines: {node: '>= 0.4'}
+    "@esbuild/linux-riscv64@0.24.0":
+        optional: true
 
-  es-object-atoms@1.0.0:
-    resolution: {integrity: sha512-MZ4iQ6JwHOBQjahnjwaC1ZtIBH+2ohjamzAO3oaHcXYup7qxjF2fixyH+Q71voWHeOkI2q/TnJao/KfXYIZWbw==}
-    engines: {node: '>= 0.4'}
+    "@esbuild/linux-s390x@0.23.1":
+        optional: true
 
-  es-set-tostringtag@2.0.3:
-    resolution: {integrity: sha512-3T8uNMC3OQTHkFUsFq8r/BwAXLHvU/9O9mE0fBc/MY5iq/8H7ncvO947LmYA6ldWw9Uh8Yhf25zu6n7nML5QWQ==}
-    engines: {node: '>= 0.4'}
+    "@esbuild/linux-s390x@0.24.0":
+        optional: true
 
-  es-shim-unscopables@1.0.2:
-    resolution: {integrity: sha512-J3yBRXCzDu4ULnQwxyToo/OjdMx6akgVC7K6few0a7F/0wLtmKKN7I73AH5T2836UuXRqN7Qg+IIUw/+YJksRw==}
-
-  es-to-primitive@1.3.0:
-    resolution: {integrity: sha512-w+5mJ3GuFL+NjVtJlvydShqE1eN3h3PbI7/5LAsYJP/2qtuMXjfL2LpHSRqo4b4eSF5K/DH1JXKUAHSB2UW50g==}
-    engines: {node: '>= 0.4'}
-
-  es6-error@4.1.1:
-    resolution: {integrity: sha512-Um/+FxMr9CISWh0bi5Zv0iOD+4cFh5qLeks1qhAopKVAJw3drgKbKySikp7wGhDL0HPeaja0P5ULZrxLkniUVg==}
-
-  esbuild@0.23.1:
-    resolution: {integrity: sha512-VVNz/9Sa0bs5SELtn3f7qhJCDPCF5oMEl5cO9/SSinpE9hbPVvxbd572HH5AKiP7WD8INO53GgfDDhRjkylHEg==}
-    engines: {node: '>=18'}
-    hasBin: true
-
-  esbuild@0.24.0:
-    resolution: {integrity: sha512-FuLPevChGDshgSicjisSooU0cemp/sGXR841D5LHMB7mTVOmsEHcAxaH3irL53+8YDIeVNQEySh4DaYU/iuPqQ==}
-    engines: {node: '>=18'}
-    hasBin: true
-
-  escalade@3.2.0:
-    resolution: {integrity: sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==}
-    engines: {node: '>=6'}
-
-  escape-string-regexp@4.0.0:
-    resolution: {integrity: sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==}
-    engines: {node: '>=10'}
-
-  eslint-config-prettier@9.1.0:
-    resolution: {integrity: sha512-NSWl5BFQWEPi1j4TjVNItzYV7dZXZ+wP6I6ZhrBGpChQhZRUaElihE9uRRkcbRnNb76UMKDF3r+WTmNcGPKsqw==}
-    hasBin: true
-    peerDependencies:
-      eslint: '>=7.0.0'
-
-  eslint-import-resolver-alias@1.1.2:
-    resolution: {integrity: sha512-WdviM1Eu834zsfjHtcGHtGfcu+F30Od3V7I9Fi57uhBEwPkjDcii7/yW8jAT+gOhn4P/vOxxNAXbFAKsrrc15w==}
-    engines: {node: '>= 4'}
-    peerDependencies:
-      eslint-plugin-import: '>=1.4.0'
-
-  eslint-import-resolver-node@0.3.9:
-    resolution: {integrity: sha512-WFj2isz22JahUv+B788TlO3N6zL3nNJGU8CcZbPZvVEkBPaJdCV4vy5wyghty5ROFbCRnm132v8BScu5/1BQ8g==}
-
-  eslint-module-utils@2.12.0:
-    resolution: {integrity: sha512-wALZ0HFoytlyh/1+4wuZ9FJCD/leWHQzzrxJ8+rebyReSLk7LApMyd3WJaLVoN+D5+WIdJyDK1c6JnE65V4Zyg==}
-    engines: {node: '>=4'}
-    peerDependencies:
-      '@typescript-eslint/parser': '*'
-      eslint: '*'
-      eslint-import-resolver-node: '*'
-      eslint-import-resolver-typescript: '*'
-      eslint-import-resolver-webpack: '*'
-    peerDependenciesMeta:
-      '@typescript-eslint/parser':
+    "@esbuild/linux-x64@0.23.1":
         optional: true
-      eslint:
+
+    "@esbuild/linux-x64@0.24.0":
         optional: true
-      eslint-import-resolver-node:
+
+    "@esbuild/netbsd-x64@0.23.1":
         optional: true
-      eslint-import-resolver-typescript:
+
+    "@esbuild/netbsd-x64@0.24.0":
         optional: true
-      eslint-import-resolver-webpack:
+
+    "@esbuild/openbsd-arm64@0.23.1":
         optional: true
 
-  eslint-plugin-import@2.31.0:
-    resolution: {integrity: sha512-ixmkI62Rbc2/w8Vfxyh1jQRTdRTF52VxwRVHl/ykPAmqG+Nb7/kNn+byLP0LxPgI7zWA16Jt82SybJInmMia3A==}
-    engines: {node: '>=4'}
-    peerDependencies:
-      '@typescript-eslint/parser': '*'
-      eslint: ^2 || ^3 || ^4 || ^5 || ^6 || ^7.2.0 || ^8 || ^9
-    peerDependenciesMeta:
-      '@typescript-eslint/parser':
+    "@esbuild/openbsd-arm64@0.24.0":
         optional: true
 
-  eslint-plugin-path-alias@2.1.0:
-    resolution: {integrity: sha512-suHrHK2MmTDsmQhrZs+hvrNI2PBKAnZ4ir7y3oJLXJsjOFBfOJoQd+URqZC7ICHyNqesoZdcA0BxEG8z5p/mPw==}
-    peerDependencies:
-      eslint: ^8.0.0
-
-  eslint-plugin-prettier@5.2.1:
-    resolution: {integrity: sha512-gH3iR3g4JfF+yYPaJYkN7jEl9QbweL/YfkoRlNnuIEHEz1vHVlCmWOS+eGGiRuzHQXdJFCOTxRgvju9b8VUmrw==}
-    engines: {node: ^14.18.0 || >=16.0.0}
-    peerDependencies:
-      '@types/eslint': '>=8.0.0'
-      eslint: '>=8.0.0'
-      eslint-config-prettier: '*'
-      prettier: '>=3.0.0'
-    peerDependenciesMeta:
-      '@types/eslint':
+    "@esbuild/openbsd-x64@0.23.1":
         optional: true
-      eslint-config-prettier:
+
+    "@esbuild/openbsd-x64@0.24.0":
         optional: true
 
-  eslint-plugin-simple-header@1.2.1:
-    resolution: {integrity: sha512-l9eEOpBkd4T6yVE09WADLVPU6eKHjQ7QjowMChsbYwsge+98NxyIlqvYpQQJWVxakgW7uooFGNVEFdFWzEMcVg==}
-    peerDependencies:
-      eslint: '>=8.41.0'
-
-  eslint-plugin-simple-import-sort@12.1.1:
-    resolution: {integrity: sha512-6nuzu4xwQtE3332Uz0to+TxDQYRLTKRESSc2hefVT48Zc8JthmN23Gx9lnYhu0FtkRSL1oxny3kJ2aveVhmOVA==}
-    peerDependencies:
-      eslint: '>=5.0.0'
-
-  eslint-plugin-unused-imports@4.1.4:
-    resolution: {integrity: sha512-YptD6IzQjDardkl0POxnnRBhU1OEePMV0nd6siHaRBbd+lyh6NAhFEobiznKU7kTsSsDeSD62Pe7kAM1b7dAZQ==}
-    peerDependencies:
-      '@typescript-eslint/eslint-plugin': ^8.0.0-0 || ^7.0.0 || ^6.0.0 || ^5.0.0
-      eslint: ^9.0.0 || ^8.0.0
-    peerDependenciesMeta:
-      '@typescript-eslint/eslint-plugin':
+    "@esbuild/sunos-x64@0.23.1":
         optional: true
 
-  eslint-scope@8.2.0:
-    resolution: {integrity: sha512-PHlWUfG6lvPc3yvP5A4PNyBL1W8fkDUccmI21JUu/+GKZBoH/W5u6usENXUrWFRsyoW5ACUjFGgAFQp5gUlb/A==}
-    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
-
-  eslint-visitor-keys@3.4.3:
-    resolution: {integrity: sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==}
-    engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}
-
-  eslint-visitor-keys@4.2.0:
-    resolution: {integrity: sha512-UyLnSehNt62FFhSwjZlHmeokpRK59rcz29j+F1/aDgbkbRTk7wIc9XzdoasMUbRNKDM0qQt/+BJ4BrpFeABemw==}
-    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
-
-  eslint@9.16.0:
-    resolution: {integrity: sha512-whp8mSQI4C8VXd+fLgSM0lh3UlmcFtVwUQjyKCFfsp+2ItAIYhlq/hqGahGqHE6cv9unM41VlqKk2VtKYR2TaA==}
-    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
-    hasBin: true
-    peerDependencies:
-      jiti: '*'
-    peerDependenciesMeta:
-      jiti:
+    "@esbuild/sunos-x64@0.24.0":
         optional: true
 
-  espree@10.3.0:
-    resolution: {integrity: sha512-0QYC8b24HWY8zjRnDTL6RiHfDbAWn63qb4LMj1Z4b076A4une81+z03Kg7l7mn/48PUTqoLptSXez8oknU8Clg==}
-    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
+    "@esbuild/win32-arm64@0.23.1":
+        optional: true
 
-  esquery@1.6.0:
-    resolution: {integrity: sha512-ca9pw9fomFcKPvFLXhBKUK90ZvGibiGOvRJNbjljY7s7uq/5YO4BOzcYtJqExdx99rF6aAcnRxHmcUHcz6sQsg==}
-    engines: {node: '>=0.10'}
+    "@esbuild/win32-arm64@0.24.0":
+        optional: true
 
-  esrecurse@4.3.0:
-    resolution: {integrity: sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==}
-    engines: {node: '>=4.0'}
+    "@esbuild/win32-ia32@0.23.1":
+        optional: true
 
-  estraverse@5.3.0:
-    resolution: {integrity: sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==}
-    engines: {node: '>=4.0'}
+    "@esbuild/win32-ia32@0.24.0":
+        optional: true
 
-  esutils@2.0.3:
-    resolution: {integrity: sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==}
-    engines: {node: '>=0.10.0'}
+    "@esbuild/win32-x64@0.23.1":
+        optional: true
 
-  expand-tilde@2.0.2:
-    resolution: {integrity: sha512-A5EmesHW6rfnZ9ysHQjPdJRni0SRar0tjtG5MNtm9n5TUvsYU8oozprtRD4AqHxcZWWlVuAmQo2nWKfN9oyjTw==}
-    engines: {node: '>=0.10.0'}
+    "@esbuild/win32-x64@0.24.0":
+        optional: true
 
-  exponential-backoff@3.1.1:
-    resolution: {integrity: sha512-dX7e/LHVJ6W3DE1MHWi9S1EYzDESENfLrYohG2G++ovZrYOkm4Knwa0mc1cn84xJOR4KEU0WSchhLbd0UklbHw==}
+    "@eslint-community/eslint-utils@4.4.1(eslint@9.16.0)":
+        dependencies:
+            eslint: 9.16.0
+            eslint-visitor-keys: 3.4.3
+
+    "@eslint-community/regexpp@4.12.1": {}
+
+    "@eslint/config-array@0.19.0":
+        dependencies:
+            "@eslint/object-schema": 2.1.4
+            debug: 4.3.7
+            minimatch: 3.1.2
+        transitivePeerDependencies:
+            - supports-color
+
+    "@eslint/core@0.9.0": {}
+
+    "@eslint/eslintrc@3.2.0":
+        dependencies:
+            ajv: 6.12.6
+            debug: 4.3.7
+            espree: 10.3.0
+            globals: 14.0.0
+            ignore: 5.3.2
+            import-fresh: 3.3.0
+            js-yaml: 4.1.0
+            minimatch: 3.1.2
+            strip-json-comments: 3.1.1
+        transitivePeerDependencies:
+            - supports-color
+
+    "@eslint/js@9.16.0": {}
+
+    "@eslint/object-schema@2.1.4": {}
+
+    "@eslint/plugin-kit@0.2.3":
+        dependencies:
+            levn: 0.4.1
+
+    "@fal-works/esbuild-plugin-global-externals@2.1.2": {}
+
+    "@gar/promisify@1.1.3": {}
+
+    "@humanfs/core@0.19.1": {}
+
+    "@humanfs/node@0.16.6":
+        dependencies:
+            "@humanfs/core": 0.19.1
+            "@humanwhocodes/retry": 0.3.1
+
+    "@humanwhocodes/module-importer@1.0.1": {}
+
+    "@humanwhocodes/retry@0.3.1": {}
+
+    "@humanwhocodes/retry@0.4.1": {}
+
+    "@isaacs/cliui@8.0.2":
+        dependencies:
+            string-width: 5.1.2
+            string-width-cjs: string-width@4.2.3
+            strip-ansi: 7.1.0
+            strip-ansi-cjs: strip-ansi@6.0.1
+            wrap-ansi: 8.1.0
+            wrap-ansi-cjs: wrap-ansi@7.0.0
+
+    "@malept/cross-spawn-promise@2.0.0":
+        dependencies:
+            cross-spawn: 7.0.6
+
+    "@malept/flatpak-bundler@0.4.0":
+        dependencies:
+            debug: 4.3.7
+            fs-extra: 9.1.0
+            lodash: 4.17.21
+            tmp-promise: 3.0.3
+        transitivePeerDependencies:
+            - supports-color
+
+    "@nodelib/fs.scandir@2.1.5":
+        dependencies:
+            "@nodelib/fs.stat": 2.0.5
+            run-parallel: 1.2.0
+
+    "@nodelib/fs.stat@2.0.5": {}
+
+    "@nodelib/fs.walk@1.2.8":
+        dependencies:
+            "@nodelib/fs.scandir": 2.1.5
+            fastq: 1.17.1
+
+    "@npmcli/fs@2.1.2":
+        dependencies:
+            "@gar/promisify": 1.1.3
+            semver: 7.6.3
+
+    "@npmcli/move-file@2.0.1":
+        dependencies:
+            mkdirp: 1.0.4
+            rimraf: 3.0.2
+
+    "@pkgjs/parseargs@0.11.0":
+        optional: true
 
-  extend-shallow@2.0.1:
-    resolution: {integrity: sha512-zCnTtlxNoAiDc3gqY2aYAWFx7XWWiasuF2K8Me5WbN8otHKTUKBwjPtNpRs/rbUZm7KxWAaNj7P1a/p52GbVug==}
-    engines: {node: '>=0.10.0'}
+    "@pkgr/core@0.1.1": {}
 
-  extend-shallow@3.0.2:
-    resolution: {integrity: sha512-BwY5b5Ql4+qZoefgMj2NUmx+tehVTH/Kf4k1ZEtOHNFcm2wSxMRo992l6X3TIgni2eZVTZ85xMOjF31fwZAj6Q==}
-    engines: {node: '>=0.10.0'}
+    "@rtsao/scc@1.1.0": {}
 
-  extract-zip@2.0.1:
-    resolution: {integrity: sha512-GDhU9ntwuKyGXdZBUgTIe+vXnWj0fppUEtMDL0+idd5Sta8TGpHssn/eusA9mrPr9qNDym6SxAYZjNvCn/9RBg==}
-    engines: {node: '>= 10.17.0'}
-    hasBin: true
+    "@sindresorhus/is@4.6.0": {}
 
-  extsprintf@1.4.1:
-    resolution: {integrity: sha512-Wrk35e8ydCKDj/ArClo1VrPVmN8zph5V4AtHwIuHhvMXsKf73UT3BOD+azBIW+3wOJ4FhEH7zyaJCFvChjYvMA==}
-    engines: {'0': node >=0.6.0}
+    "@stylistic/eslint-plugin@2.11.0(eslint@9.16.0)(typescript@5.7.2)":
+        dependencies:
+            "@typescript-eslint/utils": 8.17.0(eslint@9.16.0)(typescript@5.7.2)
+            eslint: 9.16.0
+            eslint-visitor-keys: 4.2.0
+            espree: 10.3.0
+            estraverse: 5.3.0
+            picomatch: 4.0.2
+        transitivePeerDependencies:
+            - supports-color
+            - typescript
 
-  fast-deep-equal@3.1.3:
-    resolution: {integrity: sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==}
+    "@szmarczak/http-timer@4.0.6":
+        dependencies:
+            defer-to-connect: 2.0.1
 
-  fast-diff@1.3.0:
-    resolution: {integrity: sha512-VxPP4NqbUjj6MaAOafWeUn2cXWLcCtljklUtZf0Ind4XQ+QPtmA0b18zZy0jIQx+ExRVCR/ZQpBmik5lXshNsw==}
+    "@tootallnate/once@2.0.0": {}
 
-  fast-glob@3.3.2:
-    resolution: {integrity: sha512-oX2ruAFQwf/Orj8m737Y5adxDQO0LAB7/S5MnxCdTNDd4p6BsyIVsv9JQsATbTSq8KHRpLwIHbVlUNatxd+1Ow==}
-    engines: {node: '>=8.6.0'}
+    "@types/cacheable-request@6.0.3":
+        dependencies:
+            "@types/http-cache-semantics": 4.0.4
+            "@types/keyv": 3.1.4
+            "@types/node": 22.10.1
+            "@types/responselike": 1.0.3
 
-  fast-json-stable-stringify@2.1.0:
-    resolution: {integrity: sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==}
+    "@types/debug@4.1.12":
+        dependencies:
+            "@types/ms": 0.7.34
 
-  fast-levenshtein@2.0.6:
-    resolution: {integrity: sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==}
+    "@types/estree@1.0.6": {}
 
-  fastq@1.17.1:
-    resolution: {integrity: sha512-sRVD3lWVIXWg6By68ZN7vho9a1pQcN/WBFaAAsDDFzlJjvoGx0P8z7V1t72grFJfJhu3YPZBuu25f7Kaw2jN1w==}
+    "@types/fs-extra@9.0.13":
+        dependencies:
+            "@types/node": 22.10.1
 
-  fd-slicer@1.1.0:
-    resolution: {integrity: sha512-cE1qsB/VwyQozZ+q1dGxR8LBYNZeofhEdUNGSMbQD3Gw2lAzX9Zb3uIU6Ebc/Fmyjo9AWWfnn0AUCHqtevs/8g==}
+    "@types/http-cache-semantics@4.0.4": {}
 
-  file-entry-cache@8.0.0:
-    resolution: {integrity: sha512-XXTUwCvisa5oacNGRP9SfNtYBNAMi+RPwBFmblZEF7N7swHYQS6/Zfk7SRwx4D5j3CH211YNRco1DEMNVfZCnQ==}
-    engines: {node: '>=16.0.0'}
+    "@types/json-schema@7.0.15": {}
 
-  filelist@1.0.4:
-    resolution: {integrity: sha512-w1cEuf3S+DrLCQL7ET6kz+gmlJdbq9J7yXCSjK/OZCPA+qEN1WyF4ZAf0YYJa4/shHJra2t/d/r8SV4Ji+x+8Q==}
+    "@types/json5@0.0.29": {}
 
-  fill-range@7.1.1:
-    resolution: {integrity: sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==}
-    engines: {node: '>=8'}
+    "@types/keyv@3.1.4":
+        dependencies:
+            "@types/node": 22.10.1
 
-  find-file-up@2.0.1:
-    resolution: {integrity: sha512-qVdaUhYO39zmh28/JLQM5CoYN9byEOKEH4qfa8K1eNV17W0UUMJ9WgbR/hHFH+t5rcl+6RTb5UC7ck/I+uRkpQ==}
-    engines: {node: '>=8'}
+    "@types/lodash@4.17.13": {}
 
-  find-pkg@2.0.0:
-    resolution: {integrity: sha512-WgZ+nKbELDa6N3i/9nrHeNznm+lY3z4YfhDDWgW+5P0pdmMj26bxaxU11ookgY3NyP9GC7HvZ9etp0jRFqGEeQ==}
-    engines: {node: '>=8'}
+    "@types/ms@0.7.34": {}
 
-  find-up@5.0.0:
-    resolution: {integrity: sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==}
-    engines: {node: '>=10'}
+    "@types/node@18.19.67":
+        dependencies:
+            undici-types: 5.26.5
 
-  flat-cache@4.0.1:
-    resolution: {integrity: sha512-f7ccFPK3SXFHpx15UIGyRJ/FJQctuKZ0zVuN3frBo4HnK3cay9VEW0R6yPYFHC0AgqhukPzKjq22t5DmAyqGyw==}
-    engines: {node: '>=16'}
+    "@types/node@20.17.9":
+        dependencies:
+            undici-types: 6.19.8
 
-  flatted@3.3.2:
-    resolution: {integrity: sha512-AiwGJM8YcNOaobumgtng+6NHuOqC3A7MixFeDafM3X9cIUM+xUXoS5Vfgf+OihAYe20fxqNM9yPBXJzRtZ/4eA==}
+    "@types/node@22.10.1":
+        dependencies:
+            undici-types: 6.20.0
 
-  follow-redirects@1.15.9:
-    resolution: {integrity: sha512-gew4GsXizNgdoRyqmyfMHyAmXsZDk6mHkSxZFCzW9gwlbtOW44CDtYavM+y+72qD/Vq2l550kMF52DT8fOLJqQ==}
-    engines: {node: '>=4.0'}
-    peerDependencies:
-      debug: '*'
-    peerDependenciesMeta:
-      debug:
+    "@types/plist@3.0.5":
+        dependencies:
+            "@types/node": 22.10.1
+            xmlbuilder: 15.1.1
         optional: true
 
-  for-each@0.3.3:
-    resolution: {integrity: sha512-jqYfLp7mo9vIyQf8ykW2v7A+2N4QjeCeI5+Dz9XraiO1ign81wjiH7Fb9vSOWvQfNtmSa4H2RoQTrrXivdUZmw==}
-
-  for-in@1.0.2:
-    resolution: {integrity: sha512-7EwmXrOjyL+ChxMhmG5lnW9MPt1aIeZEwKhQzoBUdTV0N3zuwWDZYVJatDvZ2OyzPUvdIAZDsCetk3coyMfcnQ==}
-    engines: {node: '>=0.10.0'}
-
-  foreground-child@3.3.0:
-    resolution: {integrity: sha512-Ld2g8rrAyMYFXBhEqMz8ZAHBi4J4uS1i/CxGMDnjyFWddMXLVcDp051DZfu+t7+ab7Wv6SMqpWmyFIj5UbfFvg==}
-    engines: {node: '>=14'}
+    "@types/prop-types@15.7.13": {}
 
-  form-data@4.0.1:
-    resolution: {integrity: sha512-tzN8e4TX8+kkxGPK8D5u0FNmjPUjw3lwC9lSLxxoB/+GtsJG91CO8bSWy73APlgAZzZbXEYZJuxjkHH2w+Ezhw==}
-    engines: {node: '>= 6'}
+    "@types/react-dom@18.3.1":
+        dependencies:
+            "@types/react": 18.3.12
 
-  fragment-cache@0.2.1:
-    resolution: {integrity: sha512-GMBAbW9antB8iZRHLoGw0b3HANt57diZYFO/HL1JGIC1MjKrdmhxvrJbupnVvpys0zsz7yBApXdQyfepKly2kA==}
-    engines: {node: '>=0.10.0'}
+    "@types/react@17.0.2":
+        dependencies:
+            "@types/prop-types": 15.7.13
+            csstype: 3.1.3
 
-  fs-constants@1.0.0:
-    resolution: {integrity: sha512-y6OAwoSIf7FyjMIv94u+b5rdheZEjzR63GTyZJm5qh4Bi+2YgwLCcI/fPFZkL5PSixOt6ZNKm+w+Hfp/Bciwow==}
+    "@types/react@18.3.12":
+        dependencies:
+            "@types/prop-types": 15.7.13
+            csstype: 3.1.3
 
-  fs-extra@10.1.0:
-    resolution: {integrity: sha512-oRXApq54ETRj4eMiFzGnHWGy+zo5raudjuxN0b8H7s/RU2oW0Wvsx9O0ACRN/kRq9E8Vu/ReskGB5o3ji+FzHQ==}
-    engines: {node: '>=12'}
+    "@types/responselike@1.0.3":
+        dependencies:
+            "@types/node": 22.10.1
 
-  fs-extra@11.2.0:
-    resolution: {integrity: sha512-PmDi3uwK5nFuXh7XDTlVnS17xJS7vW36is2+w3xcv8SVxiB4NyATf4ctkVY5bkSjX0Y4nbvZCq1/EjtEyr9ktw==}
-    engines: {node: '>=14.14'}
-
-  fs-extra@8.1.0:
-    resolution: {integrity: sha512-yhlQgA6mnOJUKOsRUFsgJdQCvkKhcz8tlZG5HBQfReYZy46OwLcY+Zia0mtdHsOo9y/hP+CxMN0TU9QxoOtG4g==}
-    engines: {node: '>=6 <7 || >=8'}
-
-  fs-extra@9.1.0:
-    resolution: {integrity: sha512-hcg3ZmepS30/7BSFqRvoo3DOMQu7IjqxO5nCDt+zM9XWjb33Wg7ziNT+Qvqbuc3+gWpzO02JubVyk2G4Zvo1OQ==}
-    engines: {node: '>=10'}
-
-  fs-minipass@2.1.0:
-    resolution: {integrity: sha512-V/JgOLFCS+R6Vcq0slCuaeWEdNC3ouDlJMNIsacH2VtALiu9mV4LPrHc5cDl8k5aw6J8jwgWWpiTo5RYhmIzvg==}
-    engines: {node: '>= 8'}
-
-  fs.realpath@1.0.0:
-    resolution: {integrity: sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==}
-
-  fsevents@2.3.3:
-    resolution: {integrity: sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==}
-    engines: {node: ^8.16.0 || ^10.6.0 || >=11.0.0}
-    os: [darwin]
-
-  function-bind@1.1.2:
-    resolution: {integrity: sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==}
-
-  function.prototype.name@1.1.6:
-    resolution: {integrity: sha512-Z5kx79swU5P27WEayXM1tBi5Ze/lbIyiNgU3qyXUOf9b2rgXYyF9Dy9Cx+IQv/Lc8WCG6L82zwUPpSS9hGehIg==}
-    engines: {node: '>= 0.4'}
-
-  functions-have-names@1.2.3:
-    resolution: {integrity: sha512-xckBUXyTIqT97tq2x2AMb+g163b5JFysYk0x4qxNFwbfQkmNZoiRHb6sPzI9/QV33WeuvVYBUIiD4NzNIyqaRQ==}
-
-  gauge@4.0.4:
-    resolution: {integrity: sha512-f9m+BEN5jkg6a0fZjleidjN51VE1X+mPFQ2DJ0uv1V39oCLCbsGe6yjbBnp7eK7z/+GAon99a3nHuqbuuthyPg==}
-    engines: {node: ^12.13.0 || ^14.15.0 || >=16.0.0}
-    deprecated: This package is no longer supported.
-
-  get-caller-file@2.0.5:
-    resolution: {integrity: sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==}
-    engines: {node: 6.* || 8.* || >= 10.*}
-
-  get-intrinsic@1.2.4:
-    resolution: {integrity: sha512-5uYhsJH8VJBTv7oslg4BznJYhDoRI6waYCxMmCdnTrcCrHA/fCFKoTFz2JKKE0HdDFUF7/oQuhzumXJK7paBRQ==}
-    engines: {node: '>= 0.4'}
+    "@types/verror@1.10.10":
+        optional: true
 
-  get-stream@5.2.0:
-    resolution: {integrity: sha512-nBF+F1rAZVCu/p7rjzgA+Yb4lfYXrpl7a6VmJrU8wF9I1CKvP/QwPNZHnOlwbTkY6dvtFIzFMSyQXbLoTQPRpA==}
-    engines: {node: '>=8'}
+    "@types/yauzl@2.10.3":
+        dependencies:
+            "@types/node": 22.10.1
+        optional: true
 
-  get-symbol-description@1.0.2:
-    resolution: {integrity: sha512-g0QYk1dZBxGwk+Ngc+ltRH2IBp2f7zBkBMBJZCDerh6EhlhSR6+9irMCuT/09zD6qkarHUSn529sK/yL4S27mg==}
-    engines: {node: '>= 0.4'}
+    "@typescript-eslint/eslint-plugin@8.17.0(@typescript-eslint/parser@8.17.0(eslint@9.16.0)(typescript@5.7.2))(eslint@9.16.0)(typescript@5.7.2)":
+        dependencies:
+            "@eslint-community/regexpp": 4.12.1
+            "@typescript-eslint/parser": 8.17.0(eslint@9.16.0)(typescript@5.7.2)
+            "@typescript-eslint/scope-manager": 8.17.0
+            "@typescript-eslint/type-utils": 8.17.0(eslint@9.16.0)(typescript@5.7.2)
+            "@typescript-eslint/utils": 8.17.0(eslint@9.16.0)(typescript@5.7.2)
+            "@typescript-eslint/visitor-keys": 8.17.0
+            eslint: 9.16.0
+            graphemer: 1.4.0
+            ignore: 5.3.2
+            natural-compare: 1.4.0
+            ts-api-utils: 1.4.3(typescript@5.7.2)
+        optionalDependencies:
+            typescript: 5.7.2
+        transitivePeerDependencies:
+            - supports-color
+
+    "@typescript-eslint/parser@8.17.0(eslint@9.16.0)(typescript@5.7.2)":
+        dependencies:
+            "@typescript-eslint/scope-manager": 8.17.0
+            "@typescript-eslint/types": 8.17.0
+            "@typescript-eslint/typescript-estree": 8.17.0(typescript@5.7.2)
+            "@typescript-eslint/visitor-keys": 8.17.0
+            debug: 4.3.7
+            eslint: 9.16.0
+        optionalDependencies:
+            typescript: 5.7.2
+        transitivePeerDependencies:
+            - supports-color
+
+    "@typescript-eslint/scope-manager@8.17.0":
+        dependencies:
+            "@typescript-eslint/types": 8.17.0
+            "@typescript-eslint/visitor-keys": 8.17.0
+
+    "@typescript-eslint/type-utils@8.17.0(eslint@9.16.0)(typescript@5.7.2)":
+        dependencies:
+            "@typescript-eslint/typescript-estree": 8.17.0(typescript@5.7.2)
+            "@typescript-eslint/utils": 8.17.0(eslint@9.16.0)(typescript@5.7.2)
+            debug: 4.3.7
+            eslint: 9.16.0
+            ts-api-utils: 1.4.3(typescript@5.7.2)
+        optionalDependencies:
+            typescript: 5.7.2
+        transitivePeerDependencies:
+            - supports-color
+
+    "@typescript-eslint/types@8.17.0": {}
+
+    "@typescript-eslint/typescript-estree@8.17.0(typescript@5.7.2)":
+        dependencies:
+            "@typescript-eslint/types": 8.17.0
+            "@typescript-eslint/visitor-keys": 8.17.0
+            debug: 4.3.7
+            fast-glob: 3.3.2
+            is-glob: 4.0.3
+            minimatch: 9.0.5
+            semver: 7.6.3
+            ts-api-utils: 1.4.3(typescript@5.7.2)
+        optionalDependencies:
+            typescript: 5.7.2
+        transitivePeerDependencies:
+            - supports-color
+
+    "@typescript-eslint/utils@8.17.0(eslint@9.16.0)(typescript@5.7.2)":
+        dependencies:
+            "@eslint-community/eslint-utils": 4.4.1(eslint@9.16.0)
+            "@typescript-eslint/scope-manager": 8.17.0
+            "@typescript-eslint/types": 8.17.0
+            "@typescript-eslint/typescript-estree": 8.17.0(typescript@5.7.2)
+            eslint: 9.16.0
+        optionalDependencies:
+            typescript: 5.7.2
+        transitivePeerDependencies:
+            - supports-color
+
+    "@typescript-eslint/visitor-keys@8.17.0":
+        dependencies:
+            "@typescript-eslint/types": 8.17.0
+            eslint-visitor-keys: 4.2.0
+
+    "@vencord/types@1.8.4":
+        dependencies:
+            "@types/lodash": 4.17.13
+            "@types/node": 18.19.67
+            "@types/react": 18.3.12
+            "@types/react-dom": 18.3.1
+            discord-types: 1.3.26
+            standalone-electron-types: 1.0.0
+            type-fest: 3.13.1
+
+    "@vencord/venmic@6.1.0":
+        dependencies:
+            cmake-js: 7.3.0
+            node-addon-api: 8.3.0
+            pkg-prebuilds: 0.2.1
+        transitivePeerDependencies:
+            - supports-color
+        optional: true
 
-  get-tsconfig@4.8.1:
-    resolution: {integrity: sha512-k9PN+cFBmaLWtVz29SkUoqU5O0slLuHJXt/2P+tMVFT+phsSGXGkp9t3rQIqdz0e+06EHNGs3oM6ZX1s2zHxRg==}
+    "@xmldom/xmldom@0.8.10": {}
+
+    abbrev@1.1.1: {}
+
+    acorn-jsx@5.3.2(acorn@8.14.0):
+        dependencies:
+            acorn: 8.14.0
+
+    acorn@8.14.0: {}
+
+    agent-base@6.0.2:
+        dependencies:
+            debug: 4.3.7
+        transitivePeerDependencies:
+            - supports-color
+
+    agent-base@7.1.1:
+        dependencies:
+            debug: 4.3.7
+        transitivePeerDependencies:
+            - supports-color
+
+    agentkeepalive@4.5.0:
+        dependencies:
+            humanize-ms: 1.2.1
+
+    aggregate-error@3.1.0:
+        dependencies:
+            clean-stack: 2.2.0
+            indent-string: 4.0.0
+
+    ajv-keywords@3.5.2(ajv@6.12.6):
+        dependencies:
+            ajv: 6.12.6
+
+    ajv@6.12.6:
+        dependencies:
+            fast-deep-equal: 3.1.3
+            fast-json-stable-stringify: 2.1.0
+            json-schema-traverse: 0.4.1
+            uri-js: 4.4.1
+
+    ansi-regex@5.0.1: {}
+
+    ansi-regex@6.1.0: {}
+
+    ansi-styles@4.3.0:
+        dependencies:
+            color-convert: 2.0.1
+
+    ansi-styles@6.2.1: {}
+
+    app-builder-bin@5.0.0-alpha.10: {}
+
+    app-builder-lib@25.1.8(dmg-builder@25.1.8(electron-builder-squirrel-windows@25.1.8(dmg-builder@25.1.8)))(electron-builder-squirrel-windows@25.1.8(dmg-builder@25.1.8)):
+        dependencies:
+            "@develar/schema-utils": 2.6.5
+            "@electron/notarize": 2.5.0
+            "@electron/osx-sign": 1.3.1
+            "@electron/rebuild": 3.6.1
+            "@electron/universal": 2.0.1
+            "@malept/flatpak-bundler": 0.4.0
+            "@types/fs-extra": 9.0.13
+            async-exit-hook: 2.0.1
+            bluebird-lst: 1.0.9
+            builder-util: 25.1.7
+            builder-util-runtime: 9.2.10
+            chromium-pickle-js: 0.2.0
+            config-file-ts: 0.2.8-rc1
+            debug: 4.3.7
+            dmg-builder: 25.1.8(electron-builder-squirrel-windows@25.1.8(dmg-builder@25.1.8))
+            dotenv: 16.4.6
+            dotenv-expand: 11.0.7
+            ejs: 3.1.10
+            electron-builder-squirrel-windows: 25.1.8(dmg-builder@25.1.8)
+            electron-publish: 25.1.7
+            form-data: 4.0.1
+            fs-extra: 10.1.0
+            hosted-git-info: 4.1.0
+            is-ci: 3.0.1
+            isbinaryfile: 5.0.4
+            js-yaml: 4.1.0
+            json5: 2.2.3
+            lazy-val: 1.0.5
+            minimatch: 10.0.1
+            resedit: 1.7.2
+            sanitize-filename: 1.6.3
+            semver: 7.6.3
+            tar: 6.2.1
+            temp-file: 3.4.0
+        transitivePeerDependencies:
+            - bluebird
+            - supports-color
+
+    aproba@2.0.0: {}
+
+    archiver-utils@2.1.0:
+        dependencies:
+            glob: 7.2.3
+            graceful-fs: 4.2.11
+            lazystream: 1.0.1
+            lodash.defaults: 4.2.0
+            lodash.difference: 4.5.0
+            lodash.flatten: 4.4.0
+            lodash.isplainobject: 4.0.6
+            lodash.union: 4.6.0
+            normalize-path: 3.0.0
+            readable-stream: 2.3.8
+
+    archiver-utils@3.0.4:
+        dependencies:
+            glob: 7.2.3
+            graceful-fs: 4.2.11
+            lazystream: 1.0.1
+            lodash.defaults: 4.2.0
+            lodash.difference: 4.5.0
+            lodash.flatten: 4.4.0
+            lodash.isplainobject: 4.0.6
+            lodash.union: 4.6.0
+            normalize-path: 3.0.0
+            readable-stream: 3.6.2
+
+    archiver@5.3.2:
+        dependencies:
+            archiver-utils: 2.1.0
+            async: 3.2.6
+            buffer-crc32: 0.2.13
+            readable-stream: 3.6.2
+            readdir-glob: 1.1.3
+            tar-stream: 2.2.0
+            zip-stream: 4.1.1
+
+    are-we-there-yet@3.0.1:
+        dependencies:
+            delegates: 1.0.0
+            readable-stream: 3.6.2
+
+    argparse@2.0.1: {}
+
+    arr-diff@4.0.0: {}
+
+    arr-union@3.1.0: {}
+
+    array-buffer-byte-length@1.0.1:
+        dependencies:
+            call-bind: 1.0.7
+            is-array-buffer: 3.0.4
+
+    array-includes@3.1.8:
+        dependencies:
+            call-bind: 1.0.7
+            define-properties: 1.2.1
+            es-abstract: 1.23.5
+            es-object-atoms: 1.0.0
+            get-intrinsic: 1.2.4
+            is-string: 1.1.0
+
+    array-unique@0.3.2: {}
+
+    array.prototype.findlastindex@1.2.5:
+        dependencies:
+            call-bind: 1.0.7
+            define-properties: 1.2.1
+            es-abstract: 1.23.5
+            es-errors: 1.3.0
+            es-object-atoms: 1.0.0
+            es-shim-unscopables: 1.0.2
+
+    array.prototype.flat@1.3.2:
+        dependencies:
+            call-bind: 1.0.7
+            define-properties: 1.2.1
+            es-abstract: 1.23.5
+            es-shim-unscopables: 1.0.2
+
+    array.prototype.flatmap@1.3.2:
+        dependencies:
+            call-bind: 1.0.7
+            define-properties: 1.2.1
+            es-abstract: 1.23.5
+            es-shim-unscopables: 1.0.2
+
+    arraybuffer.prototype.slice@1.0.3:
+        dependencies:
+            array-buffer-byte-length: 1.0.1
+            call-bind: 1.0.7
+            define-properties: 1.2.1
+            es-abstract: 1.23.5
+            es-errors: 1.3.0
+            get-intrinsic: 1.2.4
+            is-array-buffer: 3.0.4
+            is-shared-array-buffer: 1.0.3
+
+    arrpc@https://codeload.github.com/OpenAsar/arrpc/tar.gz/5aadc307cb9bf4479f0a12364a253b07a77ace22(patch_hash=biyukfa6dww2wxujy4eyvkhrti):
+        dependencies:
+            ws: 8.18.0
+        transitivePeerDependencies:
+            - bufferutil
+            - utf-8-validate
+
+    assert-plus@1.0.0:
+        optional: true
 
-  get-value@2.0.6:
-    resolution: {integrity: sha512-Ln0UQDlxH1BapMu3GPtf7CuYNwRZf2gwCuPqbyG6pB8WfmFpzqcy4xtAaAMUhnNqjMKTiCPZG2oMT3YSx8U2NA==}
-    engines: {node: '>=0.10.0'}
+    assign-symbols@1.0.0: {}
 
-  glob-parent@5.1.2:
-    resolution: {integrity: sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==}
-    engines: {node: '>= 6'}
+    astral-regex@2.0.0:
+        optional: true
 
-  glob-parent@6.0.2:
-    resolution: {integrity: sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==}
-    engines: {node: '>=10.13.0'}
+    async-exit-hook@2.0.1: {}
 
-  glob@10.4.5:
-    resolution: {integrity: sha512-7Bv8RF0k6xjo7d4A/PxYLbUCfb6c+Vpd2/mB2yRDlew7Jb5hEXiCD9ibfO7wpk8i4sevK6DFny9h7EYbM3/sHg==}
-    hasBin: true
+    async@3.2.6: {}
 
-  glob@7.2.3:
-    resolution: {integrity: sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==}
-    deprecated: Glob versions prior to v9 are no longer supported
+    asynckit@0.4.0: {}
 
-  glob@8.1.0:
-    resolution: {integrity: sha512-r8hpEjiQEYlF2QU0df3dS+nxxSIreXQS1qRhMJM0Q5NDdR386C7jb7Hwwod8Fgiuex+k0GFjgft18yvxm5XoCQ==}
-    engines: {node: '>=12'}
-    deprecated: Glob versions prior to v9 are no longer supported
+    at-least-node@1.0.0: {}
 
-  global-agent@3.0.0:
-    resolution: {integrity: sha512-PT6XReJ+D07JvGoxQMkT6qji/jVNfX/h364XHZOWeRzy64sSFr+xJ5OX7LI3b4MPQzdL4H8Y8M0xzPpsVMwA8Q==}
-    engines: {node: '>=10.0'}
+    atob@2.1.2: {}
 
-  global-modules@1.0.0:
-    resolution: {integrity: sha512-sKzpEkf11GpOFuw0Zzjzmt4B4UZwjOcG757PPvrfhxcLFbq0wpsgpOqxpxtxFiCG4DtG93M6XRVbF2oGdev7bg==}
-    engines: {node: '>=0.10.0'}
+    available-typed-arrays@1.0.7:
+        dependencies:
+            possible-typed-array-names: 1.0.0
 
-  global-prefix@1.0.2:
-    resolution: {integrity: sha512-5lsx1NUDHtSjfg0eHlmYvZKv8/nVqX4ckFbM+FrGcQ+04KWcWFo9P5MxPZYSzUvyzmdTbI7Eix8Q4IbELDqzKg==}
-    engines: {node: '>=0.10.0'}
+    axios@1.7.8(debug@4.3.7):
+        dependencies:
+            follow-redirects: 1.15.9(debug@4.3.7)
+            form-data: 4.0.1
+            proxy-from-env: 1.1.0
+        transitivePeerDependencies:
+            - debug
+        optional: true
 
-  globals@14.0.0:
-    resolution: {integrity: sha512-oahGvuMGQlPw/ivIYBjVSrWAfWLBeku5tpPE2fOPLi+WHffIWbuh2tCjhyQhTBPMf5E9jDEH4FOmTYgYwbKwtQ==}
-    engines: {node: '>=18'}
+    balanced-match@1.0.2: {}
 
-  globalthis@1.0.4:
-    resolution: {integrity: sha512-DpLKbNU4WylpxJykQujfCcwYWiV/Jhm50Goo0wrVILAv5jOr9d+H+UR3PhSCD2rCCEIg0uc+G+muBTwD54JhDQ==}
-    engines: {node: '>= 0.4'}
+    base64-js@1.5.1: {}
 
-  gopd@1.1.0:
-    resolution: {integrity: sha512-FQoVQnqcdk4hVM4JN1eromaun4iuS34oStkdlLENLdpULsuQcTyXj8w7ayhuUfPwEYZ1ZOooOTT6fdA9Vmx/RA==}
-    engines: {node: '>= 0.4'}
+    base@0.11.2:
+        dependencies:
+            cache-base: 1.0.1
+            class-utils: 0.3.6
+            component-emitter: 1.3.1
+            define-property: 1.0.0
+            isobject: 3.0.1
+            mixin-deep: 1.3.2
+            pascalcase: 0.1.1
 
-  got@11.8.6:
-    resolution: {integrity: sha512-6tfZ91bOr7bOXnK7PRDCGBLa1H4U080YHNaAQ2KsMGlLEzRbk44nsZF2E1IeRc3vtJHPVbKCYgdFbaGO2ljd8g==}
-    engines: {node: '>=10.19.0'}
+    bl@4.1.0:
+        dependencies:
+            buffer: 5.7.1
+            inherits: 2.0.4
+            readable-stream: 3.6.2
 
-  graceful-fs@4.2.11:
-    resolution: {integrity: sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==}
+    bluebird-lst@1.0.9:
+        dependencies:
+            bluebird: 3.7.2
 
-  graphemer@1.4.0:
-    resolution: {integrity: sha512-EtKwoO6kxCL9WO5xipiHTZlSzBm7WLT627TqC/uVRd0HKmq8NXyebnNYxDoBi7wt8eTWrUrKXCOVaFq9x1kgag==}
+    bluebird@3.7.2: {}
 
-  has-bigints@1.0.2:
-    resolution: {integrity: sha512-tSvCKtBr9lkF0Ex0aQiP9N+OpV4zi2r/Nee5VkRDbaqv35RLYMzbwQfFSZZH0kR+Rd6302UJZ2p/bJCEoR3VoQ==}
+    boolean@3.2.0:
+        optional: true
 
-  has-flag@4.0.0:
-    resolution: {integrity: sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==}
-    engines: {node: '>=8'}
+    brace-expansion@1.1.11:
+        dependencies:
+            balanced-match: 1.0.2
+            concat-map: 0.0.1
+
+    brace-expansion@2.0.1:
+        dependencies:
+            balanced-match: 1.0.2
+
+    braces@3.0.3:
+        dependencies:
+            fill-range: 7.1.1
+
+    buffer-crc32@0.2.13: {}
+
+    buffer-from@1.1.2: {}
+
+    buffer@5.7.1:
+        dependencies:
+            base64-js: 1.5.1
+            ieee754: 1.2.1
+
+    builder-util-runtime@9.2.10:
+        dependencies:
+            debug: 4.3.7
+            sax: 1.4.1
+        transitivePeerDependencies:
+            - supports-color
+
+    builder-util@25.1.7:
+        dependencies:
+            7zip-bin: 5.2.0
+            "@types/debug": 4.1.12
+            app-builder-bin: 5.0.0-alpha.10
+            bluebird-lst: 1.0.9
+            builder-util-runtime: 9.2.10
+            chalk: 4.1.2
+            cross-spawn: 7.0.6
+            debug: 4.3.7
+            fs-extra: 10.1.0
+            http-proxy-agent: 7.0.2
+            https-proxy-agent: 7.0.5
+            is-ci: 3.0.1
+            js-yaml: 4.1.0
+            source-map-support: 0.5.21
+            stat-mode: 1.0.0
+            temp-file: 3.4.0
+        transitivePeerDependencies:
+            - supports-color
+
+    cacache@16.1.3:
+        dependencies:
+            "@npmcli/fs": 2.1.2
+            "@npmcli/move-file": 2.0.1
+            chownr: 2.0.0
+            fs-minipass: 2.1.0
+            glob: 8.1.0
+            infer-owner: 1.0.4
+            lru-cache: 7.18.3
+            minipass: 3.3.6
+            minipass-collect: 1.0.2
+            minipass-flush: 1.0.5
+            minipass-pipeline: 1.2.4
+            mkdirp: 1.0.4
+            p-map: 4.0.0
+            promise-inflight: 1.0.1
+            rimraf: 3.0.2
+            ssri: 9.0.1
+            tar: 6.2.1
+            unique-filename: 2.0.1
+        transitivePeerDependencies:
+            - bluebird
+
+    cache-base@1.0.1:
+        dependencies:
+            collection-visit: 1.0.0
+            component-emitter: 1.3.1
+            get-value: 2.0.6
+            has-value: 1.0.0
+            isobject: 3.0.1
+            set-value: 2.0.1
+            to-object-path: 0.3.0
+            union-value: 1.0.1
+            unset-value: 1.0.0
+
+    cacheable-lookup@5.0.4: {}
+
+    cacheable-request@7.0.4:
+        dependencies:
+            clone-response: 1.0.3
+            get-stream: 5.2.0
+            http-cache-semantics: 4.1.1
+            keyv: 4.5.4
+            lowercase-keys: 2.0.0
+            normalize-url: 6.1.0
+            responselike: 2.0.1
+
+    call-bind@1.0.7:
+        dependencies:
+            es-define-property: 1.0.0
+            es-errors: 1.3.0
+            function-bind: 1.1.2
+            get-intrinsic: 1.2.4
+            set-function-length: 1.2.2
+
+    callsites@3.1.0: {}
+
+    chalk@4.1.2:
+        dependencies:
+            ansi-styles: 4.3.0
+            supports-color: 7.2.0
+
+    chownr@2.0.0: {}
+
+    chromium-pickle-js@0.2.0: {}
+
+    ci-info@3.9.0: {}
+
+    class-utils@0.3.6:
+        dependencies:
+            arr-union: 3.1.0
+            define-property: 0.2.5
+            isobject: 3.0.1
+            static-extend: 0.1.2
+
+    clean-stack@2.2.0: {}
+
+    cli-cursor@3.1.0:
+        dependencies:
+            restore-cursor: 3.1.0
+
+    cli-spinners@2.9.2: {}
+
+    cli-truncate@2.1.0:
+        dependencies:
+            slice-ansi: 3.0.0
+            string-width: 4.2.3
+        optional: true
 
-  has-property-descriptors@1.0.2:
-    resolution: {integrity: sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==}
+    cliui@8.0.1:
+        dependencies:
+            string-width: 4.2.3
+            strip-ansi: 6.0.1
+            wrap-ansi: 7.0.0
+
+    clone-response@1.0.3:
+        dependencies:
+            mimic-response: 1.0.1
+
+    clone@1.0.4: {}
+
+    cmake-js@7.3.0:
+        dependencies:
+            axios: 1.7.8(debug@4.3.7)
+            debug: 4.3.7
+            fs-extra: 11.2.0
+            lodash.isplainobject: 4.0.6
+            memory-stream: 1.0.0
+            node-api-headers: 1.4.0
+            npmlog: 6.0.2
+            rc: 1.2.8
+            semver: 7.6.3
+            tar: 6.2.1
+            url-join: 4.0.1
+            which: 2.0.2
+            yargs: 17.7.2
+        transitivePeerDependencies:
+            - supports-color
+        optional: true
 
-  has-proto@1.1.0:
-    resolution: {integrity: sha512-QLdzI9IIO1Jg7f9GT1gXpPpXArAn6cS31R1eEZqz08Gc+uQ8/XiqHWt17Fiw+2p6oTTIq5GXEpQkAlA88YRl/Q==}
-    engines: {node: '>= 0.4'}
+    collection-visit@1.0.0:
+        dependencies:
+            map-visit: 1.0.0
+            object-visit: 1.0.1
 
-  has-symbols@1.1.0:
-    resolution: {integrity: sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==}
-    engines: {node: '>= 0.4'}
+    color-convert@2.0.1:
+        dependencies:
+            color-name: 1.1.4
 
-  has-tostringtag@1.0.2:
-    resolution: {integrity: sha512-NqADB8VjPFLM2V0VvHUewwwsw0ZWBaIdgo+ieHtK3hasLz4qeCRjYcqfB6AQrBggRKppKF8L52/VqdVsO47Dlw==}
-    engines: {node: '>= 0.4'}
+    color-name@1.1.4: {}
 
-  has-unicode@2.0.1:
-    resolution: {integrity: sha512-8Rf9Y83NBReMnx0gFzA8JImQACstCYWUplepDa9xprwwtmgEZUF0h/i5xSA625zB/I37EtrswSST6OXxwaaIJQ==}
+    color-support@1.1.3: {}
 
-  has-value@0.3.1:
-    resolution: {integrity: sha512-gpG936j8/MzaeID5Yif+577c17TxaDmhuyVgSwtnL/q8UUTySg8Mecb+8Cf1otgLoD7DDH75axp86ER7LFsf3Q==}
-    engines: {node: '>=0.10.0'}
+    combined-stream@1.0.8:
+        dependencies:
+            delayed-stream: 1.0.0
 
-  has-value@1.0.0:
-    resolution: {integrity: sha512-IBXk4GTsLYdQ7Rvt+GRBrFSVEkmuOUy4re0Xjd9kJSUQpnTrWR4/y9RpfexN9vkAPMFuQoeWKwqzPozRTlasGw==}
-    engines: {node: '>=0.10.0'}
+    commander@5.1.0: {}
 
-  has-values@0.1.4:
-    resolution: {integrity: sha512-J8S0cEdWuQbqD9//tlZxiMuMNmxB8PlEwvYwuxsTmR1G5RXUePEX/SJn7aD0GMLieuZYSwNH0cQuJGwnYunXRQ==}
-    engines: {node: '>=0.10.0'}
+    compare-version@0.1.2: {}
 
-  has-values@1.0.0:
-    resolution: {integrity: sha512-ODYZC64uqzmtfGMEAX/FvZiRyWLpAC3vYnNunURUnkGVTS+mI0smVsWaPydRBsE3g+ok7h960jChO8mFcWlHaQ==}
-    engines: {node: '>=0.10.0'}
+    component-emitter@1.3.1: {}
 
-  hasown@2.0.2:
-    resolution: {integrity: sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==}
-    engines: {node: '>= 0.4'}
+    compress-commons@4.1.2:
+        dependencies:
+            buffer-crc32: 0.2.13
+            crc32-stream: 4.0.3
+            normalize-path: 3.0.0
+            readable-stream: 3.6.2
 
-  homedir-polyfill@1.0.3:
-    resolution: {integrity: sha512-eSmmWE5bZTK2Nou4g0AI3zZ9rswp7GRKoKXS1BLUkvPviOqs4YTN1djQIqrXy9k5gEtdLPy86JjRwsNM9tnDcA==}
-    engines: {node: '>=0.10.0'}
+    concat-map@0.0.1: {}
 
-  hosted-git-info@4.1.0:
-    resolution: {integrity: sha512-kyCuEOWjJqZuDbRHzL8V93NzQhwIB71oFWSyzVo+KPZI+pnQPPxucdkrOZvkLRnrf5URsQM+IJ09Dw29cRALIA==}
-    engines: {node: '>=10'}
+    config-file-ts@0.2.8-rc1:
+        dependencies:
+            glob: 10.4.5
+            typescript: 5.7.2
 
-  http-cache-semantics@4.1.1:
-    resolution: {integrity: sha512-er295DKPVsV82j5kw1Gjt+ADA/XYHsajl82cGNQG2eyoPkvgUhX+nDIyelzhIWbbsXP39EHcI6l5tYs2FYqYXQ==}
+    console-control-strings@1.1.0: {}
 
-  http-proxy-agent@5.0.0:
-    resolution: {integrity: sha512-n2hY8YdoRE1i7r6M0w9DIw5GgZN0G25P8zLCRQ8rjXtTU3vsNFBI/vWK/UIeE6g5MUUz6avwAPXmL6Fy9D/90w==}
-    engines: {node: '>= 6'}
+    copy-descriptor@0.1.1: {}
 
-  http-proxy-agent@7.0.2:
-    resolution: {integrity: sha512-T1gkAiYYDWYx3V5Bmyu7HcfcvL7mUrTWiM6yOfa3PIphViJ/gFPbvidQ+veqSOHci/PxBcDabeUNCzpOODJZig==}
-    engines: {node: '>= 14'}
+    core-util-is@1.0.2:
+        optional: true
 
-  http2-wrapper@1.0.3:
-    resolution: {integrity: sha512-V+23sDMr12Wnz7iTcDeJr3O6AIxlnvT/bmaAAAP/Xda35C90p9599p0F1eHR/N1KILWSoWVAiOMFjBBXaXSMxg==}
-    engines: {node: '>=10.19.0'}
+    core-util-is@1.0.3: {}
 
-  https-proxy-agent@5.0.1:
-    resolution: {integrity: sha512-dFcAjpTQFgoLMzC2VwU+C/CbS7uRL0lWmxDITmqm7C+7F0Odmj6s9l6alZc6AELXhrnggM2CeWSXHGOdX2YtwA==}
-    engines: {node: '>= 6'}
+    crc-32@1.2.2: {}
 
-  https-proxy-agent@7.0.5:
-    resolution: {integrity: sha512-1e4Wqeblerz+tMKPIq2EMGiiWW1dIjZOksyHWSUm1rmuvw/how9hBHZ38lAGj5ID4Ik6EdkOw7NmWPy6LAwalw==}
-    engines: {node: '>= 14'}
+    crc32-stream@4.0.3:
+        dependencies:
+            crc-32: 1.2.2
+            readable-stream: 3.6.2
 
-  humanize-ms@1.2.1:
-    resolution: {integrity: sha512-Fl70vYtsAFb/C06PTS9dZBo7ihau+Tu/DNCk/OyHhea07S+aeMWpFFkUaXRa8fI+ScZbEI8dfSxwY7gxZ9SAVQ==}
+    crc@3.8.0:
+        dependencies:
+            buffer: 5.7.1
+        optional: true
 
-  iconv-corefoundation@1.1.7:
-    resolution: {integrity: sha512-T10qvkw0zz4wnm560lOEg0PovVqUXuOFhhHAkixw8/sycy7TJt7v/RrkEKEQnAw2viPSJu6iAkErxnzR0g8PpQ==}
-    engines: {node: ^8.11.2 || >=10}
-    os: [darwin]
+    cross-spawn@7.0.6:
+        dependencies:
+            path-key: 3.1.1
+            shebang-command: 2.0.0
+            which: 2.0.2
 
-  iconv-lite@0.6.3:
-    resolution: {integrity: sha512-4fCk79wshMdzMp2rH06qWrJE4iolqLhCUH+OiuIgU++RB0+94NlDL81atO7GX55uUKueo0txHNtvEyI6D7WdMw==}
-    engines: {node: '>=0.10.0'}
+    csstype@3.1.3: {}
 
-  ieee754@1.2.1:
-    resolution: {integrity: sha512-dcyqhDvX1C46lXZcVqCpK+FtMRQVdIMN6/Df5js2zouUsqG7I6sFxitIC+7KYK29KdXOLHdu9zL4sFnoVQnqaA==}
+    data-view-buffer@1.0.1:
+        dependencies:
+            call-bind: 1.0.7
+            es-errors: 1.3.0
+            is-data-view: 1.0.1
 
-  ignore@5.3.2:
-    resolution: {integrity: sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==}
-    engines: {node: '>= 4'}
+    data-view-byte-length@1.0.1:
+        dependencies:
+            call-bind: 1.0.7
+            es-errors: 1.3.0
+            is-data-view: 1.0.1
 
-  import-fresh@3.3.0:
-    resolution: {integrity: sha512-veYYhQa+D1QBKznvhUHxb8faxlrwUnxseDAbAp457E0wLNio2bOSKnjYDhMj+YiAq61xrMGhQk9iXVk5FzgQMw==}
-    engines: {node: '>=6'}
+    data-view-byte-offset@1.0.0:
+        dependencies:
+            call-bind: 1.0.7
+            es-errors: 1.3.0
+            is-data-view: 1.0.1
 
-  imurmurhash@0.1.4:
-    resolution: {integrity: sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==}
-    engines: {node: '>=0.8.19'}
+    debug@2.6.9:
+        dependencies:
+            ms: 2.0.0
 
-  indent-string@4.0.0:
-    resolution: {integrity: sha512-EdDDZu4A2OyIK7Lr/2zG+w5jmbuk1DVBnEwREQvBzspBJkCEbRa8GxU1lghYcaGJCnRWibjDXlq779X1/y5xwg==}
-    engines: {node: '>=8'}
+    debug@3.2.7:
+        dependencies:
+            ms: 2.1.3
 
-  infer-owner@1.0.4:
-    resolution: {integrity: sha512-IClj+Xz94+d7irH5qRyfJonOdfTzuDaifE6ZPWfx0N0+/ATZCbuTPq2prFl526urkQd90WyUKIh1DfBQ2hMz9A==}
+    debug@4.3.7:
+        dependencies:
+            ms: 2.1.3
 
-  inflight@1.0.6:
-    resolution: {integrity: sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==}
-    deprecated: This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.
+    decode-uri-component@0.2.2: {}
 
-  inherits@2.0.4:
-    resolution: {integrity: sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==}
+    decompress-response@6.0.0:
+        dependencies:
+            mimic-response: 3.1.0
 
-  ini@1.3.8:
-    resolution: {integrity: sha512-JV/yugV2uzW5iMRSiZAyDtQd+nxtUnjeLt0acNdw98kKLrvuRVyB80tsREOE7yvGVgalhZ6RNXCmEHkUKBKxew==}
+    deep-extend@0.6.0:
+        optional: true
 
-  internal-slot@1.0.7:
-    resolution: {integrity: sha512-NGnrKwXzSms2qUUih/ILZ5JBqNTSa1+ZmP6flaIp6KmSElgE9qdndzS3cqjrDovwFdmwsGsLdeFgB6suw+1e9g==}
-    engines: {node: '>= 0.4'}
+    deep-is@0.1.4: {}
 
-  ip-address@9.0.5:
-    resolution: {integrity: sha512-zHtQzGojZXTwZTHQqra+ETKd4Sn3vgi7uBmlPoXVWZqYvuKmtI0l/VZTjqGmJY9x88GGOaZ9+G9ES8hC4T4X8g==}
-    engines: {node: '>= 12'}
+    defaults@1.0.4:
+        dependencies:
+            clone: 1.0.4
 
-  is-accessor-descriptor@1.0.1:
-    resolution: {integrity: sha512-YBUanLI8Yoihw923YeFUS5fs0fF2f5TSFTNiYAAzhhDscDa3lEqYuz1pDOEP5KvX94I9ey3vsqjJcLVFVU+3QA==}
-    engines: {node: '>= 0.10'}
+    defer-to-connect@2.0.1: {}
 
-  is-array-buffer@3.0.4:
-    resolution: {integrity: sha512-wcjaerHw0ydZwfhiKbXJWLDY8A7yV7KhjQOpb83hGgGfId/aQa4TOvwyzn2PuswW2gPCYEL/nEAiSVpdOj1lXw==}
-    engines: {node: '>= 0.4'}
+    define-data-property@1.1.4:
+        dependencies:
+            es-define-property: 1.0.0
+            es-errors: 1.3.0
+            gopd: 1.1.0
 
-  is-async-function@2.0.0:
-    resolution: {integrity: sha512-Y1JXKrfykRJGdlDwdKlLpLyMIiWqWvuSd17TvZk68PLAOGOoF4Xyav1z0Xhoi+gCYjZVeC5SI+hYFOfvXmGRCA==}
-    engines: {node: '>= 0.4'}
+    define-properties@1.2.1:
+        dependencies:
+            define-data-property: 1.1.4
+            has-property-descriptors: 1.0.2
+            object-keys: 1.1.1
 
-  is-bigint@1.1.0:
-    resolution: {integrity: sha512-n4ZT37wG78iz03xPRKJrHTdZbe3IicyucEtdRsV5yglwc3GyUfbAfpSeD0FJ41NbUNSt5wbhqfp1fS+BgnvDFQ==}
-    engines: {node: '>= 0.4'}
+    define-property@0.2.5:
+        dependencies:
+            is-descriptor: 0.1.7
 
-  is-boolean-object@1.2.0:
-    resolution: {integrity: sha512-kR5g0+dXf/+kXnqI+lu0URKYPKgICtHGGNCDSB10AaUFj3o/HkB3u7WfpRBJGFopxxY0oH3ux7ZsDjLtK7xqvw==}
-    engines: {node: '>= 0.4'}
+    define-property@1.0.0:
+        dependencies:
+            is-descriptor: 1.0.3
 
-  is-buffer@1.1.6:
-    resolution: {integrity: sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w==}
+    define-property@2.0.2:
+        dependencies:
+            is-descriptor: 1.0.3
+            isobject: 3.0.1
 
-  is-callable@1.2.7:
-    resolution: {integrity: sha512-1BC0BVFhS/p0qtw6enp8e+8OD0UrK0oFLztSjNzhcKA3WDuJxxAPXzPuPtKkjEY9UUoEWlX/8fgKeu2S8i9JTA==}
-    engines: {node: '>= 0.4'}
+    delayed-stream@1.0.0: {}
 
-  is-ci@3.0.1:
-    resolution: {integrity: sha512-ZYvCgrefwqoQ6yTyYUbQu64HsITZ3NfKX1lzaEYdkTDcfKzzCI/wthRRYKkdjHKFVgNiXKAKm65Zo1pk2as/QQ==}
-    hasBin: true
+    delegates@1.0.0: {}
 
-  is-core-module@2.15.1:
-    resolution: {integrity: sha512-z0vtXSwucUJtANQWldhbtbt7BnL0vxiFjIdDLAatwhDYty2bad6s+rijD6Ri4YuYJubLzIJLUidCh09e1djEVQ==}
-    engines: {node: '>= 0.4'}
+    detect-libc@2.0.3: {}
 
-  is-data-descriptor@1.0.1:
-    resolution: {integrity: sha512-bc4NlCDiCr28U4aEsQ3Qs2491gVq4V8G7MQyws968ImqjKuYtTJXrl7Vq7jsN7Ly/C3xj5KWFrY7sHNeDkAzXw==}
-    engines: {node: '>= 0.4'}
+    detect-node@2.1.0:
+        optional: true
 
-  is-data-view@1.0.1:
-    resolution: {integrity: sha512-AHkaJrsUVW6wq6JS8y3JnM/GJF/9cf+k20+iDzlSaJrinEo5+7vRiteOSwBhHRiAyQATN1AmY4hwzxJKPmYf+w==}
-    engines: {node: '>= 0.4'}
+    dir-compare@4.2.0:
+        dependencies:
+            minimatch: 3.1.2
+            p-limit: 3.1.0
+
+    discord-types@1.3.26:
+        dependencies:
+            "@types/react": 17.0.2
+            moment: 2.30.1
+
+    dmg-builder@25.1.8(electron-builder-squirrel-windows@25.1.8(dmg-builder@25.1.8)):
+        dependencies:
+            app-builder-lib: 25.1.8(dmg-builder@25.1.8(electron-builder-squirrel-windows@25.1.8(dmg-builder@25.1.8)))(electron-builder-squirrel-windows@25.1.8(dmg-builder@25.1.8))
+            builder-util: 25.1.7
+            builder-util-runtime: 9.2.10
+            fs-extra: 10.1.0
+            iconv-lite: 0.6.3
+            js-yaml: 4.1.0
+        optionalDependencies:
+            dmg-license: 1.0.11
+        transitivePeerDependencies:
+            - bluebird
+            - electron-builder-squirrel-windows
+            - supports-color
+
+    dmg-license@1.0.11:
+        dependencies:
+            "@types/plist": 3.0.5
+            "@types/verror": 1.10.10
+            ajv: 6.12.6
+            crc: 3.8.0
+            iconv-corefoundation: 1.1.7
+            plist: 3.1.0
+            smart-buffer: 4.2.0
+            verror: 1.10.1
+        optional: true
 
-  is-date-object@1.0.5:
-    resolution: {integrity: sha512-9YQaSxsAiSwcvS33MBk3wTCVnWK+HhF8VZR2jRxehM16QcVOdHqPn4VPHmRK4lSr38n9JriurInLcP90xsYNfQ==}
-    engines: {node: '>= 0.4'}
+    doctrine@2.1.0:
+        dependencies:
+            esutils: 2.0.3
+
+    dotenv-expand@11.0.7:
+        dependencies:
+            dotenv: 16.4.6
+
+    dotenv@16.4.6: {}
+
+    eastasianwidth@0.2.0: {}
+
+    ejs@3.1.10:
+        dependencies:
+            jake: 10.9.2
+
+    electron-builder-squirrel-windows@25.1.8(dmg-builder@25.1.8):
+        dependencies:
+            app-builder-lib: 25.1.8(dmg-builder@25.1.8(electron-builder-squirrel-windows@25.1.8(dmg-builder@25.1.8)))(electron-builder-squirrel-windows@25.1.8(dmg-builder@25.1.8))
+            archiver: 5.3.2
+            builder-util: 25.1.7
+            fs-extra: 10.1.0
+        transitivePeerDependencies:
+            - bluebird
+            - dmg-builder
+            - supports-color
+
+    electron-builder@25.1.8(electron-builder-squirrel-windows@25.1.8(dmg-builder@25.1.8)):
+        dependencies:
+            app-builder-lib: 25.1.8(dmg-builder@25.1.8(electron-builder-squirrel-windows@25.1.8(dmg-builder@25.1.8)))(electron-builder-squirrel-windows@25.1.8(dmg-builder@25.1.8))
+            builder-util: 25.1.7
+            builder-util-runtime: 9.2.10
+            chalk: 4.1.2
+            dmg-builder: 25.1.8(electron-builder-squirrel-windows@25.1.8(dmg-builder@25.1.8))
+            fs-extra: 10.1.0
+            is-ci: 3.0.1
+            lazy-val: 1.0.5
+            simple-update-notifier: 2.0.0
+            yargs: 17.7.2
+        transitivePeerDependencies:
+            - bluebird
+            - electron-builder-squirrel-windows
+            - supports-color
+
+    electron-publish@25.1.7:
+        dependencies:
+            "@types/fs-extra": 9.0.13
+            builder-util: 25.1.7
+            builder-util-runtime: 9.2.10
+            chalk: 4.1.2
+            fs-extra: 10.1.0
+            lazy-val: 1.0.5
+            mime: 2.6.0
+        transitivePeerDependencies:
+            - supports-color
+
+    electron-updater@6.3.9:
+        dependencies:
+            builder-util-runtime: 9.2.10
+            fs-extra: 10.1.0
+            js-yaml: 4.1.0
+            lazy-val: 1.0.5
+            lodash.escaperegexp: 4.1.2
+            lodash.isequal: 4.5.0
+            semver: 7.6.3
+            tiny-typed-emitter: 2.1.0
+        transitivePeerDependencies:
+            - supports-color
+
+    electron@33.2.1:
+        dependencies:
+            "@electron/get": 2.0.3
+            "@types/node": 20.17.9
+            extract-zip: 2.0.1
+        transitivePeerDependencies:
+            - supports-color
+
+    emoji-regex@8.0.0: {}
+
+    emoji-regex@9.2.2: {}
+
+    encoding@0.1.13:
+        dependencies:
+            iconv-lite: 0.6.3
+        optional: true
 
-  is-descriptor@0.1.7:
-    resolution: {integrity: sha512-C3grZTvObeN1xud4cRWl366OMXZTj0+HGyk4hvfpx4ZHt1Pb60ANSXqCK7pdOTeUQpRzECBSTphqvD7U+l22Eg==}
-    engines: {node: '>= 0.4'}
+    end-of-stream@1.4.4:
+        dependencies:
+            once: 1.4.0
+
+    env-paths@2.2.1: {}
+
+    err-code@2.0.3: {}
+
+    es-abstract@1.23.5:
+        dependencies:
+            array-buffer-byte-length: 1.0.1
+            arraybuffer.prototype.slice: 1.0.3
+            available-typed-arrays: 1.0.7
+            call-bind: 1.0.7
+            data-view-buffer: 1.0.1
+            data-view-byte-length: 1.0.1
+            data-view-byte-offset: 1.0.0
+            es-define-property: 1.0.0
+            es-errors: 1.3.0
+            es-object-atoms: 1.0.0
+            es-set-tostringtag: 2.0.3
+            es-to-primitive: 1.3.0
+            function.prototype.name: 1.1.6
+            get-intrinsic: 1.2.4
+            get-symbol-description: 1.0.2
+            globalthis: 1.0.4
+            gopd: 1.1.0
+            has-property-descriptors: 1.0.2
+            has-proto: 1.1.0
+            has-symbols: 1.1.0
+            hasown: 2.0.2
+            internal-slot: 1.0.7
+            is-array-buffer: 3.0.4
+            is-callable: 1.2.7
+            is-data-view: 1.0.1
+            is-negative-zero: 2.0.3
+            is-regex: 1.2.0
+            is-shared-array-buffer: 1.0.3
+            is-string: 1.1.0
+            is-typed-array: 1.1.13
+            is-weakref: 1.0.2
+            object-inspect: 1.13.3
+            object-keys: 1.1.1
+            object.assign: 4.1.5
+            regexp.prototype.flags: 1.5.3
+            safe-array-concat: 1.1.2
+            safe-regex-test: 1.0.3
+            string.prototype.trim: 1.2.9
+            string.prototype.trimend: 1.0.8
+            string.prototype.trimstart: 1.0.8
+            typed-array-buffer: 1.0.2
+            typed-array-byte-length: 1.0.1
+            typed-array-byte-offset: 1.0.3
+            typed-array-length: 1.0.7
+            unbox-primitive: 1.0.2
+            which-typed-array: 1.1.16
+
+    es-define-property@1.0.0:
+        dependencies:
+            get-intrinsic: 1.2.4
+
+    es-errors@1.3.0: {}
+
+    es-object-atoms@1.0.0:
+        dependencies:
+            es-errors: 1.3.0
+
+    es-set-tostringtag@2.0.3:
+        dependencies:
+            get-intrinsic: 1.2.4
+            has-tostringtag: 1.0.2
+            hasown: 2.0.2
+
+    es-shim-unscopables@1.0.2:
+        dependencies:
+            hasown: 2.0.2
+
+    es-to-primitive@1.3.0:
+        dependencies:
+            is-callable: 1.2.7
+            is-date-object: 1.0.5
+            is-symbol: 1.1.0
+
+    es6-error@4.1.1:
+        optional: true
 
-  is-descriptor@1.0.3:
-    resolution: {integrity: sha512-JCNNGbwWZEVaSPtS45mdtrneRWJFp07LLmykxeFV5F6oBvNF8vHSfJuJgoT472pSfk+Mf8VnlrspaFBHWM8JAw==}
-    engines: {node: '>= 0.4'}
+    esbuild@0.23.1:
+        optionalDependencies:
+            "@esbuild/aix-ppc64": 0.23.1
+            "@esbuild/android-arm": 0.23.1
+            "@esbuild/android-arm64": 0.23.1
+            "@esbuild/android-x64": 0.23.1
+            "@esbuild/darwin-arm64": 0.23.1
+            "@esbuild/darwin-x64": 0.23.1
+            "@esbuild/freebsd-arm64": 0.23.1
+            "@esbuild/freebsd-x64": 0.23.1
+            "@esbuild/linux-arm": 0.23.1
+            "@esbuild/linux-arm64": 0.23.1
+            "@esbuild/linux-ia32": 0.23.1
+            "@esbuild/linux-loong64": 0.23.1
+            "@esbuild/linux-mips64el": 0.23.1
+            "@esbuild/linux-ppc64": 0.23.1
+            "@esbuild/linux-riscv64": 0.23.1
+            "@esbuild/linux-s390x": 0.23.1
+            "@esbuild/linux-x64": 0.23.1
+            "@esbuild/netbsd-x64": 0.23.1
+            "@esbuild/openbsd-arm64": 0.23.1
+            "@esbuild/openbsd-x64": 0.23.1
+            "@esbuild/sunos-x64": 0.23.1
+            "@esbuild/win32-arm64": 0.23.1
+            "@esbuild/win32-ia32": 0.23.1
+            "@esbuild/win32-x64": 0.23.1
+
+    esbuild@0.24.0:
+        optionalDependencies:
+            "@esbuild/aix-ppc64": 0.24.0
+            "@esbuild/android-arm": 0.24.0
+            "@esbuild/android-arm64": 0.24.0
+            "@esbuild/android-x64": 0.24.0
+            "@esbuild/darwin-arm64": 0.24.0
+            "@esbuild/darwin-x64": 0.24.0
+            "@esbuild/freebsd-arm64": 0.24.0
+            "@esbuild/freebsd-x64": 0.24.0
+            "@esbuild/linux-arm": 0.24.0
+            "@esbuild/linux-arm64": 0.24.0
+            "@esbuild/linux-ia32": 0.24.0
+            "@esbuild/linux-loong64": 0.24.0
+            "@esbuild/linux-mips64el": 0.24.0
+            "@esbuild/linux-ppc64": 0.24.0
+            "@esbuild/linux-riscv64": 0.24.0
+            "@esbuild/linux-s390x": 0.24.0
+            "@esbuild/linux-x64": 0.24.0
+            "@esbuild/netbsd-x64": 0.24.0
+            "@esbuild/openbsd-arm64": 0.24.0
+            "@esbuild/openbsd-x64": 0.24.0
+            "@esbuild/sunos-x64": 0.24.0
+            "@esbuild/win32-arm64": 0.24.0
+            "@esbuild/win32-ia32": 0.24.0
+            "@esbuild/win32-x64": 0.24.0
+
+    escalade@3.2.0: {}
+
+    escape-string-regexp@4.0.0: {}
+
+    eslint-config-prettier@9.1.0(eslint@9.16.0):
+        dependencies:
+            eslint: 9.16.0
+        optional: true
 
-  is-extendable@0.1.1:
-    resolution: {integrity: sha512-5BMULNob1vgFX6EjQw5izWDxrecWK9AM72rugNr0TFldMOi0fj6Jk+zeKIt0xGj4cEfQIJth4w3OKWOJ4f+AFw==}
-    engines: {node: '>=0.10.0'}
+    eslint-import-resolver-alias@1.1.2(eslint-plugin-import@2.31.0(@typescript-eslint/parser@8.17.0(eslint@9.16.0)(typescript@5.7.2))(eslint@9.16.0)):
+        dependencies:
+            eslint-plugin-import: 2.31.0(@typescript-eslint/parser@8.17.0(eslint@9.16.0)(typescript@5.7.2))(eslint@9.16.0)
+
+    eslint-import-resolver-node@0.3.9:
+        dependencies:
+            debug: 3.2.7
+            is-core-module: 2.15.1
+            resolve: 1.22.8
+        transitivePeerDependencies:
+            - supports-color
+
+    eslint-module-utils@2.12.0(@typescript-eslint/parser@8.17.0(eslint@9.16.0)(typescript@5.7.2))(eslint-import-resolver-node@0.3.9)(eslint@9.16.0):
+        dependencies:
+            debug: 3.2.7
+        optionalDependencies:
+            "@typescript-eslint/parser": 8.17.0(eslint@9.16.0)(typescript@5.7.2)
+            eslint: 9.16.0
+            eslint-import-resolver-node: 0.3.9
+        transitivePeerDependencies:
+            - supports-color
+
+    eslint-plugin-import@2.31.0(@typescript-eslint/parser@8.17.0(eslint@9.16.0)(typescript@5.7.2))(eslint@9.16.0):
+        dependencies:
+            "@rtsao/scc": 1.1.0
+            array-includes: 3.1.8
+            array.prototype.findlastindex: 1.2.5
+            array.prototype.flat: 1.3.2
+            array.prototype.flatmap: 1.3.2
+            debug: 3.2.7
+            doctrine: 2.1.0
+            eslint: 9.16.0
+            eslint-import-resolver-node: 0.3.9
+            eslint-module-utils: 2.12.0(@typescript-eslint/parser@8.17.0(eslint@9.16.0)(typescript@5.7.2))(eslint-import-resolver-node@0.3.9)(eslint@9.16.0)
+            hasown: 2.0.2
+            is-core-module: 2.15.1
+            is-glob: 4.0.3
+            minimatch: 3.1.2
+            object.fromentries: 2.0.8
+            object.groupby: 1.0.3
+            object.values: 1.2.0
+            semver: 6.3.1
+            string.prototype.trimend: 1.0.8
+            tsconfig-paths: 3.15.0
+        optionalDependencies:
+            "@typescript-eslint/parser": 8.17.0(eslint@9.16.0)(typescript@5.7.2)
+        transitivePeerDependencies:
+            - eslint-import-resolver-typescript
+            - eslint-import-resolver-webpack
+            - supports-color
+
+    eslint-plugin-path-alias@2.1.0(eslint@9.16.0):
+        dependencies:
+            eslint: 9.16.0
+            find-pkg: 2.0.0
+            get-tsconfig: 4.8.1
+            nanomatch: 1.2.13
+        transitivePeerDependencies:
+            - supports-color
+
+    eslint-plugin-prettier@5.2.1(eslint-config-prettier@9.1.0(eslint@9.16.0))(eslint@9.16.0)(prettier@3.4.1):
+        dependencies:
+            eslint: 9.16.0
+            prettier: 3.4.1
+            prettier-linter-helpers: 1.0.0
+            synckit: 0.9.2
+        optionalDependencies:
+            eslint-config-prettier: 9.1.0(eslint@9.16.0)
+
+    eslint-plugin-simple-header@1.2.1(eslint@9.16.0):
+        dependencies:
+            eslint: 9.16.0
+
+    eslint-plugin-simple-import-sort@12.1.1(eslint@9.16.0):
+        dependencies:
+            eslint: 9.16.0
+
+    eslint-plugin-unused-imports@4.1.4(@typescript-eslint/eslint-plugin@8.17.0(@typescript-eslint/parser@8.17.0(eslint@9.16.0)(typescript@5.7.2))(eslint@9.16.0)(typescript@5.7.2))(eslint@9.16.0):
+        dependencies:
+            eslint: 9.16.0
+        optionalDependencies:
+            "@typescript-eslint/eslint-plugin": 8.17.0(@typescript-eslint/parser@8.17.0(eslint@9.16.0)(typescript@5.7.2))(eslint@9.16.0)(typescript@5.7.2)
+
+    eslint-scope@8.2.0:
+        dependencies:
+            esrecurse: 4.3.0
+            estraverse: 5.3.0
+
+    eslint-visitor-keys@3.4.3: {}
+
+    eslint-visitor-keys@4.2.0: {}
+
+    eslint@9.16.0:
+        dependencies:
+            "@eslint-community/eslint-utils": 4.4.1(eslint@9.16.0)
+            "@eslint-community/regexpp": 4.12.1
+            "@eslint/config-array": 0.19.0
+            "@eslint/core": 0.9.0
+            "@eslint/eslintrc": 3.2.0
+            "@eslint/js": 9.16.0
+            "@eslint/plugin-kit": 0.2.3
+            "@humanfs/node": 0.16.6
+            "@humanwhocodes/module-importer": 1.0.1
+            "@humanwhocodes/retry": 0.4.1
+            "@types/estree": 1.0.6
+            "@types/json-schema": 7.0.15
+            ajv: 6.12.6
+            chalk: 4.1.2
+            cross-spawn: 7.0.6
+            debug: 4.3.7
+            escape-string-regexp: 4.0.0
+            eslint-scope: 8.2.0
+            eslint-visitor-keys: 4.2.0
+            espree: 10.3.0
+            esquery: 1.6.0
+            esutils: 2.0.3
+            fast-deep-equal: 3.1.3
+            file-entry-cache: 8.0.0
+            find-up: 5.0.0
+            glob-parent: 6.0.2
+            ignore: 5.3.2
+            imurmurhash: 0.1.4
+            is-glob: 4.0.3
+            json-stable-stringify-without-jsonify: 1.0.1
+            lodash.merge: 4.6.2
+            minimatch: 3.1.2
+            natural-compare: 1.4.0
+            optionator: 0.9.4
+        transitivePeerDependencies:
+            - supports-color
+
+    espree@10.3.0:
+        dependencies:
+            acorn: 8.14.0
+            acorn-jsx: 5.3.2(acorn@8.14.0)
+            eslint-visitor-keys: 4.2.0
+
+    esquery@1.6.0:
+        dependencies:
+            estraverse: 5.3.0
+
+    esrecurse@4.3.0:
+        dependencies:
+            estraverse: 5.3.0
+
+    estraverse@5.3.0: {}
+
+    esutils@2.0.3: {}
+
+    expand-tilde@2.0.2:
+        dependencies:
+            homedir-polyfill: 1.0.3
+
+    exponential-backoff@3.1.1: {}
+
+    extend-shallow@2.0.1:
+        dependencies:
+            is-extendable: 0.1.1
+
+    extend-shallow@3.0.2:
+        dependencies:
+            assign-symbols: 1.0.0
+            is-extendable: 1.0.1
+
+    extract-zip@2.0.1:
+        dependencies:
+            debug: 4.3.7
+            get-stream: 5.2.0
+            yauzl: 2.10.0
+        optionalDependencies:
+            "@types/yauzl": 2.10.3
+        transitivePeerDependencies:
+            - supports-color
+
+    extsprintf@1.4.1:
+        optional: true
 
-  is-extendable@1.0.1:
-    resolution: {integrity: sha512-arnXMxT1hhoKo9k1LZdmlNyJdDDfy2v0fXjFlmok4+i8ul/6WlbVge9bhM74OpNPQPMGUToDtz+KXa1PneJxOA==}
-    engines: {node: '>=0.10.0'}
+    fast-deep-equal@3.1.3: {}
 
-  is-extglob@2.1.1:
-    resolution: {integrity: sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==}
-    engines: {node: '>=0.10.0'}
+    fast-diff@1.3.0: {}
 
-  is-finalizationregistry@1.1.0:
-    resolution: {integrity: sha512-qfMdqbAQEwBw78ZyReKnlA8ezmPdb9BemzIIip/JkjaZUhitfXDkkr+3QTboW0JrSXT1QWyYShpvnNHGZ4c4yA==}
-    engines: {node: '>= 0.4'}
+    fast-glob@3.3.2:
+        dependencies:
+            "@nodelib/fs.stat": 2.0.5
+            "@nodelib/fs.walk": 1.2.8
+            glob-parent: 5.1.2
+            merge2: 1.4.1
+            micromatch: 4.0.8
 
-  is-fullwidth-code-point@3.0.0:
-    resolution: {integrity: sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==}
-    engines: {node: '>=8'}
+    fast-json-stable-stringify@2.1.0: {}
 
-  is-generator-function@1.0.10:
-    resolution: {integrity: sha512-jsEjy9l3yiXEQ+PsXdmBwEPcOxaXWLspKdplFUVI9vq1iZgIekeC0L167qeu86czQaxed3q/Uzuw0swL0irL8A==}
-    engines: {node: '>= 0.4'}
+    fast-levenshtein@2.0.6: {}
 
-  is-glob@4.0.3:
-    resolution: {integrity: sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==}
-    engines: {node: '>=0.10.0'}
+    fastq@1.17.1:
+        dependencies:
+            reusify: 1.0.4
 
-  is-interactive@1.0.0:
-    resolution: {integrity: sha512-2HvIEKRoqS62guEC+qBjpvRubdX910WCMuJTZ+I9yvqKU2/12eSL549HMwtabb4oupdj2sMP50k+XJfB/8JE6w==}
-    engines: {node: '>=8'}
+    fd-slicer@1.1.0:
+        dependencies:
+            pend: 1.2.0
 
-  is-lambda@1.0.1:
-    resolution: {integrity: sha512-z7CMFGNrENq5iFB9Bqo64Xk6Y9sg+epq1myIcdHaGnbMTYOxvzsEtdYqQUylB7LxfkvgrrjP32T6Ywciio9UIQ==}
+    file-entry-cache@8.0.0:
+        dependencies:
+            flat-cache: 4.0.1
 
-  is-map@2.0.3:
-    resolution: {integrity: sha512-1Qed0/Hr2m+YqxnM09CjA2d/i6YZNfF6R2oRAOj36eUdS6qIV/huPJNSEpKbupewFs+ZsJlxsjjPbc0/afW6Lw==}
-    engines: {node: '>= 0.4'}
+    filelist@1.0.4:
+        dependencies:
+            minimatch: 5.1.6
 
-  is-negative-zero@2.0.3:
-    resolution: {integrity: sha512-5KoIu2Ngpyek75jXodFvnafB6DJgr3u8uuK0LEZJjrU19DrMD3EVERaR8sjz8CCGgpZvxPl9SuE1GMVPFHx1mw==}
-    engines: {node: '>= 0.4'}
+    fill-range@7.1.1:
+        dependencies:
+            to-regex-range: 5.0.1
 
-  is-number-object@1.1.0:
-    resolution: {integrity: sha512-KVSZV0Dunv9DTPkhXwcZ3Q+tUc9TsaE1ZwX5J2WMvsSGS6Md8TFPun5uwh0yRdrNerI6vf/tbJxqSx4c1ZI1Lw==}
-    engines: {node: '>= 0.4'}
+    find-file-up@2.0.1:
+        dependencies:
+            resolve-dir: 1.0.1
 
-  is-number@3.0.0:
-    resolution: {integrity: sha512-4cboCqIpliH+mAvFNegjZQ4kgKc3ZUhQVr3HvWbSh5q3WH2v82ct+T2Y1hdU5Gdtorx/cLifQjqCbL7bpznLTg==}
-    engines: {node: '>=0.10.0'}
+    find-pkg@2.0.0:
+        dependencies:
+            find-file-up: 2.0.1
 
-  is-number@7.0.0:
-    resolution: {integrity: sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==}
-    engines: {node: '>=0.12.0'}
+    find-up@5.0.0:
+        dependencies:
+            locate-path: 6.0.0
+            path-exists: 4.0.0
 
-  is-plain-object@2.0.4:
-    resolution: {integrity: sha512-h5PpgXkWitc38BBMYawTYMWJHFZJVnBquFE57xFpjB8pJFiF6gZ+bU+WyI/yqXiFR5mdLsgYNaPe8uao6Uv9Og==}
-    engines: {node: '>=0.10.0'}
+    flat-cache@4.0.1:
+        dependencies:
+            flatted: 3.3.2
+            keyv: 4.5.4
 
-  is-regex@1.2.0:
-    resolution: {integrity: sha512-B6ohK4ZmoftlUe+uvenXSbPJFo6U37BH7oO1B3nQH8f/7h27N56s85MhUtbFJAziz5dcmuR3i8ovUl35zp8pFA==}
-    engines: {node: '>= 0.4'}
+    flatted@3.3.2: {}
 
-  is-set@2.0.3:
-    resolution: {integrity: sha512-iPAjerrse27/ygGLxw+EBR9agv9Y6uLeYVJMu+QNCoouJ1/1ri0mGrcWpfCqFZuzzx3WjtwxG098X+n4OuRkPg==}
-    engines: {node: '>= 0.4'}
+    follow-redirects@1.15.9(debug@4.3.7):
+        optionalDependencies:
+            debug: 4.3.7
+        optional: true
 
-  is-shared-array-buffer@1.0.3:
-    resolution: {integrity: sha512-nA2hv5XIhLR3uVzDDfCIknerhx8XUKnstuOERPNNIinXG7v9u+ohXF67vxm4TPTEPU6lm61ZkwP3c9PCB97rhg==}
-    engines: {node: '>= 0.4'}
+    for-each@0.3.3:
+        dependencies:
+            is-callable: 1.2.7
+
+    for-in@1.0.2: {}
+
+    foreground-child@3.3.0:
+        dependencies:
+            cross-spawn: 7.0.6
+            signal-exit: 4.1.0
+
+    form-data@4.0.1:
+        dependencies:
+            asynckit: 0.4.0
+            combined-stream: 1.0.8
+            mime-types: 2.1.35
+
+    fragment-cache@0.2.1:
+        dependencies:
+            map-cache: 0.2.2
+
+    fs-constants@1.0.0: {}
+
+    fs-extra@10.1.0:
+        dependencies:
+            graceful-fs: 4.2.11
+            jsonfile: 6.1.0
+            universalify: 2.0.1
+
+    fs-extra@11.2.0:
+        dependencies:
+            graceful-fs: 4.2.11
+            jsonfile: 6.1.0
+            universalify: 2.0.1
+
+    fs-extra@8.1.0:
+        dependencies:
+            graceful-fs: 4.2.11
+            jsonfile: 4.0.0
+            universalify: 0.1.2
+
+    fs-extra@9.1.0:
+        dependencies:
+            at-least-node: 1.0.0
+            graceful-fs: 4.2.11
+            jsonfile: 6.1.0
+            universalify: 2.0.1
+
+    fs-minipass@2.1.0:
+        dependencies:
+            minipass: 3.3.6
+
+    fs.realpath@1.0.0: {}
+
+    fsevents@2.3.3:
+        optional: true
 
-  is-string@1.1.0:
-    resolution: {integrity: sha512-PlfzajuF9vSo5wErv3MJAKD/nqf9ngAs1NFQYm16nUYFO2IzxJ2hcm+IOCg+EEopdykNNUhVq5cz35cAUxU8+g==}
-    engines: {node: '>= 0.4'}
+    function-bind@1.1.2: {}
+
+    function.prototype.name@1.1.6:
+        dependencies:
+            call-bind: 1.0.7
+            define-properties: 1.2.1
+            es-abstract: 1.23.5
+            functions-have-names: 1.2.3
+
+    functions-have-names@1.2.3: {}
+
+    gauge@4.0.4:
+        dependencies:
+            aproba: 2.0.0
+            color-support: 1.1.3
+            console-control-strings: 1.1.0
+            has-unicode: 2.0.1
+            signal-exit: 3.0.7
+            string-width: 4.2.3
+            strip-ansi: 6.0.1
+            wide-align: 1.1.5
+
+    get-caller-file@2.0.5: {}
+
+    get-intrinsic@1.2.4:
+        dependencies:
+            es-errors: 1.3.0
+            function-bind: 1.1.2
+            has-proto: 1.1.0
+            has-symbols: 1.1.0
+            hasown: 2.0.2
+
+    get-stream@5.2.0:
+        dependencies:
+            pump: 3.0.2
+
+    get-symbol-description@1.0.2:
+        dependencies:
+            call-bind: 1.0.7
+            es-errors: 1.3.0
+            get-intrinsic: 1.2.4
+
+    get-tsconfig@4.8.1:
+        dependencies:
+            resolve-pkg-maps: 1.0.0
+
+    get-value@2.0.6: {}
+
+    glob-parent@5.1.2:
+        dependencies:
+            is-glob: 4.0.3
+
+    glob-parent@6.0.2:
+        dependencies:
+            is-glob: 4.0.3
+
+    glob@10.4.5:
+        dependencies:
+            foreground-child: 3.3.0
+            jackspeak: 3.4.3
+            minimatch: 9.0.5
+            minipass: 7.1.2
+            package-json-from-dist: 1.0.1
+            path-scurry: 1.11.1
+
+    glob@7.2.3:
+        dependencies:
+            fs.realpath: 1.0.0
+            inflight: 1.0.6
+            inherits: 2.0.4
+            minimatch: 3.1.2
+            once: 1.4.0
+            path-is-absolute: 1.0.1
+
+    glob@8.1.0:
+        dependencies:
+            fs.realpath: 1.0.0
+            inflight: 1.0.6
+            inherits: 2.0.4
+            minimatch: 5.1.6
+            once: 1.4.0
+
+    global-agent@3.0.0:
+        dependencies:
+            boolean: 3.2.0
+            es6-error: 4.1.1
+            matcher: 3.0.0
+            roarr: 2.15.4
+            semver: 7.6.3
+            serialize-error: 7.0.1
+        optional: true
 
-  is-symbol@1.1.0:
-    resolution: {integrity: sha512-qS8KkNNXUZ/I+nX6QT8ZS1/Yx0A444yhzdTKxCzKkNjQ9sHErBxJnJAgh+f5YhusYECEcjo4XcyH87hn6+ks0A==}
-    engines: {node: '>= 0.4'}
+    global-modules@1.0.0:
+        dependencies:
+            global-prefix: 1.0.2
+            is-windows: 1.0.2
+            resolve-dir: 1.0.1
+
+    global-prefix@1.0.2:
+        dependencies:
+            expand-tilde: 2.0.2
+            homedir-polyfill: 1.0.3
+            ini: 1.3.8
+            is-windows: 1.0.2
+            which: 1.3.1
+
+    globals@14.0.0: {}
+
+    globalthis@1.0.4:
+        dependencies:
+            define-properties: 1.2.1
+            gopd: 1.1.0
+
+    gopd@1.1.0:
+        dependencies:
+            get-intrinsic: 1.2.4
+
+    got@11.8.6:
+        dependencies:
+            "@sindresorhus/is": 4.6.0
+            "@szmarczak/http-timer": 4.0.6
+            "@types/cacheable-request": 6.0.3
+            "@types/responselike": 1.0.3
+            cacheable-lookup: 5.0.4
+            cacheable-request: 7.0.4
+            decompress-response: 6.0.0
+            http2-wrapper: 1.0.3
+            lowercase-keys: 2.0.0
+            p-cancelable: 2.1.1
+            responselike: 2.0.1
+
+    graceful-fs@4.2.11: {}
+
+    graphemer@1.4.0: {}
+
+    has-bigints@1.0.2: {}
+
+    has-flag@4.0.0: {}
+
+    has-property-descriptors@1.0.2:
+        dependencies:
+            es-define-property: 1.0.0
+
+    has-proto@1.1.0:
+        dependencies:
+            call-bind: 1.0.7
+
+    has-symbols@1.1.0: {}
+
+    has-tostringtag@1.0.2:
+        dependencies:
+            has-symbols: 1.1.0
+
+    has-unicode@2.0.1: {}
+
+    has-value@0.3.1:
+        dependencies:
+            get-value: 2.0.6
+            has-values: 0.1.4
+            isobject: 2.1.0
+
+    has-value@1.0.0:
+        dependencies:
+            get-value: 2.0.6
+            has-values: 1.0.0
+            isobject: 3.0.1
+
+    has-values@0.1.4: {}
+
+    has-values@1.0.0:
+        dependencies:
+            is-number: 3.0.0
+            kind-of: 4.0.0
+
+    hasown@2.0.2:
+        dependencies:
+            function-bind: 1.1.2
+
+    homedir-polyfill@1.0.3:
+        dependencies:
+            parse-passwd: 1.0.0
+
+    hosted-git-info@4.1.0:
+        dependencies:
+            lru-cache: 6.0.0
+
+    http-cache-semantics@4.1.1: {}
+
+    http-proxy-agent@5.0.0:
+        dependencies:
+            "@tootallnate/once": 2.0.0
+            agent-base: 6.0.2
+            debug: 4.3.7
+        transitivePeerDependencies:
+            - supports-color
+
+    http-proxy-agent@7.0.2:
+        dependencies:
+            agent-base: 7.1.1
+            debug: 4.3.7
+        transitivePeerDependencies:
+            - supports-color
+
+    http2-wrapper@1.0.3:
+        dependencies:
+            quick-lru: 5.1.1
+            resolve-alpn: 1.2.1
+
+    https-proxy-agent@5.0.1:
+        dependencies:
+            agent-base: 6.0.2
+            debug: 4.3.7
+        transitivePeerDependencies:
+            - supports-color
+
+    https-proxy-agent@7.0.5:
+        dependencies:
+            agent-base: 7.1.1
+            debug: 4.3.7
+        transitivePeerDependencies:
+            - supports-color
+
+    humanize-ms@1.2.1:
+        dependencies:
+            ms: 2.1.3
+
+    iconv-corefoundation@1.1.7:
+        dependencies:
+            cli-truncate: 2.1.0
+            node-addon-api: 1.7.2
+        optional: true
 
-  is-typed-array@1.1.13:
-    resolution: {integrity: sha512-uZ25/bUAlUY5fR4OKT4rZQEBrzQWYV9ZJYGGsUmEJ6thodVJ1HX64ePQ6Z0qPWP+m+Uq6e9UugrE38jeYsDSMw==}
-    engines: {node: '>= 0.4'}
+    iconv-lite@0.6.3:
+        dependencies:
+            safer-buffer: 2.1.2
 
-  is-unicode-supported@0.1.0:
-    resolution: {integrity: sha512-knxG2q4UC3u8stRGyAVJCOdxFmv5DZiRcdlIaAQXAbSfJya+OhopNotLQrstBhququ4ZpuKbDc/8S6mgXgPFPw==}
-    engines: {node: '>=10'}
+    ieee754@1.2.1: {}
 
-  is-weakmap@2.0.2:
-    resolution: {integrity: sha512-K5pXYOm9wqY1RgjpL3YTkF39tni1XajUIkawTLUo9EZEVUFga5gSQJF8nNS7ZwJQ02y+1YCNYcMh+HIf1ZqE+w==}
-    engines: {node: '>= 0.4'}
+    ignore@5.3.2: {}
 
-  is-weakref@1.0.2:
-    resolution: {integrity: sha512-qctsuLZmIQ0+vSSMfoVvyFe2+GSEvnmZ2ezTup1SBse9+twCCeial6EEi3Nc2KFcf6+qz2FBPnjXsk8xhKSaPQ==}
+    import-fresh@3.3.0:
+        dependencies:
+            parent-module: 1.0.1
+            resolve-from: 4.0.0
 
-  is-weakset@2.0.3:
-    resolution: {integrity: sha512-LvIm3/KWzS9oRFHugab7d+M/GcBXuXX5xZkzPmN+NxihdQlZUQ4dWuSV1xR/sq6upL1TJEDrfBgRepHFdBtSNQ==}
-    engines: {node: '>= 0.4'}
+    imurmurhash@0.1.4: {}
 
-  is-windows@1.0.2:
-    resolution: {integrity: sha512-eXK1UInq2bPmjyX6e3VHIzMLobc4J94i4AWn+Hpq3OU5KkrRC96OAcR3PRJ/pGu6m8TRnBHP9dkXQVsT/COVIA==}
-    engines: {node: '>=0.10.0'}
+    indent-string@4.0.0: {}
 
-  isarray@1.0.0:
-    resolution: {integrity: sha512-VLghIWNM6ELQzo7zwmcg0NmTVyWKYjvIeM83yjp0wRDTmUnrM678fQbcKBo6n2CJEF0szoG//ytg+TKla89ALQ==}
+    infer-owner@1.0.4: {}
 
-  isarray@2.0.5:
-    resolution: {integrity: sha512-xHjhDr3cNBK0BzdUJSPXZntQUx/mwMS5Rw4A7lPJ90XGAO6ISP/ePDNuo0vhqOZU+UD5JoodwCAAoZQd3FeAKw==}
+    inflight@1.0.6:
+        dependencies:
+            once: 1.4.0
+            wrappy: 1.0.2
 
-  isbinaryfile@4.0.10:
-    resolution: {integrity: sha512-iHrqe5shvBUcFbmZq9zOQHBoeOhZJu6RQGrDpBgenUm/Am+F3JM2MgQj+rK3Z601fzrL5gLZWtAPH2OBaSVcyw==}
-    engines: {node: '>= 8.0.0'}
+    inherits@2.0.4: {}
 
-  isbinaryfile@5.0.4:
-    resolution: {integrity: sha512-YKBKVkKhty7s8rxddb40oOkuP0NbaeXrQvLin6QMHL7Ypiy2RW9LwOVrVgZRyOrhQlayMd9t+D8yDy8MKFTSDQ==}
-    engines: {node: '>= 18.0.0'}
+    ini@1.3.8: {}
 
-  isexe@2.0.0:
-    resolution: {integrity: sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==}
+    internal-slot@1.0.7:
+        dependencies:
+            es-errors: 1.3.0
+            hasown: 2.0.2
+            side-channel: 1.0.6
 
-  isobject@2.1.0:
-    resolution: {integrity: sha512-+OUdGJlgjOBZDfxnDjYYG6zp487z0JGNQq3cYQYg5f5hKR+syHMsaztzGeml/4kGG55CSpKSpWTY+jYGgsHLgA==}
-    engines: {node: '>=0.10.0'}
+    ip-address@9.0.5:
+        dependencies:
+            jsbn: 1.1.0
+            sprintf-js: 1.1.3
 
-  isobject@3.0.1:
-    resolution: {integrity: sha512-WhB9zCku7EGTj/HQQRz5aUQEUeoQZH2bWcltRErOpymJ4boYE6wL9Tbr23krRPSZ+C5zqNSrSw+Cc7sZZ4b7vg==}
-    engines: {node: '>=0.10.0'}
+    is-accessor-descriptor@1.0.1:
+        dependencies:
+            hasown: 2.0.2
 
-  jackspeak@3.4.3:
-    resolution: {integrity: sha512-OGlZQpz2yfahA/Rd1Y8Cd9SIEsqvXkLVoSw/cgwhnhFMDbsQFeZYoJJ7bIZBS9BcamUW96asq/npPWugM+RQBw==}
+    is-array-buffer@3.0.4:
+        dependencies:
+            call-bind: 1.0.7
+            get-intrinsic: 1.2.4
 
-  jake@10.9.2:
-    resolution: {integrity: sha512-2P4SQ0HrLQ+fw6llpLnOaGAvN2Zu6778SJMrCUwns4fOoG9ayrTiZk3VV8sCPkVZF8ab0zksVpS8FDY5pRCNBA==}
-    engines: {node: '>=10'}
-    hasBin: true
+    is-async-function@2.0.0:
+        dependencies:
+            has-tostringtag: 1.0.2
 
-  js-yaml@4.1.0:
-    resolution: {integrity: sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==}
-    hasBin: true
+    is-bigint@1.1.0:
+        dependencies:
+            has-bigints: 1.0.2
 
-  jsbn@1.1.0:
-    resolution: {integrity: sha512-4bYVV3aAMtDTTu4+xsDYa6sy9GyJ69/amsu9sYF2zqjiEoZA5xJi3BrfX3uY+/IekIu7MwdObdbDWpoZdBv3/A==}
+    is-boolean-object@1.2.0:
+        dependencies:
+            call-bind: 1.0.7
+            has-tostringtag: 1.0.2
 
-  json-buffer@3.0.1:
-    resolution: {integrity: sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==}
+    is-buffer@1.1.6: {}
 
-  json-schema-traverse@0.4.1:
-    resolution: {integrity: sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==}
+    is-callable@1.2.7: {}
 
-  json-stable-stringify-without-jsonify@1.0.1:
-    resolution: {integrity: sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==}
+    is-ci@3.0.1:
+        dependencies:
+            ci-info: 3.9.0
 
-  json-stringify-safe@5.0.1:
-    resolution: {integrity: sha512-ZClg6AaYvamvYEE82d3Iyd3vSSIjQ+odgjaTzRuO3s7toCdFKczob2i0zCh7JE8kWn17yvAWhUVxvqGwUalsRA==}
+    is-core-module@2.15.1:
+        dependencies:
+            hasown: 2.0.2
 
-  json5@1.0.2:
-    resolution: {integrity: sha512-g1MWMLBiz8FKi1e4w0UyVL3w+iJceWAFBAaBnnGKOpNa5f8TLktkbre1+s6oICydWAm+HRUGTmI+//xv2hvXYA==}
-    hasBin: true
+    is-data-descriptor@1.0.1:
+        dependencies:
+            hasown: 2.0.2
 
-  json5@2.2.3:
-    resolution: {integrity: sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==}
-    engines: {node: '>=6'}
-    hasBin: true
+    is-data-view@1.0.1:
+        dependencies:
+            is-typed-array: 1.1.13
 
-  jsonfile@4.0.0:
-    resolution: {integrity: sha512-m6F1R3z8jjlf2imQHS2Qez5sjKWQzbuuhuJ/FKYFRZvPE3PuHcSMVZzfsLhGVOkfd20obL5SWEBew5ShlquNxg==}
+    is-date-object@1.0.5:
+        dependencies:
+            has-tostringtag: 1.0.2
 
-  jsonfile@6.1.0:
-    resolution: {integrity: sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==}
+    is-descriptor@0.1.7:
+        dependencies:
+            is-accessor-descriptor: 1.0.1
+            is-data-descriptor: 1.0.1
 
-  keyv@4.5.4:
-    resolution: {integrity: sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==}
+    is-descriptor@1.0.3:
+        dependencies:
+            is-accessor-descriptor: 1.0.1
+            is-data-descriptor: 1.0.1
 
-  kind-of@3.2.2:
-    resolution: {integrity: sha512-NOW9QQXMoZGg/oqnVNoNTTIFEIid1627WCffUBJEdMxYApq7mNE7CpzucIPc+ZQg25Phej7IJSmX3hO+oblOtQ==}
-    engines: {node: '>=0.10.0'}
+    is-extendable@0.1.1: {}
 
-  kind-of@4.0.0:
-    resolution: {integrity: sha512-24XsCxmEbRwEDbz/qz3stgin8TTzZ1ESR56OMCN0ujYg+vRutNSiOj9bHH9u85DKgXguraugV5sFuvbD4FW/hw==}
-    engines: {node: '>=0.10.0'}
+    is-extendable@1.0.1:
+        dependencies:
+            is-plain-object: 2.0.4
 
-  kind-of@6.0.3:
-    resolution: {integrity: sha512-dcS1ul+9tmeD95T+x28/ehLgd9mENa3LsvDTtzm3vyBEO7RPptvAD+t44WVXaUjTBRcrpFeFlC8WCruUR456hw==}
-    engines: {node: '>=0.10.0'}
+    is-extglob@2.1.1: {}
 
-  lazy-val@1.0.5:
-    resolution: {integrity: sha512-0/BnGCCfyUMkBpeDgWihanIAF9JmZhHBgUhEqzvf+adhNGLoP6TaiI5oF8oyb3I45P+PcnrqihSf01M0l0G5+Q==}
+    is-finalizationregistry@1.1.0:
+        dependencies:
+            call-bind: 1.0.7
 
-  lazystream@1.0.1:
-    resolution: {integrity: sha512-b94GiNHQNy6JNTrt5w6zNyffMrNkXZb3KTkCZJb2V1xaEGCk093vkZ2jk3tpaeP33/OiXC+WvK9AxUebnf5nbw==}
-    engines: {node: '>= 0.6.3'}
+    is-fullwidth-code-point@3.0.0: {}
 
-  levn@0.4.1:
-    resolution: {integrity: sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==}
-    engines: {node: '>= 0.8.0'}
+    is-generator-function@1.0.10:
+        dependencies:
+            has-tostringtag: 1.0.2
 
-  locate-path@6.0.0:
-    resolution: {integrity: sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==}
-    engines: {node: '>=10'}
+    is-glob@4.0.3:
+        dependencies:
+            is-extglob: 2.1.1
 
-  lodash.defaults@4.2.0:
-    resolution: {integrity: sha512-qjxPLHd3r5DnsdGacqOMU6pb/avJzdh9tFX2ymgoZE27BmjXrNy/y4LoaiTeAb+O3gL8AfpJGtqfX/ae2leYYQ==}
+    is-interactive@1.0.0: {}
 
-  lodash.difference@4.5.0:
-    resolution: {integrity: sha512-dS2j+W26TQ7taQBGN8Lbbq04ssV3emRw4NY58WErlTO29pIqS0HmoT5aJ9+TUQ1N3G+JOZSji4eugsWwGp9yPA==}
+    is-lambda@1.0.1: {}
 
-  lodash.escaperegexp@4.1.2:
-    resolution: {integrity: sha512-TM9YBvyC84ZxE3rgfefxUWiQKLilstD6k7PTGt6wfbtXF8ixIJLOL3VYyV/z+ZiPLsVxAsKAFVwWlWeb2Y8Yyw==}
+    is-map@2.0.3: {}
 
-  lodash.flatten@4.4.0:
-    resolution: {integrity: sha512-C5N2Z3DgnnKr0LOpv/hKCgKdb7ZZwafIrsesve6lmzvZIRZRGaZ/l6Q8+2W7NaT+ZwO3fFlSCzCzrDCFdJfZ4g==}
+    is-negative-zero@2.0.3: {}
 
-  lodash.isequal@4.5.0:
-    resolution: {integrity: sha512-pDo3lu8Jhfjqls6GkMgpahsF9kCyayhgykjyLMNFTKWrpVdAQtYyB4muAMWozBB4ig/dtWAmsMxLEI8wuz+DYQ==}
+    is-number-object@1.1.0:
+        dependencies:
+            call-bind: 1.0.7
+            has-tostringtag: 1.0.2
 
-  lodash.isplainobject@4.0.6:
-    resolution: {integrity: sha512-oSXzaWypCMHkPC3NvBEaPHf0KsA5mvPrOPgQWDsbg8n7orZ290M0BmC/jgRZ4vcJ6DTAhjrsSYgdsW/F+MFOBA==}
+    is-number@3.0.0:
+        dependencies:
+            kind-of: 3.2.2
 
-  lodash.merge@4.6.2:
-    resolution: {integrity: sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==}
+    is-number@7.0.0: {}
 
-  lodash.union@4.6.0:
-    resolution: {integrity: sha512-c4pB2CdGrGdjMKYLA+XiRDO7Y0PRQbm/Gzg8qMj+QH+pFVAoTp5sBpO0odL3FjoPCGjK96p6qsP+yQoiLoOBcw==}
+    is-plain-object@2.0.4:
+        dependencies:
+            isobject: 3.0.1
 
-  lodash@4.17.21:
-    resolution: {integrity: sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==}
+    is-regex@1.2.0:
+        dependencies:
+            call-bind: 1.0.7
+            gopd: 1.1.0
+            has-tostringtag: 1.0.2
+            hasown: 2.0.2
 
-  log-symbols@4.1.0:
-    resolution: {integrity: sha512-8XPvpAA8uyhfteu8pIvQxpJZ7SYYdpUivZpGy6sFsBuKRY/7rQGavedeB8aK+Zkyq6upMFVL/9AW6vOYzfRyLg==}
-    engines: {node: '>=10'}
+    is-set@2.0.3: {}
 
-  lowercase-keys@2.0.0:
-    resolution: {integrity: sha512-tqNXrS78oMOE73NMxK4EMLQsQowWf8jKooH9g7xPavRT706R6bkQJ6DY2Te7QukaZsulxa30wQ7bk0pm4XiHmA==}
-    engines: {node: '>=8'}
+    is-shared-array-buffer@1.0.3:
+        dependencies:
+            call-bind: 1.0.7
 
-  lru-cache@10.4.3:
-    resolution: {integrity: sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==}
+    is-string@1.1.0:
+        dependencies:
+            call-bind: 1.0.7
+            has-tostringtag: 1.0.2
 
-  lru-cache@6.0.0:
-    resolution: {integrity: sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==}
-    engines: {node: '>=10'}
+    is-symbol@1.1.0:
+        dependencies:
+            call-bind: 1.0.7
+            has-symbols: 1.1.0
+            safe-regex-test: 1.0.3
 
-  lru-cache@7.18.3:
-    resolution: {integrity: sha512-jumlc0BIUrS3qJGgIkWZsyfAM7NCWiBcCDhnd+3NNM5KbBmLTgHVfWBcg6W+rLUsIpzpERPsvwUP7CckAQSOoA==}
-    engines: {node: '>=12'}
+    is-typed-array@1.1.13:
+        dependencies:
+            which-typed-array: 1.1.16
 
-  make-fetch-happen@10.2.1:
-    resolution: {integrity: sha512-NgOPbRiaQM10DYXvN3/hhGVI2M5MtITFryzBGxHM5p4wnFxsVCbxkrBrDsk+EZ5OB4jEOT7AjDxtdF+KVEFT7w==}
-    engines: {node: ^12.13.0 || ^14.15.0 || >=16.0.0}
+    is-unicode-supported@0.1.0: {}
 
-  map-cache@0.2.2:
-    resolution: {integrity: sha512-8y/eV9QQZCiyn1SprXSrCmqJN0yNRATe+PO8ztwqrvrbdRLA3eYJF0yaR0YayLWkMbsQSKWS9N2gPcGEc4UsZg==}
-    engines: {node: '>=0.10.0'}
+    is-weakmap@2.0.2: {}
 
-  map-visit@1.0.0:
-    resolution: {integrity: sha512-4y7uGv8bd2WdM9vpQsiQNo41Ln1NvhvDRuVt0k2JZQ+ezN2uaQes7lZeZ+QQUHOLQAtDaBJ+7wCbi+ab/KFs+w==}
-    engines: {node: '>=0.10.0'}
+    is-weakref@1.0.2:
+        dependencies:
+            call-bind: 1.0.7
 
-  matcher@3.0.0:
-    resolution: {integrity: sha512-OkeDaAZ/bQCxeFAozM55PKcKU0yJMPGifLwV4Qgjitu+5MoAfSQN4lsLJeXZ1b8w0x+/Emda6MZgXS1jvsapng==}
-    engines: {node: '>=10'}
+    is-weakset@2.0.3:
+        dependencies:
+            call-bind: 1.0.7
+            get-intrinsic: 1.2.4
 
-  memory-stream@1.0.0:
-    resolution: {integrity: sha512-Wm13VcsPIMdG96dzILfij09PvuS3APtcKNh7M28FsCA/w6+1mjR7hhPmfFNoilX9xU7wTdhsH5lJAm6XNzdtww==}
+    is-windows@1.0.2: {}
 
-  merge2@1.4.1:
-    resolution: {integrity: sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==}
-    engines: {node: '>= 8'}
+    isarray@1.0.0: {}
 
-  micromatch@4.0.8:
-    resolution: {integrity: sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==}
-    engines: {node: '>=8.6'}
+    isarray@2.0.5: {}
 
-  mime-db@1.52.0:
-    resolution: {integrity: sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==}
-    engines: {node: '>= 0.6'}
+    isbinaryfile@4.0.10: {}
 
-  mime-types@2.1.35:
-    resolution: {integrity: sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==}
-    engines: {node: '>= 0.6'}
+    isbinaryfile@5.0.4: {}
 
-  mime@2.6.0:
-    resolution: {integrity: sha512-USPkMeET31rOMiarsBNIHZKLGgvKc/LrjofAnBlOttf5ajRvqiRA8QsenbcooctK6d6Ts6aqZXBA+XbkKthiQg==}
-    engines: {node: '>=4.0.0'}
-    hasBin: true
+    isexe@2.0.0: {}
 
-  mimic-fn@2.1.0:
-    resolution: {integrity: sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg==}
-    engines: {node: '>=6'}
+    isobject@2.1.0:
+        dependencies:
+            isarray: 1.0.0
 
-  mimic-response@1.0.1:
-    resolution: {integrity: sha512-j5EctnkH7amfV/q5Hgmoal1g2QHFJRraOtmx0JpIqkxhBhI/lJSl1nMpQ45hVarwNETOoWEimndZ4QK0RHxuxQ==}
-    engines: {node: '>=4'}
+    isobject@3.0.1: {}
 
-  mimic-response@3.1.0:
-    resolution: {integrity: sha512-z0yWI+4FDrrweS8Zmt4Ej5HdJmky15+L2e6Wgn3+iK5fWzb6T3fhNFq2+MeTRb064c6Wr4N/wv0DzQTjNzHNGQ==}
-    engines: {node: '>=10'}
+    jackspeak@3.4.3:
+        dependencies:
+            "@isaacs/cliui": 8.0.2
+        optionalDependencies:
+            "@pkgjs/parseargs": 0.11.0
 
-  minimatch@10.0.1:
-    resolution: {integrity: sha512-ethXTt3SGGR+95gudmqJ1eNhRO7eGEGIgYA9vnPatK4/etz2MEVDno5GMCibdMTuBMyElzIlgxMna3K94XDIDQ==}
-    engines: {node: 20 || >=22}
+    jake@10.9.2:
+        dependencies:
+            async: 3.2.6
+            chalk: 4.1.2
+            filelist: 1.0.4
+            minimatch: 3.1.2
 
-  minimatch@3.1.2:
-    resolution: {integrity: sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==}
+    js-yaml@4.1.0:
+        dependencies:
+            argparse: 2.0.1
 
-  minimatch@5.1.6:
-    resolution: {integrity: sha512-lKwV/1brpG6mBUFHtb7NUmtABCb2WZZmm2wNiOA5hAb8VdCS4B3dtMWyvcoViccwAW/COERjXLt0zP1zXUN26g==}
-    engines: {node: '>=10'}
+    jsbn@1.1.0: {}
 
-  minimatch@9.0.5:
-    resolution: {integrity: sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==}
-    engines: {node: '>=16 || 14 >=14.17'}
+    json-buffer@3.0.1: {}
 
-  minimist@1.2.8:
-    resolution: {integrity: sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==}
+    json-schema-traverse@0.4.1: {}
 
-  minipass-collect@1.0.2:
-    resolution: {integrity: sha512-6T6lH0H8OG9kITm/Jm6tdooIbogG9e0tLgpY6mphXSm/A9u8Nq1ryBG+Qspiub9LjWlBPsPS3tWQ/Botq4FdxA==}
-    engines: {node: '>= 8'}
+    json-stable-stringify-without-jsonify@1.0.1: {}
 
-  minipass-fetch@2.1.2:
-    resolution: {integrity: sha512-LT49Zi2/WMROHYoqGgdlQIZh8mLPZmOrN2NdJjMXxYe4nkN6FUyuPuOAOedNJDrx0IRGg9+4guZewtp8hE6TxA==}
-    engines: {node: ^12.13.0 || ^14.15.0 || >=16.0.0}
+    json-stringify-safe@5.0.1:
+        optional: true
 
-  minipass-flush@1.0.5:
-    resolution: {integrity: sha512-JmQSYYpPUqX5Jyn1mXaRwOda1uQ8HP5KAT/oDSLCzt1BYRhQU0/hDtsB1ufZfEEzMZ9aAVmsBw8+FWsIXlClWw==}
-    engines: {node: '>= 8'}
+    json5@1.0.2:
+        dependencies:
+            minimist: 1.2.8
 
-  minipass-pipeline@1.2.4:
-    resolution: {integrity: sha512-xuIq7cIOt09RPRJ19gdi4b+RiNvDFYe5JH+ggNvBqGqpQXcru3PcRmOZuHBKWK1Txf9+cQ+HMVN4d6z46LZP7A==}
-    engines: {node: '>=8'}
+    json5@2.2.3: {}
 
-  minipass-sized@1.0.3:
-    resolution: {integrity: sha512-MbkQQ2CTiBMlA2Dm/5cY+9SWFEN8pzzOXi6rlM5Xxq0Yqbda5ZQy9sU75a673FE9ZK0Zsbr6Y5iP6u9nktfg2g==}
-    engines: {node: '>=8'}
+    jsonfile@4.0.0:
+        optionalDependencies:
+            graceful-fs: 4.2.11
 
-  minipass@3.3.6:
-    resolution: {integrity: sha512-DxiNidxSEK+tHG6zOIklvNOwm3hvCrbUrdtzY74U6HKTJxvIDfOUL5W5P2Ghd3DTkhhKPYGqeNUIh5qcM4YBfw==}
-    engines: {node: '>=8'}
+    jsonfile@6.1.0:
+        dependencies:
+            universalify: 2.0.1
+        optionalDependencies:
+            graceful-fs: 4.2.11
 
-  minipass@5.0.0:
-    resolution: {integrity: sha512-3FnjYuehv9k6ovOEbyOswadCDPX1piCfhV8ncmYtHOjuPwylVWsghTLo7rabjC3Rx5xD4HDx8Wm1xnMF7S5qFQ==}
-    engines: {node: '>=8'}
+    keyv@4.5.4:
+        dependencies:
+            json-buffer: 3.0.1
 
-  minipass@7.1.2:
-    resolution: {integrity: sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==}
-    engines: {node: '>=16 || 14 >=14.17'}
+    kind-of@3.2.2:
+        dependencies:
+            is-buffer: 1.1.6
 
-  minizlib@2.1.2:
-    resolution: {integrity: sha512-bAxsR8BVfj60DWXHE3u30oHzfl4G7khkSuPW+qvpd7jFRHm7dLxOjUk1EHACJ/hxLY8phGJ0YhYHZo7jil7Qdg==}
-    engines: {node: '>= 8'}
+    kind-of@4.0.0:
+        dependencies:
+            is-buffer: 1.1.6
 
-  mixin-deep@1.3.2:
-    resolution: {integrity: sha512-WRoDn//mXBiJ1H40rqa3vH0toePwSsGb45iInWlTySa+Uu4k3tYUSxa2v1KqAiLtvlrSzaExqS1gtk96A9zvEA==}
-    engines: {node: '>=0.10.0'}
+    kind-of@6.0.3: {}
 
-  mkdirp@1.0.4:
-    resolution: {integrity: sha512-vVqVZQyf3WLx2Shd0qJ9xuvqgAyKPLAiqITEtqW0oIUjzo3PePDd6fW9iFz30ef7Ysp/oiWqbhszeGWW2T6Gzw==}
-    engines: {node: '>=10'}
-    hasBin: true
+    lazy-val@1.0.5: {}
 
-  moment@2.30.1:
-    resolution: {integrity: sha512-uEmtNhbDOrWPFS+hdjFCBfy9f2YoyzRpwcl+DqpC6taX21FzsTLQVbMV/W7PzNSX6x/bhC1zA3c2UQ5NzH6how==}
+    lazystream@1.0.1:
+        dependencies:
+            readable-stream: 2.3.8
 
-  ms@2.0.0:
-    resolution: {integrity: sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==}
+    levn@0.4.1:
+        dependencies:
+            prelude-ls: 1.2.1
+            type-check: 0.4.0
 
-  ms@2.1.3:
-    resolution: {integrity: sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==}
+    locate-path@6.0.0:
+        dependencies:
+            p-locate: 5.0.0
 
-  nanomatch@1.2.13:
-    resolution: {integrity: sha512-fpoe2T0RbHwBTBUOftAfBPaDEi06ufaUai0mE6Yn1kacc3SnTErfb/h+X94VXzI64rKFHYImXSvdwGGCmwOqCA==}
-    engines: {node: '>=0.10.0'}
+    lodash.defaults@4.2.0: {}
 
-  natural-compare@1.4.0:
-    resolution: {integrity: sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==}
+    lodash.difference@4.5.0: {}
 
-  negotiator@0.6.4:
-    resolution: {integrity: sha512-myRT3DiWPHqho5PrJaIRyaMv2kgYf0mUVgBNOYMuCH5Ki1yEiQaf/ZJuQ62nvpc44wL5WDbTX7yGJi1Neevw8w==}
-    engines: {node: '>= 0.6'}
+    lodash.escaperegexp@4.1.2: {}
 
-  node-abi@3.71.0:
-    resolution: {integrity: sha512-SZ40vRiy/+wRTf21hxkkEjPJZpARzUMVcJoQse2EF8qkUWbbO2z7vd5oA/H6bVH6SZQ5STGcu0KRDS7biNRfxw==}
-    engines: {node: '>=10'}
+    lodash.flatten@4.4.0: {}
 
-  node-addon-api@1.7.2:
-    resolution: {integrity: sha512-ibPK3iA+vaY1eEjESkQkM0BbCqFOaZMiXRTtdB0u7b4djtY6JnsjvPdUHVMg6xQt3B8fpTTWHI9A+ADjM9frzg==}
+    lodash.isequal@4.5.0: {}
 
-  node-addon-api@8.3.0:
-    resolution: {integrity: sha512-8VOpLHFrOQlAH+qA0ZzuGRlALRA6/LVh8QJldbrC4DY0hXoMP0l4Acq8TzFC018HztWiRqyCEj2aTWY2UvnJUg==}
-    engines: {node: ^18 || ^20 || >= 21}
+    lodash.isplainobject@4.0.6: {}
 
-  node-api-headers@1.4.0:
-    resolution: {integrity: sha512-u83U3WnRbBpWlhc0sQbpF3slHRLV/a6/OXByc+QzHcLxiDiJUWLuKGZp4/ntZUchnXGOCnCq++JUEtwb1/tyow==}
+    lodash.merge@4.6.2: {}
 
-  node-api-version@0.2.0:
-    resolution: {integrity: sha512-fthTTsi8CxaBXMaBAD7ST2uylwvsnYxh2PfaScwpMhos6KlSFajXQPcM4ogNE1q2s3Lbz9GCGqeIHC+C6OZnKg==}
+    lodash.union@4.6.0: {}
 
-  node-gyp@9.4.1:
-    resolution: {integrity: sha512-OQkWKbjQKbGkMf/xqI1jjy3oCTgMKJac58G2+bjZb3fza6gW2YrCSdMQYaoTb70crvE//Gngr4f0AgVHmqHvBQ==}
-    engines: {node: ^12.13 || ^14.13 || >=16}
-    hasBin: true
+    lodash@4.17.21: {}
 
-  nopt@6.0.0:
-    resolution: {integrity: sha512-ZwLpbTgdhuZUnZzjd7nb1ZV+4DoiC6/sfiVKok72ym/4Tlf+DFdlHYmT2JPmcNNWV6Pi3SDf1kT+A4r9RTuT9g==}
-    engines: {node: ^12.13.0 || ^14.15.0 || >=16.0.0}
-    hasBin: true
+    log-symbols@4.1.0:
+        dependencies:
+            chalk: 4.1.2
+            is-unicode-supported: 0.1.0
 
-  normalize-path@3.0.0:
-    resolution: {integrity: sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==}
-    engines: {node: '>=0.10.0'}
+    lowercase-keys@2.0.0: {}
 
-  normalize-url@6.1.0:
-    resolution: {integrity: sha512-DlL+XwOy3NxAQ8xuC0okPgK46iuVNAK01YN7RueYBqqFeGsBjV9XmCAzAdgt+667bCl5kPh9EqKKDwnaPG1I7A==}
-    engines: {node: '>=10'}
+    lru-cache@10.4.3: {}
 
-  npmlog@6.0.2:
-    resolution: {integrity: sha512-/vBvz5Jfr9dT/aFWd0FIRf+T/Q2WBsLENygUaFUqstqsycmZAP/t5BvFJTK0viFmSUxiUKTUplWy5vt+rvKIxg==}
-    engines: {node: ^12.13.0 || ^14.15.0 || >=16.0.0}
-    deprecated: This package is no longer supported.
+    lru-cache@6.0.0:
+        dependencies:
+            yallist: 4.0.0
 
-  object-copy@0.1.0:
-    resolution: {integrity: sha512-79LYn6VAb63zgtmAteVOWo9Vdj71ZVBy3Pbse+VqxDpEP83XuujMrGqHIwAXJ5I/aM0zU7dIyIAhifVTPrNItQ==}
-    engines: {node: '>=0.10.0'}
+    lru-cache@7.18.3: {}
 
-  object-inspect@1.13.3:
-    resolution: {integrity: sha512-kDCGIbxkDSXE3euJZZXzc6to7fCrKHNI/hSRQnRuQ+BWjFNzZwiFF8fj/6o2t2G9/jTj8PSIYTfCLelLZEeRpA==}
-    engines: {node: '>= 0.4'}
+    make-fetch-happen@10.2.1:
+        dependencies:
+            agentkeepalive: 4.5.0
+            cacache: 16.1.3
+            http-cache-semantics: 4.1.1
+            http-proxy-agent: 5.0.0
+            https-proxy-agent: 5.0.1
+            is-lambda: 1.0.1
+            lru-cache: 7.18.3
+            minipass: 3.3.6
+            minipass-collect: 1.0.2
+            minipass-fetch: 2.1.2
+            minipass-flush: 1.0.5
+            minipass-pipeline: 1.2.4
+            negotiator: 0.6.4
+            promise-retry: 2.0.1
+            socks-proxy-agent: 7.0.0
+            ssri: 9.0.1
+        transitivePeerDependencies:
+            - bluebird
+            - supports-color
 
-  object-keys@1.1.1:
-    resolution: {integrity: sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==}
-    engines: {node: '>= 0.4'}
+    map-cache@0.2.2: {}
 
-  object-visit@1.0.1:
-    resolution: {integrity: sha512-GBaMwwAVK9qbQN3Scdo0OyvgPW7l3lnaVMj84uTOZlswkX0KpF6fyDBJhtTthf7pymztoN36/KEr1DyhF96zEA==}
-    engines: {node: '>=0.10.0'}
+    map-visit@1.0.0:
+        dependencies:
+            object-visit: 1.0.1
 
-  object.assign@4.1.5:
-    resolution: {integrity: sha512-byy+U7gp+FVwmyzKPYhW2h5l3crpmGsxl7X2s8y43IgxvG4g3QZ6CffDtsNQy1WsmZpQbO+ybo0AlW7TY6DcBQ==}
-    engines: {node: '>= 0.4'}
+    matcher@3.0.0:
+        dependencies:
+            escape-string-regexp: 4.0.0
+        optional: true
 
-  object.fromentries@2.0.8:
-    resolution: {integrity: sha512-k6E21FzySsSK5a21KRADBd/NGneRegFO5pLHfdQLpRDETUNJueLXs3WCzyQ3tFRDYgbq3KHGXfTbi2bs8WQ6rQ==}
-    engines: {node: '>= 0.4'}
+    memory-stream@1.0.0:
+        dependencies:
+            readable-stream: 3.6.2
+        optional: true
 
-  object.groupby@1.0.3:
-    resolution: {integrity: sha512-+Lhy3TQTuzXI5hevh8sBGqbmurHbbIjAi0Z4S63nthVLmLxfbj4T54a4CfZrXIrt9iP4mVAPYMo/v99taj3wjQ==}
-    engines: {node: '>= 0.4'}
+    merge2@1.4.1: {}
 
-  object.pick@1.3.0:
-    resolution: {integrity: sha512-tqa/UMy/CCoYmj+H5qc07qvSL9dqcs/WZENZ1JbtWBlATP+iVOe778gE6MSijnyCnORzDuX6hU+LA4SZ09YjFQ==}
-    engines: {node: '>=0.10.0'}
+    micromatch@4.0.8:
+        dependencies:
+            braces: 3.0.3
+            picomatch: 2.3.1
 
-  object.values@1.2.0:
-    resolution: {integrity: sha512-yBYjY9QX2hnRmZHAjG/f13MzmBzxzYgQhFrke06TTyKY5zSTEqkOeukBzIdVA3j3ulu8Qa3MbVFShV7T2RmGtQ==}
-    engines: {node: '>= 0.4'}
+    mime-db@1.52.0: {}
 
-  once@1.4.0:
-    resolution: {integrity: sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==}
+    mime-types@2.1.35:
+        dependencies:
+            mime-db: 1.52.0
 
-  onetime@5.1.2:
-    resolution: {integrity: sha512-kbpaSSGJTWdAY5KPVeMOKXSrPtr8C8C7wodJbcsd51jRnmD+GZu8Y0VoU6Dm5Z4vWr0Ig/1NKuWRKf7j5aaYSg==}
-    engines: {node: '>=6'}
+    mime@2.6.0: {}
 
-  optionator@0.9.4:
-    resolution: {integrity: sha512-6IpQ7mKUxRcZNLIObR0hz7lxsapSSIYNZJwXPGeF0mTVqGKFIXj1DQcMoT22S3ROcLyY/rz0PWaWZ9ayWmad9g==}
-    engines: {node: '>= 0.8.0'}
+    mimic-fn@2.1.0: {}
 
-  ora@5.4.1:
-    resolution: {integrity: sha512-5b6Y85tPxZZ7QytO+BQzysW31HJku27cRIlkbAXaNx+BdcVi+LlRFmVXzeF6a7JCwJpyw5c4b+YSVImQIrBpuQ==}
-    engines: {node: '>=10'}
+    mimic-response@1.0.1: {}
 
-  p-cancelable@2.1.1:
-    resolution: {integrity: sha512-BZOr3nRQHOntUjTrH8+Lh54smKHoHyur8We1V8DSMVrl5A2malOOwuJRnKRDjSnkoeBh4at6BwEnb5I7Jl31wg==}
-    engines: {node: '>=8'}
+    mimic-response@3.1.0: {}
 
-  p-limit@3.1.0:
-    resolution: {integrity: sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==}
-    engines: {node: '>=10'}
+    minimatch@10.0.1:
+        dependencies:
+            brace-expansion: 2.0.1
 
-  p-locate@5.0.0:
-    resolution: {integrity: sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==}
-    engines: {node: '>=10'}
+    minimatch@3.1.2:
+        dependencies:
+            brace-expansion: 1.1.11
 
-  p-map@4.0.0:
-    resolution: {integrity: sha512-/bjOqmgETBYB5BoEeGVea8dmvHb2m9GLy1E9W43yeyfP6QQCZGFNa+XRceJEuDB6zqr+gKpIAmlLebMpykw/MQ==}
-    engines: {node: '>=10'}
+    minimatch@5.1.6:
+        dependencies:
+            brace-expansion: 2.0.1
 
-  package-json-from-dist@1.0.1:
-    resolution: {integrity: sha512-UEZIS3/by4OC8vL3P2dTXRETpebLI2NiI5vIrjaD/5UtrkFX/tNbwjTSRAGC/+7CAo2pIcBaRgWmcBBHcsaCIw==}
+    minimatch@9.0.5:
+        dependencies:
+            brace-expansion: 2.0.1
 
-  parent-module@1.0.1:
-    resolution: {integrity: sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==}
-    engines: {node: '>=6'}
+    minimist@1.2.8: {}
 
-  parse-passwd@1.0.0:
-    resolution: {integrity: sha512-1Y1A//QUXEZK7YKz+rD9WydcE1+EuPr6ZBgKecAB8tmoW6UFv0NREVJe1p+jRxtThkcbbKkfwIbWJe/IeE6m2Q==}
-    engines: {node: '>=0.10.0'}
-
-  pascalcase@0.1.1:
-    resolution: {integrity: sha512-XHXfu/yOQRy9vYOtUDVMN60OEJjW013GoObG1o+xwQTpB9eYJX/BjXMsdW13ZDPruFhYYn0AG22w0xgQMwl3Nw==}
-    engines: {node: '>=0.10.0'}
+    minipass-collect@1.0.2:
+        dependencies:
+            minipass: 3.3.6
 
-  path-exists@4.0.0:
-    resolution: {integrity: sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==}
-    engines: {node: '>=8'}
+    minipass-fetch@2.1.2:
+        dependencies:
+            minipass: 3.3.6
+            minipass-sized: 1.0.3
+            minizlib: 2.1.2
+        optionalDependencies:
+            encoding: 0.1.13
 
-  path-is-absolute@1.0.1:
-    resolution: {integrity: sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==}
-    engines: {node: '>=0.10.0'}
+    minipass-flush@1.0.5:
+        dependencies:
+            minipass: 3.3.6
 
-  path-key@3.1.1:
-    resolution: {integrity: sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==}
-    engines: {node: '>=8'}
+    minipass-pipeline@1.2.4:
+        dependencies:
+            minipass: 3.3.6
 
-  path-parse@1.0.7:
-    resolution: {integrity: sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==}
+    minipass-sized@1.0.3:
+        dependencies:
+            minipass: 3.3.6
 
-  path-scurry@1.11.1:
-    resolution: {integrity: sha512-Xa4Nw17FS9ApQFJ9umLiJS4orGjm7ZzwUrwamcGQuHSzDyth9boKDaycYdDcZDuqYATXw4HFXgaqWTctW/v1HA==}
-    engines: {node: '>=16 || 14 >=14.18'}
+    minipass@3.3.6:
+        dependencies:
+            yallist: 4.0.0
 
-  pe-library@0.4.1:
-    resolution: {integrity: sha512-eRWB5LBz7PpDu4PUlwT0PhnQfTQJlDDdPa35urV4Osrm0t0AqQFGn+UIkU3klZvwJ8KPO3VbBFsXquA6p6kqZw==}
-    engines: {node: '>=12', npm: '>=6'}
+    minipass@5.0.0: {}
 
-  pend@1.2.0:
-    resolution: {integrity: sha512-F3asv42UuXchdzt+xXqfW1OGlVBe+mxa2mqI0pg5yAHZPvFmY3Y6drSf/GQ1A86WgWEN9Kzh/WrgKa6iGcHXLg==}
+    minipass@7.1.2: {}
 
-  picomatch@2.3.1:
-    resolution: {integrity: sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==}
-    engines: {node: '>=8.6'}
+    minizlib@2.1.2:
+        dependencies:
+            minipass: 3.3.6
+            yallist: 4.0.0
 
-  picomatch@4.0.2:
-    resolution: {integrity: sha512-M7BAV6Rlcy5u+m6oPhAPFgJTzAioX/6B0DxyvDlo9l8+T3nLKbrczg2WLUyzd45L8RqfUMyGPzekbMvX2Ldkwg==}
-    engines: {node: '>=12'}
+    mixin-deep@1.3.2:
+        dependencies:
+            for-in: 1.0.2
+            is-extendable: 1.0.1
 
-  pkg-prebuilds@0.2.1:
-    resolution: {integrity: sha512-FdOlDiRqRL7i9aYzQflhGWCoiJf/8u6Qgzq48gKsRDYejtfjvGb1U5QGSzllcqpNg2a8Swx/9fMgtuVefwU+zw==}
-    engines: {node: '>= 14.15.0'}
-    hasBin: true
+    mkdirp@1.0.4: {}
 
-  plist@3.1.0:
-    resolution: {integrity: sha512-uysumyrvkUX0rX/dEVqt8gC3sTBzd4zoWfLeS29nb53imdaXVvLINYXTI2GNqzaMuvacNx4uJQ8+b3zXR0pkgQ==}
-    engines: {node: '>=10.4.0'}
+    moment@2.30.1: {}
 
-  possible-typed-array-names@1.0.0:
-    resolution: {integrity: sha512-d7Uw+eZoloe0EHDIYoe+bQ5WXnGMOpmiZFTuMWCwpjzzkL2nTjcKiAk4hh8TjnGye2TwWOk3UXucZ+3rbmBa8Q==}
-    engines: {node: '>= 0.4'}
+    ms@2.0.0: {}
 
-  prelude-ls@1.2.1:
-    resolution: {integrity: sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==}
-    engines: {node: '>= 0.8.0'}
+    ms@2.1.3: {}
 
-  prettier-linter-helpers@1.0.0:
-    resolution: {integrity: sha512-GbK2cP9nraSSUF9N2XwUwqfzlAFlMNYYl+ShE/V+H8a9uNl/oUqB1w2EL54Jh0OlyRSd8RfWYJ3coVS4TROP2w==}
-    engines: {node: '>=6.0.0'}
+    nanomatch@1.2.13:
+        dependencies:
+            arr-diff: 4.0.0
+            array-unique: 0.3.2
+            define-property: 2.0.2
+            extend-shallow: 3.0.2
+            fragment-cache: 0.2.1
+            is-windows: 1.0.2
+            kind-of: 6.0.3
+            object.pick: 1.3.0
+            regex-not: 1.0.2
+            snapdragon: 0.8.2
+            to-regex: 3.0.2
+        transitivePeerDependencies:
+            - supports-color
 
-  prettier@3.4.1:
-    resolution: {integrity: sha512-G+YdqtITVZmOJje6QkXQWzl3fSfMxFwm1tjTyo9exhkmWSqC4Yhd1+lug++IlR2mvRVAxEDDWYkQdeSztajqgg==}
-    engines: {node: '>=14'}
-    hasBin: true
+    natural-compare@1.4.0: {}
 
-  process-nextick-args@2.0.1:
-    resolution: {integrity: sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag==}
+    negotiator@0.6.4: {}
 
-  progress@2.0.3:
-    resolution: {integrity: sha512-7PiHtLll5LdnKIMw100I+8xJXR5gW2QwWYkT6iJva0bXitZKa/XMrSbdmg3r2Xnaidz9Qumd0VPaMrZlF9V9sA==}
-    engines: {node: '>=0.4.0'}
+    node-abi@3.71.0:
+        dependencies:
+            semver: 7.6.3
 
-  promise-inflight@1.0.1:
-    resolution: {integrity: sha512-6zWPyEOFaQBJYcGMHBKTKJ3u6TBsnMFOIZSa6ce1e/ZrrsOlnHRHbabMjLiBYKp+n44X9eUI6VUPaukCXHuG4g==}
-    peerDependencies:
-      bluebird: '*'
-    peerDependenciesMeta:
-      bluebird:
+    node-addon-api@1.7.2:
         optional: true
 
-  promise-retry@2.0.1:
-    resolution: {integrity: sha512-y+WKFlBR8BGXnsNlIHFGPZmyDf3DFMoLhaflAnyZgV6rG6xu+JwesTo2Q9R6XwYmtmwAFCkAk3e35jEdoeh/3g==}
-    engines: {node: '>=10'}
-
-  proxy-from-env@1.1.0:
-    resolution: {integrity: sha512-D+zkORCbA9f1tdWRK0RaCR3GPv50cMxcrz4X8k5LTSUD1Dkw47mKJEZQNunItRTkWwgtaUSo1RVFRIG9ZXiFYg==}
-
-  pump@3.0.2:
-    resolution: {integrity: sha512-tUPXtzlGM8FE3P0ZL6DVs/3P58k9nk8/jZeQCurTJylQA8qFYzHFfhBJkuqyE0FifOsQ0uKWekiZ5g8wtr28cw==}
-
-  punycode@2.3.1:
-    resolution: {integrity: sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==}
-    engines: {node: '>=6'}
-
-  queue-microtask@1.2.3:
-    resolution: {integrity: sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==}
-
-  quick-lru@5.1.1:
-    resolution: {integrity: sha512-WuyALRjWPDGtt/wzJiadO5AXY+8hZ80hVpe6MyivgraREW751X3SbhRvG3eLKOYN+8VEvqLcf3wdnt44Z4S4SA==}
-    engines: {node: '>=10'}
-
-  rc@1.2.8:
-    resolution: {integrity: sha512-y3bGgqKj3QBdxLbLkomlohkvsA8gdAiUQlSBJnBhfn+BPxg4bc62d8TcBW15wavDfgexCgccckhcZvywyQYPOw==}
-    hasBin: true
-
-  read-binary-file-arch@1.0.6:
-    resolution: {integrity: sha512-BNg9EN3DD3GsDXX7Aa8O4p92sryjkmzYYgmgTAc6CA4uGLEDzFfxOxugu21akOxpcXHiEgsYkC6nPsQvLLLmEg==}
-    hasBin: true
-
-  readable-stream@2.3.8:
-    resolution: {integrity: sha512-8p0AUk4XODgIewSi0l8Epjs+EVnWiK7NoDIEGU0HhE7+ZyY8D1IMY7odu5lRrFXGg71L15KG8QrPmum45RTtdA==}
-
-  readable-stream@3.6.2:
-    resolution: {integrity: sha512-9u/sniCrY3D5WdsERHzHE4G2YCXqoG5FTHUiCC4SIbr6XcLZBY05ya9EKjYek9O5xOAwjGq+1JdGBAS7Q9ScoA==}
-    engines: {node: '>= 6'}
-
-  readdir-glob@1.1.3:
-    resolution: {integrity: sha512-v05I2k7xN8zXvPD9N+z/uhXPaj0sUFCe2rcWZIpBsqxfP7xXFQ0tipAd/wjj1YxWyWtUS5IDJpOG82JKt2EAVA==}
-
-  reflect.getprototypeof@1.0.7:
-    resolution: {integrity: sha512-bMvFGIUKlc/eSfXNX+aZ+EL95/EgZzuwA0OBPTbZZDEJw/0AkentjMuM1oiRfwHrshqk4RzdgiTg5CcDalXN5g==}
-    engines: {node: '>= 0.4'}
-
-  regex-not@1.0.2:
-    resolution: {integrity: sha512-J6SDjUgDxQj5NusnOtdFxDwN/+HWykR8GELwctJ7mdqhcyy1xEc4SRFHUXvxTp661YaVKAjfRLZ9cCqS6tn32A==}
-    engines: {node: '>=0.10.0'}
-
-  regexp.prototype.flags@1.5.3:
-    resolution: {integrity: sha512-vqlC04+RQoFalODCbCumG2xIOvapzVMHwsyIGM/SIE8fRhFFsXeH8/QQ+s0T0kDAhKc4k30s73/0ydkHQz6HlQ==}
-    engines: {node: '>= 0.4'}
-
-  require-directory@2.1.1:
-    resolution: {integrity: sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==}
-    engines: {node: '>=0.10.0'}
-
-  resedit@1.7.2:
-    resolution: {integrity: sha512-vHjcY2MlAITJhC0eRD/Vv8Vlgmu9Sd3LX9zZvtGzU5ZImdTN3+d6e/4mnTyV8vEbyf1sgNIrWxhWlrys52OkEA==}
-    engines: {node: '>=12', npm: '>=6'}
-
-  resolve-alpn@1.2.1:
-    resolution: {integrity: sha512-0a1F4l73/ZFZOakJnQ3FvkJ2+gSTQWz/r2KE5OdDY0TxPm5h4GkqkWWfM47T7HsbnOtcJVEF4epCVy6u7Q3K+g==}
+    node-addon-api@8.3.0:
+        optional: true
 
-  resolve-dir@1.0.1:
-    resolution: {integrity: sha512-R7uiTjECzvOsWSfdM0QKFNBVFcK27aHOUwdvK53BcW8zqnGdYp0Fbj82cy54+2A4P2tFM22J5kRfe1R+lM/1yg==}
-    engines: {node: '>=0.10.0'}
+    node-api-headers@1.4.0:
+        optional: true
 
-  resolve-from@4.0.0:
-    resolution: {integrity: sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==}
-    engines: {node: '>=4'}
+    node-api-version@0.2.0:
+        dependencies:
+            semver: 7.6.3
+
+    node-gyp@9.4.1:
+        dependencies:
+            env-paths: 2.2.1
+            exponential-backoff: 3.1.1
+            glob: 7.2.3
+            graceful-fs: 4.2.11
+            make-fetch-happen: 10.2.1
+            nopt: 6.0.0
+            npmlog: 6.0.2
+            rimraf: 3.0.2
+            semver: 7.6.3
+            tar: 6.2.1
+            which: 2.0.2
+        transitivePeerDependencies:
+            - bluebird
+            - supports-color
+
+    nopt@6.0.0:
+        dependencies:
+            abbrev: 1.1.1
+
+    normalize-path@3.0.0: {}
+
+    normalize-url@6.1.0: {}
+
+    npmlog@6.0.2:
+        dependencies:
+            are-we-there-yet: 3.0.1
+            console-control-strings: 1.1.0
+            gauge: 4.0.4
+            set-blocking: 2.0.0
+
+    object-copy@0.1.0:
+        dependencies:
+            copy-descriptor: 0.1.1
+            define-property: 0.2.5
+            kind-of: 3.2.2
+
+    object-inspect@1.13.3: {}
+
+    object-keys@1.1.1: {}
+
+    object-visit@1.0.1:
+        dependencies:
+            isobject: 3.0.1
+
+    object.assign@4.1.5:
+        dependencies:
+            call-bind: 1.0.7
+            define-properties: 1.2.1
+            has-symbols: 1.1.0
+            object-keys: 1.1.1
+
+    object.fromentries@2.0.8:
+        dependencies:
+            call-bind: 1.0.7
+            define-properties: 1.2.1
+            es-abstract: 1.23.5
+            es-object-atoms: 1.0.0
+
+    object.groupby@1.0.3:
+        dependencies:
+            call-bind: 1.0.7
+            define-properties: 1.2.1
+            es-abstract: 1.23.5
+
+    object.pick@1.3.0:
+        dependencies:
+            isobject: 3.0.1
+
+    object.values@1.2.0:
+        dependencies:
+            call-bind: 1.0.7
+            define-properties: 1.2.1
+            es-object-atoms: 1.0.0
+
+    once@1.4.0:
+        dependencies:
+            wrappy: 1.0.2
+
+    onetime@5.1.2:
+        dependencies:
+            mimic-fn: 2.1.0
+
+    optionator@0.9.4:
+        dependencies:
+            deep-is: 0.1.4
+            fast-levenshtein: 2.0.6
+            levn: 0.4.1
+            prelude-ls: 1.2.1
+            type-check: 0.4.0
+            word-wrap: 1.2.5
+
+    ora@5.4.1:
+        dependencies:
+            bl: 4.1.0
+            chalk: 4.1.2
+            cli-cursor: 3.1.0
+            cli-spinners: 2.9.2
+            is-interactive: 1.0.0
+            is-unicode-supported: 0.1.0
+            log-symbols: 4.1.0
+            strip-ansi: 6.0.1
+            wcwidth: 1.0.1
+
+    p-cancelable@2.1.1: {}
+
+    p-limit@3.1.0:
+        dependencies:
+            yocto-queue: 0.1.0
 
-  resolve-pkg-maps@1.0.0:
-    resolution: {integrity: sha512-seS2Tj26TBVOC2NIc2rOe2y2ZO7efxITtLZcGSOnHHNOQ7CkiUBfw0Iw2ck6xkIhPwLhKNLS8BO+hEpngQlqzw==}
+    p-locate@5.0.0:
+        dependencies:
+            p-limit: 3.1.0
 
-  resolve-url@0.2.1:
-    resolution: {integrity: sha512-ZuF55hVUQaaczgOIwqWzkEcEidmlD/xl44x1UZnhOXcYuFN2S6+rcxpG+C1N3So0wvNI3DmJICUFfu2SxhBmvg==}
-    deprecated: https://github.com/lydell/resolve-url#deprecated
+    p-map@4.0.0:
+        dependencies:
+            aggregate-error: 3.1.0
 
-  resolve@1.22.8:
-    resolution: {integrity: sha512-oKWePCxqpd6FlLvGV1VU0x7bkPmmCNolxzjMf4NczoDnQcIWrAF+cPtZn5i6n+RfD2d9i0tzpKnG6Yk168yIyw==}
-    hasBin: true
+    package-json-from-dist@1.0.1: {}
 
-  responselike@2.0.1:
-    resolution: {integrity: sha512-4gl03wn3hj1HP3yzgdI7d3lCkF95F21Pz4BPGvKHinyQzALR5CapwC8yIi0Rh58DEMQ/SguC03wFj2k0M/mHhw==}
+    parent-module@1.0.1:
+        dependencies:
+            callsites: 3.1.0
 
-  restore-cursor@3.1.0:
-    resolution: {integrity: sha512-l+sSefzHpj5qimhFSE5a8nufZYAM3sBSVMAPtYkmC+4EH2anSGaEMXSD0izRQbu9nfyQ9y5JrVmp7E8oZrUjvA==}
-    engines: {node: '>=8'}
+    parse-passwd@1.0.0: {}
 
-  ret@0.1.15:
-    resolution: {integrity: sha512-TTlYpa+OL+vMMNG24xSlQGEJ3B/RzEfUlLct7b5G/ytav+wPrplCpVMFuwzXbkecJrb6IYo1iFb0S9v37754mg==}
-    engines: {node: '>=0.12'}
+    pascalcase@0.1.1: {}
 
-  retry@0.12.0:
-    resolution: {integrity: sha512-9LkiTwjUh6rT555DtE9rTX+BKByPfrMzEAtnlEtdEwr3Nkffwiihqe2bWADg+OQRjt9gl6ICdmB/ZFDCGAtSow==}
-    engines: {node: '>= 4'}
+    path-exists@4.0.0: {}
 
-  reusify@1.0.4:
-    resolution: {integrity: sha512-U9nH88a3fc/ekCF1l0/UP1IosiuIjyTh7hBvXVMHYgVcfGvt897Xguj2UOLDeI5BG2m7/uwyaLVT6fbtCwTyzw==}
-    engines: {iojs: '>=1.0.0', node: '>=0.10.0'}
+    path-is-absolute@1.0.1: {}
 
-  rimraf@3.0.2:
-    resolution: {integrity: sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==}
-    deprecated: Rimraf versions prior to v4 are no longer supported
-    hasBin: true
+    path-key@3.1.1: {}
 
-  roarr@2.15.4:
-    resolution: {integrity: sha512-CHhPh+UNHD2GTXNYhPWLnU8ONHdI+5DI+4EYIAOaiD63rHeYlZvyh8P+in5999TTSFgUYuKUAjzRI4mdh/p+2A==}
-    engines: {node: '>=8.0'}
+    path-parse@1.0.7: {}
 
-  run-parallel@1.2.0:
-    resolution: {integrity: sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==}
+    path-scurry@1.11.1:
+        dependencies:
+            lru-cache: 10.4.3
+            minipass: 7.1.2
 
-  safe-array-concat@1.1.2:
-    resolution: {integrity: sha512-vj6RsCsWBCf19jIeHEfkRMw8DPiBb+DMXklQ/1SGDHOMlHdPUkZXFQ2YdplS23zESTijAcurb1aSgJA3AgMu1Q==}
-    engines: {node: '>=0.4'}
+    pe-library@0.4.1: {}
 
-  safe-buffer@5.1.2:
-    resolution: {integrity: sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==}
+    pend@1.2.0: {}
 
-  safe-buffer@5.2.1:
-    resolution: {integrity: sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==}
+    picomatch@2.3.1: {}
 
-  safe-regex-test@1.0.3:
-    resolution: {integrity: sha512-CdASjNJPvRa7roO6Ra/gLYBTzYzzPyyBXxIMdGW3USQLyjWEls2RgW5UBTXaQVp+OrpeCK3bLem8smtmheoRuw==}
-    engines: {node: '>= 0.4'}
+    picomatch@4.0.2: {}
 
-  safe-regex@1.1.0:
-    resolution: {integrity: sha512-aJXcif4xnaNUzvUuC5gcb46oTS7zvg4jpMTnuqtrEPlR3vFr4pxtdTwaF1Qs3Enjn9HK+ZlwQui+a7z0SywIzg==}
+    pkg-prebuilds@0.2.1:
+        dependencies:
+            yargs: 17.7.2
+        optional: true
 
-  safer-buffer@2.1.2:
-    resolution: {integrity: sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==}
+    plist@3.1.0:
+        dependencies:
+            "@xmldom/xmldom": 0.8.10
+            base64-js: 1.5.1
+            xmlbuilder: 15.1.1
 
-  sanitize-filename@1.6.3:
-    resolution: {integrity: sha512-y/52Mcy7aw3gRm7IrcGDFx/bCk4AhRh2eI9luHOQM86nZsqwiRkkq2GekHXBBD+SmPidc8i2PqtYZl+pWJ8Oeg==}
+    possible-typed-array-names@1.0.0: {}
 
-  sax@1.4.1:
-    resolution: {integrity: sha512-+aWOz7yVScEGoKNd4PA10LZ8sk0A/z5+nXQG5giUO5rprX9jgYsTdov9qCchZiPIZezbZH+jRut8nPodFAX4Jg==}
+    prelude-ls@1.2.1: {}
 
-  semver-compare@1.0.0:
-    resolution: {integrity: sha512-YM3/ITh2MJ5MtzaM429anh+x2jiLVjqILF4m4oyQB18W7Ggea7BfqdH/wGMK7dDiMghv/6WG7znWMwUDzJiXow==}
+    prettier-linter-helpers@1.0.0:
+        dependencies:
+            fast-diff: 1.3.0
 
-  semver@6.3.1:
-    resolution: {integrity: sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==}
-    hasBin: true
+    prettier@3.4.1: {}
 
-  semver@7.6.3:
-    resolution: {integrity: sha512-oVekP1cKtI+CTDvHWYFUcMtsK/00wmAEfyqKfNdARm8u1wNVhSgaX7A8d4UuIlUI5e84iEwOhs7ZPYRmzU9U6A==}
-    engines: {node: '>=10'}
-    hasBin: true
+    process-nextick-args@2.0.1: {}
 
-  serialize-error@7.0.1:
-    resolution: {integrity: sha512-8I8TjW5KMOKsZQTvoxjuSIa7foAwPWGOts+6o7sgjz41/qMD9VQHEDxi6PBvK2l0MXUmqZyNpUK+T2tQaaElvw==}
-    engines: {node: '>=10'}
+    progress@2.0.3: {}
 
-  set-blocking@2.0.0:
-    resolution: {integrity: sha512-KiKBS8AnWGEyLzofFfmvKwpdPzqiy16LvQfK3yv/fVH7Bj13/wl3JSR1J+rfgRE9q7xUJK4qvgS8raSOeLUehw==}
+    promise-inflight@1.0.1: {}
 
-  set-function-length@1.2.2:
-    resolution: {integrity: sha512-pgRc4hJ4/sNjWCSS9AmnS40x3bNMDTknHgL5UaMBTMyJnU90EgWh1Rz+MC9eFu4BuN/UwZjKQuY/1v3rM7HMfg==}
-    engines: {node: '>= 0.4'}
+    promise-retry@2.0.1:
+        dependencies:
+            err-code: 2.0.3
+            retry: 0.12.0
 
-  set-function-name@2.0.2:
-    resolution: {integrity: sha512-7PGFlmtwsEADb0WYyvCMa1t+yke6daIG4Wirafur5kcf+MhUnPms1UeR0CKQdTZD81yESwMHbtn+TR+dMviakQ==}
-    engines: {node: '>= 0.4'}
+    proxy-from-env@1.1.0:
+        optional: true
 
-  set-value@2.0.1:
-    resolution: {integrity: sha512-JxHc1weCN68wRY0fhCoXpyK55m/XPHafOmK4UWD7m2CI14GMcFypt4w/0+NV5f/ZMby2F6S2wwA7fgynh9gWSw==}
-    engines: {node: '>=0.10.0'}
+    pump@3.0.2:
+        dependencies:
+            end-of-stream: 1.4.4
+            once: 1.4.0
 
-  shebang-command@2.0.0:
-    resolution: {integrity: sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==}
-    engines: {node: '>=8'}
+    punycode@2.3.1: {}
 
-  shebang-regex@3.0.0:
-    resolution: {integrity: sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==}
-    engines: {node: '>=8'}
+    queue-microtask@1.2.3: {}
 
-  side-channel@1.0.6:
-    resolution: {integrity: sha512-fDW/EZ6Q9RiO8eFG8Hj+7u/oW+XrPTIChwCOM2+th2A6OblDtYYIpve9m+KvI9Z4C9qSEXlaGR6bTEYHReuglA==}
-    engines: {node: '>= 0.4'}
+    quick-lru@5.1.1: {}
 
-  signal-exit@3.0.7:
-    resolution: {integrity: sha512-wnD2ZE+l+SPC/uoS0vXeE9L1+0wuaMqKlfz9AMUo38JsyLSBWSFcHR1Rri62LZc12vLr1gb3jl7iwQhgwpAbGQ==}
+    rc@1.2.8:
+        dependencies:
+            deep-extend: 0.6.0
+            ini: 1.3.8
+            minimist: 1.2.8
+            strip-json-comments: 2.0.1
+        optional: true
 
-  signal-exit@4.1.0:
-    resolution: {integrity: sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==}
-    engines: {node: '>=14'}
+    read-binary-file-arch@1.0.6:
+        dependencies:
+            debug: 4.3.7
+        transitivePeerDependencies:
+            - supports-color
+
+    readable-stream@2.3.8:
+        dependencies:
+            core-util-is: 1.0.3
+            inherits: 2.0.4
+            isarray: 1.0.0
+            process-nextick-args: 2.0.1
+            safe-buffer: 5.1.2
+            string_decoder: 1.1.1
+            util-deprecate: 1.0.2
+
+    readable-stream@3.6.2:
+        dependencies:
+            inherits: 2.0.4
+            string_decoder: 1.3.0
+            util-deprecate: 1.0.2
+
+    readdir-glob@1.1.3:
+        dependencies:
+            minimatch: 5.1.6
+
+    reflect.getprototypeof@1.0.7:
+        dependencies:
+            call-bind: 1.0.7
+            define-properties: 1.2.1
+            es-abstract: 1.23.5
+            es-errors: 1.3.0
+            get-intrinsic: 1.2.4
+            gopd: 1.1.0
+            which-builtin-type: 1.2.0
+
+    regex-not@1.0.2:
+        dependencies:
+            extend-shallow: 3.0.2
+            safe-regex: 1.1.0
+
+    regexp.prototype.flags@1.5.3:
+        dependencies:
+            call-bind: 1.0.7
+            define-properties: 1.2.1
+            es-errors: 1.3.0
+            set-function-name: 2.0.2
+
+    require-directory@2.1.1: {}
+
+    resedit@1.7.2:
+        dependencies:
+            pe-library: 0.4.1
+
+    resolve-alpn@1.2.1: {}
+
+    resolve-dir@1.0.1:
+        dependencies:
+            expand-tilde: 2.0.2
+            global-modules: 1.0.0
+
+    resolve-from@4.0.0: {}
+
+    resolve-pkg-maps@1.0.0: {}
+
+    resolve-url@0.2.1: {}
+
+    resolve@1.22.8:
+        dependencies:
+            is-core-module: 2.15.1
+            path-parse: 1.0.7
+            supports-preserve-symlinks-flag: 1.0.0
+
+    responselike@2.0.1:
+        dependencies:
+            lowercase-keys: 2.0.0
+
+    restore-cursor@3.1.0:
+        dependencies:
+            onetime: 5.1.2
+            signal-exit: 3.0.7
+
+    ret@0.1.15: {}
+
+    retry@0.12.0: {}
+
+    reusify@1.0.4: {}
+
+    rimraf@3.0.2:
+        dependencies:
+            glob: 7.2.3
+
+    roarr@2.15.4:
+        dependencies:
+            boolean: 3.2.0
+            detect-node: 2.1.0
+            globalthis: 1.0.4
+            json-stringify-safe: 5.0.1
+            semver-compare: 1.0.0
+            sprintf-js: 1.1.3
+        optional: true
 
-  simple-update-notifier@2.0.0:
-    resolution: {integrity: sha512-a2B9Y0KlNXl9u/vsW6sTIu9vGEpfKu2wRV6l1H3XEas/0gUIzGzBoP/IouTcUQbm9JWZLH3COxyn03TYlFax6w==}
-    engines: {node: '>=10'}
+    run-parallel@1.2.0:
+        dependencies:
+            queue-microtask: 1.2.3
 
-  slice-ansi@3.0.0:
-    resolution: {integrity: sha512-pSyv7bSTC7ig9Dcgbw9AuRNUb5k5V6oDudjZoMBSr13qpLBG7tB+zgCkARjq7xIUgdz5P1Qe8u+rSGdouOOIyQ==}
-    engines: {node: '>=8'}
+    safe-array-concat@1.1.2:
+        dependencies:
+            call-bind: 1.0.7
+            get-intrinsic: 1.2.4
+            has-symbols: 1.1.0
+            isarray: 2.0.5
 
-  smart-buffer@4.2.0:
-    resolution: {integrity: sha512-94hK0Hh8rPqQl2xXc3HsaBoOXKV20MToPkcXvwbISWLEs+64sBq5kFgn2kJDHb1Pry9yrP0dxrCI9RRci7RXKg==}
-    engines: {node: '>= 6.0.0', npm: '>= 3.0.0'}
+    safe-buffer@5.1.2: {}
 
-  snapdragon@0.8.2:
-    resolution: {integrity: sha512-FtyOnWN/wCHTVXOMwvSv26d+ko5vWlIDD6zoUJ7LW8vh+ZBC8QdljveRP+crNrtBwioEUWy/4dMtbBjA4ioNlg==}
-    engines: {node: '>=0.10.0'}
+    safe-buffer@5.2.1: {}
 
-  socks-proxy-agent@7.0.0:
-    resolution: {integrity: sha512-Fgl0YPZ902wEsAyiQ+idGd1A7rSFx/ayC1CQVMw5P+EQx2V0SgpGtf6OKFhVjPflPUl9YMmEOnmfjCdMUsygww==}
-    engines: {node: '>= 10'}
+    safe-regex-test@1.0.3:
+        dependencies:
+            call-bind: 1.0.7
+            es-errors: 1.3.0
+            is-regex: 1.2.0
 
-  socks@2.8.3:
-    resolution: {integrity: sha512-l5x7VUUWbjVFbafGLxPWkYsHIhEvmF85tbIeFZWc8ZPtoMyybuEhL7Jye/ooC4/d48FgOjSJXgsF/AJPYCW8Zw==}
-    engines: {node: '>= 10.0.0', npm: '>= 3.0.0'}
+    safe-regex@1.1.0:
+        dependencies:
+            ret: 0.1.15
 
-  source-map-resolve@0.5.3:
-    resolution: {integrity: sha512-Htz+RnsXWk5+P2slx5Jh3Q66vhQj1Cllm0zvnaY98+NFx+Dv2CF/f5O/t8x+KaNdrdIAsruNzoh/KpialbqAnw==}
-    deprecated: See https://github.com/lydell/source-map-resolve#deprecated
+    safer-buffer@2.1.2: {}
 
-  source-map-support@0.5.21:
-    resolution: {integrity: sha512-uBHU3L3czsIyYXKX88fdrGovxdSCoTGDRZ6SYXtSRxLZUzHg5P/66Ht6uoUlHu9EZod+inXhKo3qQgwXUT/y1w==}
+    sanitize-filename@1.6.3:
+        dependencies:
+            truncate-utf8-bytes: 1.0.2
 
-  source-map-url@0.4.1:
-    resolution: {integrity: sha512-cPiFOTLUKvJFIg4SKVScy4ilPPW6rFgMgfuZJPNoDuMs3nC1HbMUycBoJw77xFIp6z1UJQJOfx6C9GMH80DiTw==}
-    deprecated: See https://github.com/lydell/source-map-url#deprecated
+    sax@1.4.1: {}
 
-  source-map@0.5.7:
-    resolution: {integrity: sha512-LbrmJOMUSdEVxIKvdcJzQC+nQhe8FUZQTXQy6+I75skNgn3OoQ0DZA8YnFa7gp8tqtL3KPf1kmo0R5DoApeSGQ==}
-    engines: {node: '>=0.10.0'}
+    semver-compare@1.0.0:
+        optional: true
 
-  source-map@0.6.1:
-    resolution: {integrity: sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==}
-    engines: {node: '>=0.10.0'}
+    semver@6.3.1: {}
 
-  split-string@3.1.0:
-    resolution: {integrity: sha512-NzNVhJDYpwceVVii8/Hu6DKfD2G+NrQHlS/V/qgv763EYudVwEcMQNxd2lh+0VrUByXN/oJkl5grOhYWvQUYiw==}
-    engines: {node: '>=0.10.0'}
+    semver@7.6.3: {}
 
-  sprintf-js@1.1.3:
-    resolution: {integrity: sha512-Oo+0REFV59/rz3gfJNKQiBlwfHaSESl1pcGyABQsnnIfWOFt6JNj5gCog2U6MLZ//IGYD+nA8nI+mTShREReaA==}
+    serialize-error@7.0.1:
+        dependencies:
+            type-fest: 0.13.1
+        optional: true
 
-  ssri@9.0.1:
-    resolution: {integrity: sha512-o57Wcn66jMQvfHG1FlYbWeZWW/dHZhJXjpIcTfXldXEk5nz5lStPo3mK0OJQfGR3RbZUlbISexbljkJzuEj/8Q==}
-    engines: {node: ^12.13.0 || ^14.15.0 || >=16.0.0}
+    set-blocking@2.0.0: {}
+
+    set-function-length@1.2.2:
+        dependencies:
+            define-data-property: 1.1.4
+            es-errors: 1.3.0
+            function-bind: 1.1.2
+            get-intrinsic: 1.2.4
+            gopd: 1.1.0
+            has-property-descriptors: 1.0.2
+
+    set-function-name@2.0.2:
+        dependencies:
+            define-data-property: 1.1.4
+            es-errors: 1.3.0
+            functions-have-names: 1.2.3
+            has-property-descriptors: 1.0.2
+
+    set-value@2.0.1:
+        dependencies:
+            extend-shallow: 2.0.1
+            is-extendable: 0.1.1
+            is-plain-object: 2.0.4
+            split-string: 3.1.0
+
+    shebang-command@2.0.0:
+        dependencies:
+            shebang-regex: 3.0.0
+
+    shebang-regex@3.0.0: {}
+
+    side-channel@1.0.6:
+        dependencies:
+            call-bind: 1.0.7
+            es-errors: 1.3.0
+            get-intrinsic: 1.2.4
+            object-inspect: 1.13.3
+
+    signal-exit@3.0.7: {}
+
+    signal-exit@4.1.0: {}
+
+    simple-update-notifier@2.0.0:
+        dependencies:
+            semver: 7.6.3
+
+    slice-ansi@3.0.0:
+        dependencies:
+            ansi-styles: 4.3.0
+            astral-regex: 2.0.0
+            is-fullwidth-code-point: 3.0.0
+        optional: true
 
-  standalone-electron-types@1.0.0:
-    resolution: {integrity: sha512-0HOi/tlTz3mjWhsAz4uRbpQcHMZ+ifj1JzWW9nugykOHClBBG77ps8QinrzX1eow4Iw2pnC+RFaSYRgufF4BOg==}
+    smart-buffer@4.2.0: {}
+
+    snapdragon@0.8.2:
+        dependencies:
+            base: 0.11.2
+            debug: 2.6.9
+            define-property: 0.2.5
+            extend-shallow: 2.0.1
+            map-cache: 0.2.2
+            source-map: 0.5.7
+            source-map-resolve: 0.5.3
+            use: 3.1.1
+        transitivePeerDependencies:
+            - supports-color
+
+    socks-proxy-agent@7.0.0:
+        dependencies:
+            agent-base: 6.0.2
+            debug: 4.3.7
+            socks: 2.8.3
+        transitivePeerDependencies:
+            - supports-color
+
+    socks@2.8.3:
+        dependencies:
+            ip-address: 9.0.5
+            smart-buffer: 4.2.0
+
+    source-map-resolve@0.5.3:
+        dependencies:
+            atob: 2.1.2
+            decode-uri-component: 0.2.2
+            resolve-url: 0.2.1
+            source-map-url: 0.4.1
+            urix: 0.1.0
+
+    source-map-support@0.5.21:
+        dependencies:
+            buffer-from: 1.1.2
+            source-map: 0.6.1
+
+    source-map-url@0.4.1: {}
+
+    source-map@0.5.7: {}
+
+    source-map@0.6.1: {}
+
+    split-string@3.1.0:
+        dependencies:
+            extend-shallow: 3.0.2
+
+    sprintf-js@1.1.3: {}
+
+    ssri@9.0.1:
+        dependencies:
+            minipass: 3.3.6
+
+    standalone-electron-types@1.0.0:
+        dependencies:
+            "@types/node": 18.19.67
+
+    stat-mode@1.0.0: {}
+
+    static-extend@0.1.2:
+        dependencies:
+            define-property: 0.2.5
+            object-copy: 0.1.0
+
+    string-width@4.2.3:
+        dependencies:
+            emoji-regex: 8.0.0
+            is-fullwidth-code-point: 3.0.0
+            strip-ansi: 6.0.1
+
+    string-width@5.1.2:
+        dependencies:
+            eastasianwidth: 0.2.0
+            emoji-regex: 9.2.2
+            strip-ansi: 7.1.0
+
+    string.prototype.trim@1.2.9:
+        dependencies:
+            call-bind: 1.0.7
+            define-properties: 1.2.1
+            es-abstract: 1.23.5
+            es-object-atoms: 1.0.0
+
+    string.prototype.trimend@1.0.8:
+        dependencies:
+            call-bind: 1.0.7
+            define-properties: 1.2.1
+            es-object-atoms: 1.0.0
+
+    string.prototype.trimstart@1.0.8:
+        dependencies:
+            call-bind: 1.0.7
+            define-properties: 1.2.1
+            es-object-atoms: 1.0.0
+
+    string_decoder@1.1.1:
+        dependencies:
+            safe-buffer: 5.1.2
+
+    string_decoder@1.3.0:
+        dependencies:
+            safe-buffer: 5.2.1
+
+    strip-ansi@6.0.1:
+        dependencies:
+            ansi-regex: 5.0.1
+
+    strip-ansi@7.1.0:
+        dependencies:
+            ansi-regex: 6.1.0
+
+    strip-bom@3.0.0: {}
+
+    strip-json-comments@2.0.1:
+        optional: true
 
-  stat-mode@1.0.0:
-    resolution: {integrity: sha512-jH9EhtKIjuXZ2cWxmXS8ZP80XyC3iasQxMDV8jzhNJpfDb7VbQLVW4Wvsxz9QZvzV+G4YoSfBUVKDOyxLzi/sg==}
-    engines: {node: '>= 6'}
+    strip-json-comments@3.1.1: {}
+
+    sumchecker@3.0.1:
+        dependencies:
+            debug: 4.3.7
+        transitivePeerDependencies:
+            - supports-color
+
+    supports-color@7.2.0:
+        dependencies:
+            has-flag: 4.0.0
+
+    supports-preserve-symlinks-flag@1.0.0: {}
+
+    synckit@0.9.2:
+        dependencies:
+            "@pkgr/core": 0.1.1
+            tslib: 2.8.1
+
+    tar-stream@2.2.0:
+        dependencies:
+            bl: 4.1.0
+            end-of-stream: 1.4.4
+            fs-constants: 1.0.0
+            inherits: 2.0.4
+            readable-stream: 3.6.2
+
+    tar@6.2.1:
+        dependencies:
+            chownr: 2.0.0
+            fs-minipass: 2.1.0
+            minipass: 5.0.0
+            minizlib: 2.1.2
+            mkdirp: 1.0.4
+            yallist: 4.0.0
+
+    temp-file@3.4.0:
+        dependencies:
+            async-exit-hook: 2.0.1
+            fs-extra: 10.1.0
+
+    tiny-typed-emitter@2.1.0: {}
+
+    tmp-promise@3.0.3:
+        dependencies:
+            tmp: 0.2.3
+
+    tmp@0.2.3: {}
+
+    to-object-path@0.3.0:
+        dependencies:
+            kind-of: 3.2.2
+
+    to-regex-range@5.0.1:
+        dependencies:
+            is-number: 7.0.0
+
+    to-regex@3.0.2:
+        dependencies:
+            define-property: 2.0.2
+            extend-shallow: 3.0.2
+            regex-not: 1.0.2
+            safe-regex: 1.1.0
+
+    truncate-utf8-bytes@1.0.2:
+        dependencies:
+            utf8-byte-length: 1.0.5
+
+    ts-api-utils@1.4.3(typescript@5.7.2):
+        dependencies:
+            typescript: 5.7.2
+
+    tsconfig-paths@3.15.0:
+        dependencies:
+            "@types/json5": 0.0.29
+            json5: 1.0.2
+            minimist: 1.2.8
+            strip-bom: 3.0.0
+
+    tslib@2.8.1: {}
+
+    tsx@4.19.2:
+        dependencies:
+            esbuild: 0.23.1
+            get-tsconfig: 4.8.1
+        optionalDependencies:
+            fsevents: 2.3.3
+
+    type-check@0.4.0:
+        dependencies:
+            prelude-ls: 1.2.1
+
+    type-fest@0.13.1:
+        optional: true
 
-  static-extend@0.1.2:
-    resolution: {integrity: sha512-72E9+uLc27Mt718pMHt9VMNiAL4LMsmDbBva8mxWUCkT07fSzEGMYUCk0XWY6lp0j6RBAG4cJ3mWuZv2OE3s0g==}
-    engines: {node: '>=0.10.0'}
+    type-fest@3.13.1: {}
+
+    type-fest@4.30.0: {}
+
+    typed-array-buffer@1.0.2:
+        dependencies:
+            call-bind: 1.0.7
+            es-errors: 1.3.0
+            is-typed-array: 1.1.13
+
+    typed-array-byte-length@1.0.1:
+        dependencies:
+            call-bind: 1.0.7
+            for-each: 0.3.3
+            gopd: 1.1.0
+            has-proto: 1.1.0
+            is-typed-array: 1.1.13
+
+    typed-array-byte-offset@1.0.3:
+        dependencies:
+            available-typed-arrays: 1.0.7
+            call-bind: 1.0.7
+            for-each: 0.3.3
+            gopd: 1.1.0
+            has-proto: 1.1.0
+            is-typed-array: 1.1.13
+            reflect.getprototypeof: 1.0.7
+
+    typed-array-length@1.0.7:
+        dependencies:
+            call-bind: 1.0.7
+            for-each: 0.3.3
+            gopd: 1.1.0
+            is-typed-array: 1.1.13
+            possible-typed-array-names: 1.0.0
+            reflect.getprototypeof: 1.0.7
+
+    typescript-eslint@8.17.0(eslint@9.16.0)(typescript@5.7.2):
+        dependencies:
+            "@typescript-eslint/eslint-plugin": 8.17.0(@typescript-eslint/parser@8.17.0(eslint@9.16.0)(typescript@5.7.2))(eslint@9.16.0)(typescript@5.7.2)
+            "@typescript-eslint/parser": 8.17.0(eslint@9.16.0)(typescript@5.7.2)
+            "@typescript-eslint/utils": 8.17.0(eslint@9.16.0)(typescript@5.7.2)
+            eslint: 9.16.0
+        optionalDependencies:
+            typescript: 5.7.2
+        transitivePeerDependencies:
+            - supports-color
+
+    typescript@5.7.2: {}
+
+    unbox-primitive@1.0.2:
+        dependencies:
+            call-bind: 1.0.7
+            has-bigints: 1.0.2
+            has-symbols: 1.1.0
+            which-boxed-primitive: 1.1.0
+
+    undici-types@5.26.5: {}
+
+    undici-types@6.19.8: {}
+
+    undici-types@6.20.0: {}
+
+    union-value@1.0.1:
+        dependencies:
+            arr-union: 3.1.0
+            get-value: 2.0.6
+            is-extendable: 0.1.1
+            set-value: 2.0.1
+
+    unique-filename@2.0.1:
+        dependencies:
+            unique-slug: 3.0.0
+
+    unique-slug@3.0.0:
+        dependencies:
+            imurmurhash: 0.1.4
+
+    universalify@0.1.2: {}
+
+    universalify@2.0.1: {}
+
+    unset-value@1.0.0:
+        dependencies:
+            has-value: 0.3.1
+            isobject: 3.0.1
+
+    uri-js@4.4.1:
+        dependencies:
+            punycode: 2.3.1
+
+    urix@0.1.0: {}
+
+    url-join@4.0.1:
+        optional: true
 
-  string-width@4.2.3:
-    resolution: {integrity: sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==}
-    engines: {node: '>=8'}
+    use@3.1.1: {}
 
-  string-width@5.1.2:
-    resolution: {integrity: sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==}
-    engines: {node: '>=12'}
+    utf8-byte-length@1.0.5: {}
 
-  string.prototype.trim@1.2.9:
-    resolution: {integrity: sha512-klHuCNxiMZ8MlsOihJhJEBJAiMVqU3Z2nEXWfWnIqjN0gEFS9J9+IxKozWWtQGcgoa1WUZzLjKPTr4ZHNFTFxw==}
-    engines: {node: '>= 0.4'}
+    util-deprecate@1.0.2: {}
 
-  string.prototype.trimend@1.0.8:
-    resolution: {integrity: sha512-p73uL5VCHCO2BZZ6krwwQE3kCzM7NKmis8S//xEC6fQonchbum4eP6kR4DLEjQFO3Wnj3Fuo8NM0kOSjVdHjZQ==}
+    venbind@0.0.2: {}
 
-  string.prototype.trimstart@1.0.8:
-    resolution: {integrity: sha512-UXSH262CSZY1tfu3G3Secr6uGLCFVPMhIqHjlgCUtCCcgihYc/xKs9djMTMUOb2j1mVSeU8EU6NWc/iQKU6Gfg==}
-    engines: {node: '>= 0.4'}
-
-  string_decoder@1.1.1:
-    resolution: {integrity: sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==}
-
-  string_decoder@1.3.0:
-    resolution: {integrity: sha512-hkRX8U1WjJFd8LsDJ2yQ/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup/wKeA==}
-
-  strip-ansi@6.0.1:
-    resolution: {integrity: sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==}
-    engines: {node: '>=8'}
-
-  strip-ansi@7.1.0:
-    resolution: {integrity: sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==}
-    engines: {node: '>=12'}
-
-  strip-bom@3.0.0:
-    resolution: {integrity: sha512-vavAMRXOgBVNF6nyEEmL3DBK19iRpDcoIwW+swQ+CbGiu7lju6t+JklA1MHweoWtadgt4ISVUsXLyDq34ddcwA==}
-    engines: {node: '>=4'}
-
-  strip-json-comments@2.0.1:
-    resolution: {integrity: sha512-4gB8na07fecVVkOI6Rs4e7T6NOTki5EmL7TUduTs6bu3EdnSycntVJ4re8kgZA+wx9IueI2Y11bfbgwtzuE0KQ==}
-    engines: {node: '>=0.10.0'}
-
-  strip-json-comments@3.1.1:
-    resolution: {integrity: sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==}
-    engines: {node: '>=8'}
-
-  sumchecker@3.0.1:
-    resolution: {integrity: sha512-MvjXzkz/BOfyVDkG0oFOtBxHX2u3gKbMHIF/dXblZsgD3BWOFLmHovIpZY7BykJdAjcqRCBi1WYBNdEC9yI7vg==}
-    engines: {node: '>= 8.0'}
-
-  supports-color@7.2.0:
-    resolution: {integrity: sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==}
-    engines: {node: '>=8'}
-
-  supports-preserve-symlinks-flag@1.0.0:
-    resolution: {integrity: sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==}
-    engines: {node: '>= 0.4'}
-
-  synckit@0.9.2:
-    resolution: {integrity: sha512-vrozgXDQwYO72vHjUb/HnFbQx1exDjoKzqx23aXEg2a9VIg2TSFZ8FmeZpTjUCFMYw7mpX4BE2SFu8wI7asYsw==}
-    engines: {node: ^14.18.0 || >=16.0.0}
-
-  tar-stream@2.2.0:
-    resolution: {integrity: sha512-ujeqbceABgwMZxEJnk2HDY2DlnUZ+9oEcb1KzTVfYHio0UE6dG71n60d8D2I4qNvleWrrXpmjpt7vZeF1LnMZQ==}
-    engines: {node: '>=6'}
-
-  tar@6.2.1:
-    resolution: {integrity: sha512-DZ4yORTwrbTj/7MZYq2w+/ZFdI6OZ/f9SFHR+71gIVUZhOQPHzVCLpvRnPgyaMpfWxxk/4ONva3GQSyNIKRv6A==}
-    engines: {node: '>=10'}
-
-  temp-file@3.4.0:
-    resolution: {integrity: sha512-C5tjlC/HCtVUOi3KWVokd4vHVViOmGjtLwIh4MuzPo/nMYTV/p1urt3RnMz2IWXDdKEGJH3k5+KPxtqRsUYGtg==}
-
-  tiny-typed-emitter@2.1.0:
-    resolution: {integrity: sha512-qVtvMxeXbVej0cQWKqVSSAHmKZEHAvxdF8HEUBFWts8h+xEo5m/lEiPakuyZ3BnCBjOD8i24kzNOiOLLgsSxhA==}
-
-  tmp-promise@3.0.3:
-    resolution: {integrity: sha512-RwM7MoPojPxsOBYnyd2hy0bxtIlVrihNs9pj5SUvY8Zz1sQcQG2tG1hSr8PDxfgEB8RNKDhqbIlroIarSNDNsQ==}
-
-  tmp@0.2.3:
-    resolution: {integrity: sha512-nZD7m9iCPC5g0pYmcaxogYKggSfLsdxl8of3Q/oIbqCqLLIO9IAF0GWjX1z9NZRHPiXv8Wex4yDCaZsgEw0Y8w==}
-    engines: {node: '>=14.14'}
-
-  to-object-path@0.3.0:
-    resolution: {integrity: sha512-9mWHdnGRuh3onocaHzukyvCZhzvr6tiflAy/JRFXcJX0TjgfWA9pk9t8CMbzmBE4Jfw58pXbkngtBtqYxzNEyg==}
-    engines: {node: '>=0.10.0'}
-
-  to-regex-range@5.0.1:
-    resolution: {integrity: sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==}
-    engines: {node: '>=8.0'}
-
-  to-regex@3.0.2:
-    resolution: {integrity: sha512-FWtleNAtZ/Ki2qtqej2CXTOayOH9bHDQF+Q48VpWyDXjbYxA4Yz8iDB31zXOBUlOHHKidDbqGVrTUvQMPmBGBw==}
-    engines: {node: '>=0.10.0'}
-
-  truncate-utf8-bytes@1.0.2:
-    resolution: {integrity: sha512-95Pu1QXQvruGEhv62XCMO3Mm90GscOCClvrIUwCM0PYOXK3kaF3l3sIHxx71ThJfcbM2O5Au6SO3AWCSEfW4mQ==}
-
-  ts-api-utils@1.4.3:
-    resolution: {integrity: sha512-i3eMG77UTMD0hZhgRS562pv83RC6ukSAC2GMNWc+9dieh/+jDM5u5YG+NHX6VNDRHQcHwmsTHctP9LhbC3WxVw==}
-    engines: {node: '>=16'}
-    peerDependencies:
-      typescript: '>=4.2.0'
-
-  tsconfig-paths@3.15.0:
-    resolution: {integrity: sha512-2Ac2RgzDe/cn48GvOe3M+o82pEFewD3UPbyoUHHdKasHwJKjds4fLXWf/Ux5kATBKN20oaFGu+jbElp1pos0mg==}
-
-  tslib@2.8.1:
-    resolution: {integrity: sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==}
-
-  tsx@4.19.2:
-    resolution: {integrity: sha512-pOUl6Vo2LUq/bSa8S5q7b91cgNSjctn9ugq/+Mvow99qW6x/UZYwzxy/3NmqoT66eHYfCVvFvACC58UBPFf28g==}
-    engines: {node: '>=18.0.0'}
-    hasBin: true
-
-  type-check@0.4.0:
-    resolution: {integrity: sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==}
-    engines: {node: '>= 0.8.0'}
-
-  type-fest@0.13.1:
-    resolution: {integrity: sha512-34R7HTnG0XIJcBSn5XhDd7nNFPRcXYRZrBB2O2jdKqYODldSzBAqzsWoZYYvduky73toYS/ESqxPvkDf/F0XMg==}
-    engines: {node: '>=10'}
-
-  type-fest@3.13.1:
-    resolution: {integrity: sha512-tLq3bSNx+xSpwvAJnzrK0Ep5CLNWjvFTOp71URMaAEWBfRb9nnJiBoUe0tF8bI4ZFO3omgBR6NvnbzVUT3Ly4g==}
-    engines: {node: '>=14.16'}
-
-  type-fest@4.30.0:
-    resolution: {integrity: sha512-G6zXWS1dLj6eagy6sVhOMQiLtJdxQBHIA9Z6HFUNLOlr6MFOgzV8wvmidtPONfPtEUv0uZsy77XJNzTAfwPDaA==}
-    engines: {node: '>=16'}
-
-  typed-array-buffer@1.0.2:
-    resolution: {integrity: sha512-gEymJYKZtKXzzBzM4jqa9w6Q1Jjm7x2d+sh19AdsD4wqnMPDYyvwpsIc2Q/835kHuo3BEQ7CjelGhfTsoBb2MQ==}
-    engines: {node: '>= 0.4'}
-
-  typed-array-byte-length@1.0.1:
-    resolution: {integrity: sha512-3iMJ9q0ao7WE9tWcaYKIptkNBuOIcZCCT0d4MRvuuH88fEoEH62IuQe0OtraD3ebQEoTRk8XCBoknUNc1Y67pw==}
-    engines: {node: '>= 0.4'}
-
-  typed-array-byte-offset@1.0.3:
-    resolution: {integrity: sha512-GsvTyUHTriq6o/bHcTd0vM7OQ9JEdlvluu9YISaA7+KzDzPaIzEeDFNkTfhdE3MYcNhNi0vq/LlegYgIs5yPAw==}
-    engines: {node: '>= 0.4'}
-
-  typed-array-length@1.0.7:
-    resolution: {integrity: sha512-3KS2b+kL7fsuk/eJZ7EQdnEmQoaho/r6KUef7hxvltNA5DR8NAUM+8wJMbJyZ4G9/7i3v5zPBIMN5aybAh2/Jg==}
-    engines: {node: '>= 0.4'}
-
-  typescript-eslint@8.17.0:
-    resolution: {integrity: sha512-409VXvFd/f1br1DCbuKNFqQpXICoTB+V51afcwG1pn1a3Cp92MqAUges3YjwEdQ0cMUoCIodjVDAYzyD8h3SYA==}
-    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
-    peerDependencies:
-      eslint: ^8.57.0 || ^9.0.0
-      typescript: '*'
-    peerDependenciesMeta:
-      typescript:
-        optional: true
-
-  typescript@5.7.2:
-    resolution: {integrity: sha512-i5t66RHxDvVN40HfDd1PsEThGNnlMCMT3jMUuoh9/0TaqWevNontacunWyN02LA9/fIbEWlcHZcgTKb9QoaLfg==}
-    engines: {node: '>=14.17'}
-    hasBin: true
-
-  unbox-primitive@1.0.2:
-    resolution: {integrity: sha512-61pPlCD9h51VoreyJ0BReideM3MDKMKnh6+V9L08331ipq6Q8OFXZYiqP6n/tbHx4s5I9uRhcye6BrbkizkBDw==}
-
-  undici-types@5.26.5:
-    resolution: {integrity: sha512-JlCMO+ehdEIKqlFxk6IfVoAUVmgz7cU7zD/h9XZ0qzeosSHmUJVOzSQvvYSYWXkFXC+IfLKSIffhv0sVZup6pA==}
-
-  undici-types@6.19.8:
-    resolution: {integrity: sha512-ve2KP6f/JnbPBFyobGHuerC9g1FYGn/F8n1LWTwNxCEzd6IfqTwUQcNXgEtmmQ6DlRrC1hrSrBnCZPokRrDHjw==}
-
-  undici-types@6.20.0:
-    resolution: {integrity: sha512-Ny6QZ2Nju20vw1SRHe3d9jVu6gJ+4e3+MMpqu7pqE5HT6WsTSlce++GQmK5UXS8mzV8DSYHrQH+Xrf2jVcuKNg==}
-
-  union-value@1.0.1:
-    resolution: {integrity: sha512-tJfXmxMeWYnczCVs7XAEvIV7ieppALdyepWMkHkwciRpZraG/xwT+s2JN8+pr1+8jCRf80FFzvr+MpQeeoF4Xg==}
-    engines: {node: '>=0.10.0'}
-
-  unique-filename@2.0.1:
-    resolution: {integrity: sha512-ODWHtkkdx3IAR+veKxFV+VBkUMcN+FaqzUUd7IZzt+0zhDZFPFxhlqwPF3YQvMHx1TD0tdgYl+kuPnJ8E6ql7A==}
-    engines: {node: ^12.13.0 || ^14.15.0 || >=16.0.0}
-
-  unique-slug@3.0.0:
-    resolution: {integrity: sha512-8EyMynh679x/0gqE9fT9oilG+qEt+ibFyqjuVTsZn1+CMxH+XLlpvr2UZx4nVcCwTpx81nICr2JQFkM+HPLq4w==}
-    engines: {node: ^12.13.0 || ^14.15.0 || >=16.0.0}
-
-  universalify@0.1.2:
-    resolution: {integrity: sha512-rBJeI5CXAlmy1pV+617WB9J63U6XcazHHF2f2dbJix4XzpUF0RS3Zbj0FGIOCAva5P/d/GBOYaACQ1w+0azUkg==}
-    engines: {node: '>= 4.0.0'}
-
-  universalify@2.0.1:
-    resolution: {integrity: sha512-gptHNQghINnc/vTGIk0SOFGFNXw7JVrlRUtConJRlvaw6DuX0wO5Jeko9sWrMBhh+PsYAZ7oXAiOnf/UKogyiw==}
-    engines: {node: '>= 10.0.0'}
-
-  unset-value@1.0.0:
-    resolution: {integrity: sha512-PcA2tsuGSF9cnySLHTLSh2qrQiJ70mn+r+Glzxv2TWZblxsxCC52BDlZoPCsz7STd9pN7EZetkWZBAvk4cgZdQ==}
-    engines: {node: '>=0.10.0'}
-
-  uri-js@4.4.1:
-    resolution: {integrity: sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==}
-
-  urix@0.1.0:
-    resolution: {integrity: sha512-Am1ousAhSLBeB9cG/7k7r2R0zj50uDRlZHPGbazid5s9rlF1F/QKYObEKSIunSjIOkJZqwRRLpvewjEkM7pSqg==}
-    deprecated: Please see https://github.com/lydell/urix#deprecated
-
-  url-join@4.0.1:
-    resolution: {integrity: sha512-jk1+QP6ZJqyOiuEI9AEWQfju/nB2Pw466kbA0LEZljHwKeMgd9WrAEgEGxjPDD2+TNbbb37rTyhEfrCXfuKXnA==}
-
-  use@3.1.1:
-    resolution: {integrity: sha512-cwESVXlO3url9YWlFW/TA9cshCEhtu7IKJ/p5soJ/gGpj7vbvFrAY/eIioQ6Dw23KjZhYgiIo8HOs1nQ2vr/oQ==}
-    engines: {node: '>=0.10.0'}
-
-  utf8-byte-length@1.0.5:
-    resolution: {integrity: sha512-Xn0w3MtiQ6zoz2vFyUVruaCL53O/DwUvkEeOvj+uulMm0BkUGYWmBYVyElqZaSLhY6ZD0ulfU3aBra2aVT4xfA==}
-
-  util-deprecate@1.0.2:
-    resolution: {integrity: sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==}
-
-  verror@1.10.1:
-    resolution: {integrity: sha512-veufcmxri4e3XSrT0xwfUR7kguIkaxBeosDg00yDWhk49wdwkSUrvvsm7nc75e1PUyvIeZj6nS8VQRYz2/S4Xg==}
-    engines: {node: '>=0.6.0'}
-
-  wcwidth@1.0.1:
-    resolution: {integrity: sha512-XHPEwS0q6TaxcvG85+8EYkbiCux2XtWG2mkc47Ng2A77BQu9+DqIOJldST4HgPkuea7dvKSj5VgX3P1d4rW8Tg==}
-
-  which-boxed-primitive@1.1.0:
-    resolution: {integrity: sha512-Ei7Miu/AXe2JJ4iNF5j/UphAgRoma4trE6PtisM09bPygb3egMH3YLW/befsWb1A1AxvNSFidOFTB18XtnIIng==}
-    engines: {node: '>= 0.4'}
-
-  which-builtin-type@1.2.0:
-    resolution: {integrity: sha512-I+qLGQ/vucCby4tf5HsLmGueEla4ZhwTBSqaooS+Y0BuxN4Cp+okmGuV+8mXZ84KDI9BA+oklo+RzKg0ONdSUA==}
-    engines: {node: '>= 0.4'}
-
-  which-collection@1.0.2:
-    resolution: {integrity: sha512-K4jVyjnBdgvc86Y6BkaLZEN933SwYOuBFkdmBu9ZfkcAbdVbpITnDmjvZ/aQjRXQrv5EPkTnD1s39GiiqbngCw==}
-    engines: {node: '>= 0.4'}
-
-  which-typed-array@1.1.16:
-    resolution: {integrity: sha512-g+N+GAWiRj66DngFwHvISJd+ITsyphZvD1vChfVg6cEdnzy53GzB3oy0fUNlvhz7H7+MiqhYr26qxQShCpKTTQ==}
-    engines: {node: '>= 0.4'}
-
-  which@1.3.1:
-    resolution: {integrity: sha512-HxJdYWq1MTIQbJ3nw0cqssHoTNU267KlrDuGZ1WYlxDStUtKUhOaJmh112/TZmHxxUfuJqPXSOm7tDyas0OSIQ==}
-    hasBin: true
-
-  which@2.0.2:
-    resolution: {integrity: sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==}
-    engines: {node: '>= 8'}
-    hasBin: true
-
-  wide-align@1.1.5:
-    resolution: {integrity: sha512-eDMORYaPNZ4sQIuuYPDHdQvf4gyCF9rEEV/yPxGfwPkRodwEgiMUUXTx/dex+Me0wxx53S+NgUHaP7y3MGlDmg==}
-
-  word-wrap@1.2.5:
-    resolution: {integrity: sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==}
-    engines: {node: '>=0.10.0'}
-
-  wrap-ansi@7.0.0:
-    resolution: {integrity: sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==}
-    engines: {node: '>=10'}
-
-  wrap-ansi@8.1.0:
-    resolution: {integrity: sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==}
-    engines: {node: '>=12'}
-
-  wrappy@1.0.2:
-    resolution: {integrity: sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==}
-
-  ws@8.18.0:
-    resolution: {integrity: sha512-8VbfWfHLbbwu3+N6OKsOMpBdT4kXPDDB9cJk2bJ6mh9ucxdlnNvH1e+roYkKmN9Nxw2yjz7VzeO9oOz2zJ04Pw==}
-    engines: {node: '>=10.0.0'}
-    peerDependencies:
-      bufferutil: ^4.0.1
-      utf-8-validate: '>=5.0.2'
-    peerDependenciesMeta:
-      bufferutil:
-        optional: true
-      utf-8-validate:
+    verror@1.10.1:
+        dependencies:
+            assert-plus: 1.0.0
+            core-util-is: 1.0.2
+            extsprintf: 1.4.1
         optional: true
 
-  xml-formatter@3.6.3:
-    resolution: {integrity: sha512-++x1TlRO1FRlQ82AZ4WnoCSufaI/PT/sycn4K8nRl4gnrNC1uYY2VV/67aALZ2m0Q4Q/BLj/L69K360Itw9NNg==}
-    engines: {node: '>= 16'}
-
-  xml-parser-xo@4.1.2:
-    resolution: {integrity: sha512-Z/DRB0ZAKj5vAQg++XsfQQKfT73Vfj5n5lKIVXobBDQEva6NHWUTxOA6OohJmEcpoy8AEqBmSGkXXAnFwt5qAA==}
-    engines: {node: '>= 16'}
-
-  xmlbuilder@15.1.1:
-    resolution: {integrity: sha512-yMqGBqtXyeN1e3TGYvgNgDVZ3j84W4cwkOXQswghol6APgZWaff9lnbvN7MHYJOiXsvGPXtjTYJEiC9J2wv9Eg==}
-    engines: {node: '>=8.0'}
-
-  y18n@5.0.8:
-    resolution: {integrity: sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==}
-    engines: {node: '>=10'}
-
-  yallist@4.0.0:
-    resolution: {integrity: sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==}
-
-  yargs-parser@21.1.1:
-    resolution: {integrity: sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw==}
-    engines: {node: '>=12'}
-
-  yargs@17.7.2:
-    resolution: {integrity: sha512-7dSzzRQ++CKnNI/krKnYRV7JKKPUXMEh61soaHKg9mrWEhzFWhFnxPxGl+69cD1Ou63C13NUPCnmIcrvqCuM6w==}
-    engines: {node: '>=12'}
-
-  yauzl@2.10.0:
-    resolution: {integrity: sha512-p4a9I6X6nu6IhoGmBqAcbJy1mlC4j27vEPZX9F4L4/vZT3Lyq1VkFHw/V/PUcB9Buo+DG3iHkT0x3Qya58zc3g==}
-
-  yocto-queue@0.1.0:
-    resolution: {integrity: sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==}
-    engines: {node: '>=10'}
-
-  zip-stream@4.1.1:
-    resolution: {integrity: sha512-9qv4rlDiopXg4E69k+vMHjNN63YFMe9sZMrdlvKnCjlCRWeCBswPPMPUfx+ipsAWq1LXHe70RcbaHdJJpS6hyQ==}
-    engines: {node: '>= 10'}
-
-snapshots:
-
-  7zip-bin@5.2.0: {}
-
-  '@develar/schema-utils@2.6.5':
-    dependencies:
-      ajv: 6.12.6
-      ajv-keywords: 3.5.2(ajv@6.12.6)
-
-  '@electron/asar@3.2.17':
-    dependencies:
-      commander: 5.1.0
-      glob: 7.2.3
-      minimatch: 3.1.2
-
-  '@electron/get@2.0.3':
-    dependencies:
-      debug: 4.3.7
-      env-paths: 2.2.1
-      fs-extra: 8.1.0
-      got: 11.8.6
-      progress: 2.0.3
-      semver: 6.3.1
-      sumchecker: 3.0.1
-    optionalDependencies:
-      global-agent: 3.0.0
-    transitivePeerDependencies:
-      - supports-color
-
-  '@electron/notarize@2.5.0':
-    dependencies:
-      debug: 4.3.7
-      fs-extra: 9.1.0
-      promise-retry: 2.0.1
-    transitivePeerDependencies:
-      - supports-color
-
-  '@electron/osx-sign@1.3.1':
-    dependencies:
-      compare-version: 0.1.2
-      debug: 4.3.7
-      fs-extra: 10.1.0
-      isbinaryfile: 4.0.10
-      minimist: 1.2.8
-      plist: 3.1.0
-    transitivePeerDependencies:
-      - supports-color
-
-  '@electron/rebuild@3.6.1':
-    dependencies:
-      '@malept/cross-spawn-promise': 2.0.0
-      chalk: 4.1.2
-      debug: 4.3.7
-      detect-libc: 2.0.3
-      fs-extra: 10.1.0
-      got: 11.8.6
-      node-abi: 3.71.0
-      node-api-version: 0.2.0
-      node-gyp: 9.4.1
-      ora: 5.4.1
-      read-binary-file-arch: 1.0.6
-      semver: 7.6.3
-      tar: 6.2.1
-      yargs: 17.7.2
-    transitivePeerDependencies:
-      - bluebird
-      - supports-color
-
-  '@electron/universal@2.0.1':
-    dependencies:
-      '@electron/asar': 3.2.17
-      '@malept/cross-spawn-promise': 2.0.0
-      debug: 4.3.7
-      dir-compare: 4.2.0
-      fs-extra: 11.2.0
-      minimatch: 9.0.5
-      plist: 3.1.0
-    transitivePeerDependencies:
-      - supports-color
-
-  '@esbuild/aix-ppc64@0.23.1':
-    optional: true
-
-  '@esbuild/aix-ppc64@0.24.0':
-    optional: true
-
-  '@esbuild/android-arm64@0.23.1':
-    optional: true
-
-  '@esbuild/android-arm64@0.24.0':
-    optional: true
-
-  '@esbuild/android-arm@0.23.1':
-    optional: true
-
-  '@esbuild/android-arm@0.24.0':
-    optional: true
-
-  '@esbuild/android-x64@0.23.1':
-    optional: true
-
-  '@esbuild/android-x64@0.24.0':
-    optional: true
-
-  '@esbuild/darwin-arm64@0.23.1':
-    optional: true
-
-  '@esbuild/darwin-arm64@0.24.0':
-    optional: true
-
-  '@esbuild/darwin-x64@0.23.1':
-    optional: true
-
-  '@esbuild/darwin-x64@0.24.0':
-    optional: true
-
-  '@esbuild/freebsd-arm64@0.23.1':
-    optional: true
-
-  '@esbuild/freebsd-arm64@0.24.0':
-    optional: true
-
-  '@esbuild/freebsd-x64@0.23.1':
-    optional: true
-
-  '@esbuild/freebsd-x64@0.24.0':
-    optional: true
-
-  '@esbuild/linux-arm64@0.23.1':
-    optional: true
-
-  '@esbuild/linux-arm64@0.24.0':
-    optional: true
-
-  '@esbuild/linux-arm@0.23.1':
-    optional: true
-
-  '@esbuild/linux-arm@0.24.0':
-    optional: true
-
-  '@esbuild/linux-ia32@0.23.1':
-    optional: true
-
-  '@esbuild/linux-ia32@0.24.0':
-    optional: true
-
-  '@esbuild/linux-loong64@0.23.1':
-    optional: true
-
-  '@esbuild/linux-loong64@0.24.0':
-    optional: true
-
-  '@esbuild/linux-mips64el@0.23.1':
-    optional: true
-
-  '@esbuild/linux-mips64el@0.24.0':
-    optional: true
-
-  '@esbuild/linux-ppc64@0.23.1':
-    optional: true
-
-  '@esbuild/linux-ppc64@0.24.0':
-    optional: true
-
-  '@esbuild/linux-riscv64@0.23.1':
-    optional: true
-
-  '@esbuild/linux-riscv64@0.24.0':
-    optional: true
-
-  '@esbuild/linux-s390x@0.23.1':
-    optional: true
-
-  '@esbuild/linux-s390x@0.24.0':
-    optional: true
-
-  '@esbuild/linux-x64@0.23.1':
-    optional: true
-
-  '@esbuild/linux-x64@0.24.0':
-    optional: true
-
-  '@esbuild/netbsd-x64@0.23.1':
-    optional: true
-
-  '@esbuild/netbsd-x64@0.24.0':
-    optional: true
-
-  '@esbuild/openbsd-arm64@0.23.1':
-    optional: true
-
-  '@esbuild/openbsd-arm64@0.24.0':
-    optional: true
-
-  '@esbuild/openbsd-x64@0.23.1':
-    optional: true
-
-  '@esbuild/openbsd-x64@0.24.0':
-    optional: true
-
-  '@esbuild/sunos-x64@0.23.1':
-    optional: true
-
-  '@esbuild/sunos-x64@0.24.0':
-    optional: true
-
-  '@esbuild/win32-arm64@0.23.1':
-    optional: true
-
-  '@esbuild/win32-arm64@0.24.0':
-    optional: true
-
-  '@esbuild/win32-ia32@0.23.1':
-    optional: true
-
-  '@esbuild/win32-ia32@0.24.0':
-    optional: true
-
-  '@esbuild/win32-x64@0.23.1':
-    optional: true
-
-  '@esbuild/win32-x64@0.24.0':
-    optional: true
-
-  '@eslint-community/eslint-utils@4.4.1(eslint@9.16.0)':
-    dependencies:
-      eslint: 9.16.0
-      eslint-visitor-keys: 3.4.3
-
-  '@eslint-community/regexpp@4.12.1': {}
-
-  '@eslint/config-array@0.19.0':
-    dependencies:
-      '@eslint/object-schema': 2.1.4
-      debug: 4.3.7
-      minimatch: 3.1.2
-    transitivePeerDependencies:
-      - supports-color
-
-  '@eslint/core@0.9.0': {}
-
-  '@eslint/eslintrc@3.2.0':
-    dependencies:
-      ajv: 6.12.6
-      debug: 4.3.7
-      espree: 10.3.0
-      globals: 14.0.0
-      ignore: 5.3.2
-      import-fresh: 3.3.0
-      js-yaml: 4.1.0
-      minimatch: 3.1.2
-      strip-json-comments: 3.1.1
-    transitivePeerDependencies:
-      - supports-color
-
-  '@eslint/js@9.16.0': {}
-
-  '@eslint/object-schema@2.1.4': {}
-
-  '@eslint/plugin-kit@0.2.3':
-    dependencies:
-      levn: 0.4.1
-
-  '@fal-works/esbuild-plugin-global-externals@2.1.2': {}
-
-  '@gar/promisify@1.1.3': {}
-
-  '@humanfs/core@0.19.1': {}
-
-  '@humanfs/node@0.16.6':
-    dependencies:
-      '@humanfs/core': 0.19.1
-      '@humanwhocodes/retry': 0.3.1
-
-  '@humanwhocodes/module-importer@1.0.1': {}
-
-  '@humanwhocodes/retry@0.3.1': {}
-
-  '@humanwhocodes/retry@0.4.1': {}
-
-  '@isaacs/cliui@8.0.2':
-    dependencies:
-      string-width: 5.1.2
-      string-width-cjs: string-width@4.2.3
-      strip-ansi: 7.1.0
-      strip-ansi-cjs: strip-ansi@6.0.1
-      wrap-ansi: 8.1.0
-      wrap-ansi-cjs: wrap-ansi@7.0.0
-
-  '@malept/cross-spawn-promise@2.0.0':
-    dependencies:
-      cross-spawn: 7.0.6
-
-  '@malept/flatpak-bundler@0.4.0':
-    dependencies:
-      debug: 4.3.7
-      fs-extra: 9.1.0
-      lodash: 4.17.21
-      tmp-promise: 3.0.3
-    transitivePeerDependencies:
-      - supports-color
-
-  '@nodelib/fs.scandir@2.1.5':
-    dependencies:
-      '@nodelib/fs.stat': 2.0.5
-      run-parallel: 1.2.0
-
-  '@nodelib/fs.stat@2.0.5': {}
-
-  '@nodelib/fs.walk@1.2.8':
-    dependencies:
-      '@nodelib/fs.scandir': 2.1.5
-      fastq: 1.17.1
-
-  '@npmcli/fs@2.1.2':
-    dependencies:
-      '@gar/promisify': 1.1.3
-      semver: 7.6.3
-
-  '@npmcli/move-file@2.0.1':
-    dependencies:
-      mkdirp: 1.0.4
-      rimraf: 3.0.2
-
-  '@pkgjs/parseargs@0.11.0':
-    optional: true
-
-  '@pkgr/core@0.1.1': {}
-
-  '@rtsao/scc@1.1.0': {}
-
-  '@sindresorhus/is@4.6.0': {}
-
-  '@stylistic/eslint-plugin@2.11.0(eslint@9.16.0)(typescript@5.7.2)':
-    dependencies:
-      '@typescript-eslint/utils': 8.17.0(eslint@9.16.0)(typescript@5.7.2)
-      eslint: 9.16.0
-      eslint-visitor-keys: 4.2.0
-      espree: 10.3.0
-      estraverse: 5.3.0
-      picomatch: 4.0.2
-    transitivePeerDependencies:
-      - supports-color
-      - typescript
-
-  '@szmarczak/http-timer@4.0.6':
-    dependencies:
-      defer-to-connect: 2.0.1
-
-  '@tootallnate/once@2.0.0': {}
-
-  '@types/cacheable-request@6.0.3':
-    dependencies:
-      '@types/http-cache-semantics': 4.0.4
-      '@types/keyv': 3.1.4
-      '@types/node': 22.10.1
-      '@types/responselike': 1.0.3
-
-  '@types/debug@4.1.12':
-    dependencies:
-      '@types/ms': 0.7.34
-
-  '@types/estree@1.0.6': {}
-
-  '@types/fs-extra@9.0.13':
-    dependencies:
-      '@types/node': 22.10.1
-
-  '@types/http-cache-semantics@4.0.4': {}
-
-  '@types/json-schema@7.0.15': {}
-
-  '@types/json5@0.0.29': {}
-
-  '@types/keyv@3.1.4':
-    dependencies:
-      '@types/node': 22.10.1
-
-  '@types/lodash@4.17.13': {}
-
-  '@types/ms@0.7.34': {}
-
-  '@types/node@18.19.67':
-    dependencies:
-      undici-types: 5.26.5
-
-  '@types/node@20.17.9':
-    dependencies:
-      undici-types: 6.19.8
-
-  '@types/node@22.10.1':
-    dependencies:
-      undici-types: 6.20.0
-
-  '@types/plist@3.0.5':
-    dependencies:
-      '@types/node': 22.10.1
-      xmlbuilder: 15.1.1
-    optional: true
-
-  '@types/prop-types@15.7.13': {}
-
-  '@types/react-dom@18.3.1':
-    dependencies:
-      '@types/react': 18.3.12
-
-  '@types/react@17.0.2':
-    dependencies:
-      '@types/prop-types': 15.7.13
-      csstype: 3.1.3
-
-  '@types/react@18.3.12':
-    dependencies:
-      '@types/prop-types': 15.7.13
-      csstype: 3.1.3
-
-  '@types/responselike@1.0.3':
-    dependencies:
-      '@types/node': 22.10.1
-
-  '@types/verror@1.10.10':
-    optional: true
-
-  '@types/yauzl@2.10.3':
-    dependencies:
-      '@types/node': 22.10.1
-    optional: true
-
-  '@typescript-eslint/eslint-plugin@8.17.0(@typescript-eslint/parser@8.17.0(eslint@9.16.0)(typescript@5.7.2))(eslint@9.16.0)(typescript@5.7.2)':
-    dependencies:
-      '@eslint-community/regexpp': 4.12.1
-      '@typescript-eslint/parser': 8.17.0(eslint@9.16.0)(typescript@5.7.2)
-      '@typescript-eslint/scope-manager': 8.17.0
-      '@typescript-eslint/type-utils': 8.17.0(eslint@9.16.0)(typescript@5.7.2)
-      '@typescript-eslint/utils': 8.17.0(eslint@9.16.0)(typescript@5.7.2)
-      '@typescript-eslint/visitor-keys': 8.17.0
-      eslint: 9.16.0
-      graphemer: 1.4.0
-      ignore: 5.3.2
-      natural-compare: 1.4.0
-      ts-api-utils: 1.4.3(typescript@5.7.2)
-    optionalDependencies:
-      typescript: 5.7.2
-    transitivePeerDependencies:
-      - supports-color
-
-  '@typescript-eslint/parser@8.17.0(eslint@9.16.0)(typescript@5.7.2)':
-    dependencies:
-      '@typescript-eslint/scope-manager': 8.17.0
-      '@typescript-eslint/types': 8.17.0
-      '@typescript-eslint/typescript-estree': 8.17.0(typescript@5.7.2)
-      '@typescript-eslint/visitor-keys': 8.17.0
-      debug: 4.3.7
-      eslint: 9.16.0
-    optionalDependencies:
-      typescript: 5.7.2
-    transitivePeerDependencies:
-      - supports-color
-
-  '@typescript-eslint/scope-manager@8.17.0':
-    dependencies:
-      '@typescript-eslint/types': 8.17.0
-      '@typescript-eslint/visitor-keys': 8.17.0
-
-  '@typescript-eslint/type-utils@8.17.0(eslint@9.16.0)(typescript@5.7.2)':
-    dependencies:
-      '@typescript-eslint/typescript-estree': 8.17.0(typescript@5.7.2)
-      '@typescript-eslint/utils': 8.17.0(eslint@9.16.0)(typescript@5.7.2)
-      debug: 4.3.7
-      eslint: 9.16.0
-      ts-api-utils: 1.4.3(typescript@5.7.2)
-    optionalDependencies:
-      typescript: 5.7.2
-    transitivePeerDependencies:
-      - supports-color
-
-  '@typescript-eslint/types@8.17.0': {}
-
-  '@typescript-eslint/typescript-estree@8.17.0(typescript@5.7.2)':
-    dependencies:
-      '@typescript-eslint/types': 8.17.0
-      '@typescript-eslint/visitor-keys': 8.17.0
-      debug: 4.3.7
-      fast-glob: 3.3.2
-      is-glob: 4.0.3
-      minimatch: 9.0.5
-      semver: 7.6.3
-      ts-api-utils: 1.4.3(typescript@5.7.2)
-    optionalDependencies:
-      typescript: 5.7.2
-    transitivePeerDependencies:
-      - supports-color
-
-  '@typescript-eslint/utils@8.17.0(eslint@9.16.0)(typescript@5.7.2)':
-    dependencies:
-      '@eslint-community/eslint-utils': 4.4.1(eslint@9.16.0)
-      '@typescript-eslint/scope-manager': 8.17.0
-      '@typescript-eslint/types': 8.17.0
-      '@typescript-eslint/typescript-estree': 8.17.0(typescript@5.7.2)
-      eslint: 9.16.0
-    optionalDependencies:
-      typescript: 5.7.2
-    transitivePeerDependencies:
-      - supports-color
-
-  '@typescript-eslint/visitor-keys@8.17.0':
-    dependencies:
-      '@typescript-eslint/types': 8.17.0
-      eslint-visitor-keys: 4.2.0
-
-  '@vencord/types@1.8.4':
-    dependencies:
-      '@types/lodash': 4.17.13
-      '@types/node': 18.19.67
-      '@types/react': 18.3.12
-      '@types/react-dom': 18.3.1
-      discord-types: 1.3.26
-      standalone-electron-types: 1.0.0
-      type-fest: 3.13.1
-
-  '@vencord/venmic@6.1.0':
-    dependencies:
-      cmake-js: 7.3.0
-      node-addon-api: 8.3.0
-      pkg-prebuilds: 0.2.1
-    transitivePeerDependencies:
-      - supports-color
-    optional: true
-
-  '@xmldom/xmldom@0.8.10': {}
-
-  abbrev@1.1.1: {}
-
-  acorn-jsx@5.3.2(acorn@8.14.0):
-    dependencies:
-      acorn: 8.14.0
-
-  acorn@8.14.0: {}
-
-  agent-base@6.0.2:
-    dependencies:
-      debug: 4.3.7
-    transitivePeerDependencies:
-      - supports-color
-
-  agent-base@7.1.1:
-    dependencies:
-      debug: 4.3.7
-    transitivePeerDependencies:
-      - supports-color
-
-  agentkeepalive@4.5.0:
-    dependencies:
-      humanize-ms: 1.2.1
-
-  aggregate-error@3.1.0:
-    dependencies:
-      clean-stack: 2.2.0
-      indent-string: 4.0.0
-
-  ajv-keywords@3.5.2(ajv@6.12.6):
-    dependencies:
-      ajv: 6.12.6
-
-  ajv@6.12.6:
-    dependencies:
-      fast-deep-equal: 3.1.3
-      fast-json-stable-stringify: 2.1.0
-      json-schema-traverse: 0.4.1
-      uri-js: 4.4.1
-
-  ansi-regex@5.0.1: {}
-
-  ansi-regex@6.1.0: {}
-
-  ansi-styles@4.3.0:
-    dependencies:
-      color-convert: 2.0.1
-
-  ansi-styles@6.2.1: {}
-
-  app-builder-bin@5.0.0-alpha.10: {}
-
-  app-builder-lib@25.1.8(dmg-builder@25.1.8(electron-builder-squirrel-windows@25.1.8(dmg-builder@25.1.8)))(electron-builder-squirrel-windows@25.1.8(dmg-builder@25.1.8)):
-    dependencies:
-      '@develar/schema-utils': 2.6.5
-      '@electron/notarize': 2.5.0
-      '@electron/osx-sign': 1.3.1
-      '@electron/rebuild': 3.6.1
-      '@electron/universal': 2.0.1
-      '@malept/flatpak-bundler': 0.4.0
-      '@types/fs-extra': 9.0.13
-      async-exit-hook: 2.0.1
-      bluebird-lst: 1.0.9
-      builder-util: 25.1.7
-      builder-util-runtime: 9.2.10
-      chromium-pickle-js: 0.2.0
-      config-file-ts: 0.2.8-rc1
-      debug: 4.3.7
-      dmg-builder: 25.1.8(electron-builder-squirrel-windows@25.1.8(dmg-builder@25.1.8))
-      dotenv: 16.4.6
-      dotenv-expand: 11.0.7
-      ejs: 3.1.10
-      electron-builder-squirrel-windows: 25.1.8(dmg-builder@25.1.8)
-      electron-publish: 25.1.7
-      form-data: 4.0.1
-      fs-extra: 10.1.0
-      hosted-git-info: 4.1.0
-      is-ci: 3.0.1
-      isbinaryfile: 5.0.4
-      js-yaml: 4.1.0
-      json5: 2.2.3
-      lazy-val: 1.0.5
-      minimatch: 10.0.1
-      resedit: 1.7.2
-      sanitize-filename: 1.6.3
-      semver: 7.6.3
-      tar: 6.2.1
-      temp-file: 3.4.0
-    transitivePeerDependencies:
-      - bluebird
-      - supports-color
-
-  aproba@2.0.0: {}
-
-  archiver-utils@2.1.0:
-    dependencies:
-      glob: 7.2.3
-      graceful-fs: 4.2.11
-      lazystream: 1.0.1
-      lodash.defaults: 4.2.0
-      lodash.difference: 4.5.0
-      lodash.flatten: 4.4.0
-      lodash.isplainobject: 4.0.6
-      lodash.union: 4.6.0
-      normalize-path: 3.0.0
-      readable-stream: 2.3.8
-
-  archiver-utils@3.0.4:
-    dependencies:
-      glob: 7.2.3
-      graceful-fs: 4.2.11
-      lazystream: 1.0.1
-      lodash.defaults: 4.2.0
-      lodash.difference: 4.5.0
-      lodash.flatten: 4.4.0
-      lodash.isplainobject: 4.0.6
-      lodash.union: 4.6.0
-      normalize-path: 3.0.0
-      readable-stream: 3.6.2
-
-  archiver@5.3.2:
-    dependencies:
-      archiver-utils: 2.1.0
-      async: 3.2.6
-      buffer-crc32: 0.2.13
-      readable-stream: 3.6.2
-      readdir-glob: 1.1.3
-      tar-stream: 2.2.0
-      zip-stream: 4.1.1
-
-  are-we-there-yet@3.0.1:
-    dependencies:
-      delegates: 1.0.0
-      readable-stream: 3.6.2
-
-  argparse@2.0.1: {}
-
-  arr-diff@4.0.0: {}
-
-  arr-union@3.1.0: {}
-
-  array-buffer-byte-length@1.0.1:
-    dependencies:
-      call-bind: 1.0.7
-      is-array-buffer: 3.0.4
-
-  array-includes@3.1.8:
-    dependencies:
-      call-bind: 1.0.7
-      define-properties: 1.2.1
-      es-abstract: 1.23.5
-      es-object-atoms: 1.0.0
-      get-intrinsic: 1.2.4
-      is-string: 1.1.0
-
-  array-unique@0.3.2: {}
-
-  array.prototype.findlastindex@1.2.5:
-    dependencies:
-      call-bind: 1.0.7
-      define-properties: 1.2.1
-      es-abstract: 1.23.5
-      es-errors: 1.3.0
-      es-object-atoms: 1.0.0
-      es-shim-unscopables: 1.0.2
-
-  array.prototype.flat@1.3.2:
-    dependencies:
-      call-bind: 1.0.7
-      define-properties: 1.2.1
-      es-abstract: 1.23.5
-      es-shim-unscopables: 1.0.2
-
-  array.prototype.flatmap@1.3.2:
-    dependencies:
-      call-bind: 1.0.7
-      define-properties: 1.2.1
-      es-abstract: 1.23.5
-      es-shim-unscopables: 1.0.2
-
-  arraybuffer.prototype.slice@1.0.3:
-    dependencies:
-      array-buffer-byte-length: 1.0.1
-      call-bind: 1.0.7
-      define-properties: 1.2.1
-      es-abstract: 1.23.5
-      es-errors: 1.3.0
-      get-intrinsic: 1.2.4
-      is-array-buffer: 3.0.4
-      is-shared-array-buffer: 1.0.3
-
-  arrpc@https://codeload.github.com/OpenAsar/arrpc/tar.gz/5aadc307cb9bf4479f0a12364a253b07a77ace22(patch_hash=biyukfa6dww2wxujy4eyvkhrti):
-    dependencies:
-      ws: 8.18.0
-    transitivePeerDependencies:
-      - bufferutil
-      - utf-8-validate
-
-  assert-plus@1.0.0:
-    optional: true
-
-  assign-symbols@1.0.0: {}
-
-  astral-regex@2.0.0:
-    optional: true
-
-  async-exit-hook@2.0.1: {}
-
-  async@3.2.6: {}
-
-  asynckit@0.4.0: {}
-
-  at-least-node@1.0.0: {}
-
-  atob@2.1.2: {}
-
-  available-typed-arrays@1.0.7:
-    dependencies:
-      possible-typed-array-names: 1.0.0
-
-  axios@1.7.8(debug@4.3.7):
-    dependencies:
-      follow-redirects: 1.15.9(debug@4.3.7)
-      form-data: 4.0.1
-      proxy-from-env: 1.1.0
-    transitivePeerDependencies:
-      - debug
-    optional: true
-
-  balanced-match@1.0.2: {}
-
-  base64-js@1.5.1: {}
-
-  base@0.11.2:
-    dependencies:
-      cache-base: 1.0.1
-      class-utils: 0.3.6
-      component-emitter: 1.3.1
-      define-property: 1.0.0
-      isobject: 3.0.1
-      mixin-deep: 1.3.2
-      pascalcase: 0.1.1
-
-  bl@4.1.0:
-    dependencies:
-      buffer: 5.7.1
-      inherits: 2.0.4
-      readable-stream: 3.6.2
-
-  bluebird-lst@1.0.9:
-    dependencies:
-      bluebird: 3.7.2
-
-  bluebird@3.7.2: {}
-
-  boolean@3.2.0:
-    optional: true
-
-  brace-expansion@1.1.11:
-    dependencies:
-      balanced-match: 1.0.2
-      concat-map: 0.0.1
-
-  brace-expansion@2.0.1:
-    dependencies:
-      balanced-match: 1.0.2
-
-  braces@3.0.3:
-    dependencies:
-      fill-range: 7.1.1
-
-  buffer-crc32@0.2.13: {}
-
-  buffer-from@1.1.2: {}
-
-  buffer@5.7.1:
-    dependencies:
-      base64-js: 1.5.1
-      ieee754: 1.2.1
-
-  builder-util-runtime@9.2.10:
-    dependencies:
-      debug: 4.3.7
-      sax: 1.4.1
-    transitivePeerDependencies:
-      - supports-color
-
-  builder-util@25.1.7:
-    dependencies:
-      7zip-bin: 5.2.0
-      '@types/debug': 4.1.12
-      app-builder-bin: 5.0.0-alpha.10
-      bluebird-lst: 1.0.9
-      builder-util-runtime: 9.2.10
-      chalk: 4.1.2
-      cross-spawn: 7.0.6
-      debug: 4.3.7
-      fs-extra: 10.1.0
-      http-proxy-agent: 7.0.2
-      https-proxy-agent: 7.0.5
-      is-ci: 3.0.1
-      js-yaml: 4.1.0
-      source-map-support: 0.5.21
-      stat-mode: 1.0.0
-      temp-file: 3.4.0
-    transitivePeerDependencies:
-      - supports-color
-
-  cacache@16.1.3:
-    dependencies:
-      '@npmcli/fs': 2.1.2
-      '@npmcli/move-file': 2.0.1
-      chownr: 2.0.0
-      fs-minipass: 2.1.0
-      glob: 8.1.0
-      infer-owner: 1.0.4
-      lru-cache: 7.18.3
-      minipass: 3.3.6
-      minipass-collect: 1.0.2
-      minipass-flush: 1.0.5
-      minipass-pipeline: 1.2.4
-      mkdirp: 1.0.4
-      p-map: 4.0.0
-      promise-inflight: 1.0.1
-      rimraf: 3.0.2
-      ssri: 9.0.1
-      tar: 6.2.1
-      unique-filename: 2.0.1
-    transitivePeerDependencies:
-      - bluebird
-
-  cache-base@1.0.1:
-    dependencies:
-      collection-visit: 1.0.0
-      component-emitter: 1.3.1
-      get-value: 2.0.6
-      has-value: 1.0.0
-      isobject: 3.0.1
-      set-value: 2.0.1
-      to-object-path: 0.3.0
-      union-value: 1.0.1
-      unset-value: 1.0.0
-
-  cacheable-lookup@5.0.4: {}
-
-  cacheable-request@7.0.4:
-    dependencies:
-      clone-response: 1.0.3
-      get-stream: 5.2.0
-      http-cache-semantics: 4.1.1
-      keyv: 4.5.4
-      lowercase-keys: 2.0.0
-      normalize-url: 6.1.0
-      responselike: 2.0.1
-
-  call-bind@1.0.7:
-    dependencies:
-      es-define-property: 1.0.0
-      es-errors: 1.3.0
-      function-bind: 1.1.2
-      get-intrinsic: 1.2.4
-      set-function-length: 1.2.2
-
-  callsites@3.1.0: {}
-
-  chalk@4.1.2:
-    dependencies:
-      ansi-styles: 4.3.0
-      supports-color: 7.2.0
-
-  chownr@2.0.0: {}
-
-  chromium-pickle-js@0.2.0: {}
-
-  ci-info@3.9.0: {}
-
-  class-utils@0.3.6:
-    dependencies:
-      arr-union: 3.1.0
-      define-property: 0.2.5
-      isobject: 3.0.1
-      static-extend: 0.1.2
-
-  clean-stack@2.2.0: {}
-
-  cli-cursor@3.1.0:
-    dependencies:
-      restore-cursor: 3.1.0
-
-  cli-spinners@2.9.2: {}
-
-  cli-truncate@2.1.0:
-    dependencies:
-      slice-ansi: 3.0.0
-      string-width: 4.2.3
-    optional: true
-
-  cliui@8.0.1:
-    dependencies:
-      string-width: 4.2.3
-      strip-ansi: 6.0.1
-      wrap-ansi: 7.0.0
-
-  clone-response@1.0.3:
-    dependencies:
-      mimic-response: 1.0.1
-
-  clone@1.0.4: {}
-
-  cmake-js@7.3.0:
-    dependencies:
-      axios: 1.7.8(debug@4.3.7)
-      debug: 4.3.7
-      fs-extra: 11.2.0
-      lodash.isplainobject: 4.0.6
-      memory-stream: 1.0.0
-      node-api-headers: 1.4.0
-      npmlog: 6.0.2
-      rc: 1.2.8
-      semver: 7.6.3
-      tar: 6.2.1
-      url-join: 4.0.1
-      which: 2.0.2
-      yargs: 17.7.2
-    transitivePeerDependencies:
-      - supports-color
-    optional: true
-
-  collection-visit@1.0.0:
-    dependencies:
-      map-visit: 1.0.0
-      object-visit: 1.0.1
-
-  color-convert@2.0.1:
-    dependencies:
-      color-name: 1.1.4
-
-  color-name@1.1.4: {}
-
-  color-support@1.1.3: {}
-
-  combined-stream@1.0.8:
-    dependencies:
-      delayed-stream: 1.0.0
-
-  commander@5.1.0: {}
-
-  compare-version@0.1.2: {}
-
-  component-emitter@1.3.1: {}
-
-  compress-commons@4.1.2:
-    dependencies:
-      buffer-crc32: 0.2.13
-      crc32-stream: 4.0.3
-      normalize-path: 3.0.0
-      readable-stream: 3.6.2
-
-  concat-map@0.0.1: {}
-
-  config-file-ts@0.2.8-rc1:
-    dependencies:
-      glob: 10.4.5
-      typescript: 5.7.2
-
-  console-control-strings@1.1.0: {}
-
-  copy-descriptor@0.1.1: {}
-
-  core-util-is@1.0.2:
-    optional: true
-
-  core-util-is@1.0.3: {}
-
-  crc-32@1.2.2: {}
-
-  crc32-stream@4.0.3:
-    dependencies:
-      crc-32: 1.2.2
-      readable-stream: 3.6.2
-
-  crc@3.8.0:
-    dependencies:
-      buffer: 5.7.1
-    optional: true
-
-  cross-spawn@7.0.6:
-    dependencies:
-      path-key: 3.1.1
-      shebang-command: 2.0.0
-      which: 2.0.2
-
-  csstype@3.1.3: {}
-
-  data-view-buffer@1.0.1:
-    dependencies:
-      call-bind: 1.0.7
-      es-errors: 1.3.0
-      is-data-view: 1.0.1
-
-  data-view-byte-length@1.0.1:
-    dependencies:
-      call-bind: 1.0.7
-      es-errors: 1.3.0
-      is-data-view: 1.0.1
-
-  data-view-byte-offset@1.0.0:
-    dependencies:
-      call-bind: 1.0.7
-      es-errors: 1.3.0
-      is-data-view: 1.0.1
-
-  debug@2.6.9:
-    dependencies:
-      ms: 2.0.0
-
-  debug@3.2.7:
-    dependencies:
-      ms: 2.1.3
-
-  debug@4.3.7:
-    dependencies:
-      ms: 2.1.3
-
-  decode-uri-component@0.2.2: {}
-
-  decompress-response@6.0.0:
-    dependencies:
-      mimic-response: 3.1.0
-
-  deep-extend@0.6.0:
-    optional: true
-
-  deep-is@0.1.4: {}
-
-  defaults@1.0.4:
-    dependencies:
-      clone: 1.0.4
-
-  defer-to-connect@2.0.1: {}
-
-  define-data-property@1.1.4:
-    dependencies:
-      es-define-property: 1.0.0
-      es-errors: 1.3.0
-      gopd: 1.1.0
-
-  define-properties@1.2.1:
-    dependencies:
-      define-data-property: 1.1.4
-      has-property-descriptors: 1.0.2
-      object-keys: 1.1.1
-
-  define-property@0.2.5:
-    dependencies:
-      is-descriptor: 0.1.7
-
-  define-property@1.0.0:
-    dependencies:
-      is-descriptor: 1.0.3
-
-  define-property@2.0.2:
-    dependencies:
-      is-descriptor: 1.0.3
-      isobject: 3.0.1
-
-  delayed-stream@1.0.0: {}
-
-  delegates@1.0.0: {}
-
-  detect-libc@2.0.3: {}
-
-  detect-node@2.1.0:
-    optional: true
-
-  dir-compare@4.2.0:
-    dependencies:
-      minimatch: 3.1.2
-      p-limit: 3.1.0
-
-  discord-types@1.3.26:
-    dependencies:
-      '@types/react': 17.0.2
-      moment: 2.30.1
-
-  dmg-builder@25.1.8(electron-builder-squirrel-windows@25.1.8(dmg-builder@25.1.8)):
-    dependencies:
-      app-builder-lib: 25.1.8(dmg-builder@25.1.8(electron-builder-squirrel-windows@25.1.8(dmg-builder@25.1.8)))(electron-builder-squirrel-windows@25.1.8(dmg-builder@25.1.8))
-      builder-util: 25.1.7
-      builder-util-runtime: 9.2.10
-      fs-extra: 10.1.0
-      iconv-lite: 0.6.3
-      js-yaml: 4.1.0
-    optionalDependencies:
-      dmg-license: 1.0.11
-    transitivePeerDependencies:
-      - bluebird
-      - electron-builder-squirrel-windows
-      - supports-color
-
-  dmg-license@1.0.11:
-    dependencies:
-      '@types/plist': 3.0.5
-      '@types/verror': 1.10.10
-      ajv: 6.12.6
-      crc: 3.8.0
-      iconv-corefoundation: 1.1.7
-      plist: 3.1.0
-      smart-buffer: 4.2.0
-      verror: 1.10.1
-    optional: true
-
-  doctrine@2.1.0:
-    dependencies:
-      esutils: 2.0.3
-
-  dotenv-expand@11.0.7:
-    dependencies:
-      dotenv: 16.4.6
-
-  dotenv@16.4.6: {}
-
-  eastasianwidth@0.2.0: {}
-
-  ejs@3.1.10:
-    dependencies:
-      jake: 10.9.2
-
-  electron-builder-squirrel-windows@25.1.8(dmg-builder@25.1.8):
-    dependencies:
-      app-builder-lib: 25.1.8(dmg-builder@25.1.8(electron-builder-squirrel-windows@25.1.8(dmg-builder@25.1.8)))(electron-builder-squirrel-windows@25.1.8(dmg-builder@25.1.8))
-      archiver: 5.3.2
-      builder-util: 25.1.7
-      fs-extra: 10.1.0
-    transitivePeerDependencies:
-      - bluebird
-      - dmg-builder
-      - supports-color
-
-  electron-builder@25.1.8(electron-builder-squirrel-windows@25.1.8(dmg-builder@25.1.8)):
-    dependencies:
-      app-builder-lib: 25.1.8(dmg-builder@25.1.8(electron-builder-squirrel-windows@25.1.8(dmg-builder@25.1.8)))(electron-builder-squirrel-windows@25.1.8(dmg-builder@25.1.8))
-      builder-util: 25.1.7
-      builder-util-runtime: 9.2.10
-      chalk: 4.1.2
-      dmg-builder: 25.1.8(electron-builder-squirrel-windows@25.1.8(dmg-builder@25.1.8))
-      fs-extra: 10.1.0
-      is-ci: 3.0.1
-      lazy-val: 1.0.5
-      simple-update-notifier: 2.0.0
-      yargs: 17.7.2
-    transitivePeerDependencies:
-      - bluebird
-      - electron-builder-squirrel-windows
-      - supports-color
-
-  electron-publish@25.1.7:
-    dependencies:
-      '@types/fs-extra': 9.0.13
-      builder-util: 25.1.7
-      builder-util-runtime: 9.2.10
-      chalk: 4.1.2
-      fs-extra: 10.1.0
-      lazy-val: 1.0.5
-      mime: 2.6.0
-    transitivePeerDependencies:
-      - supports-color
-
-  electron-updater@6.3.9:
-    dependencies:
-      builder-util-runtime: 9.2.10
-      fs-extra: 10.1.0
-      js-yaml: 4.1.0
-      lazy-val: 1.0.5
-      lodash.escaperegexp: 4.1.2
-      lodash.isequal: 4.5.0
-      semver: 7.6.3
-      tiny-typed-emitter: 2.1.0
-    transitivePeerDependencies:
-      - supports-color
-
-  electron@33.2.1:
-    dependencies:
-      '@electron/get': 2.0.3
-      '@types/node': 20.17.9
-      extract-zip: 2.0.1
-    transitivePeerDependencies:
-      - supports-color
-
-  emoji-regex@8.0.0: {}
-
-  emoji-regex@9.2.2: {}
-
-  encoding@0.1.13:
-    dependencies:
-      iconv-lite: 0.6.3
-    optional: true
-
-  end-of-stream@1.4.4:
-    dependencies:
-      once: 1.4.0
-
-  env-paths@2.2.1: {}
-
-  err-code@2.0.3: {}
-
-  es-abstract@1.23.5:
-    dependencies:
-      array-buffer-byte-length: 1.0.1
-      arraybuffer.prototype.slice: 1.0.3
-      available-typed-arrays: 1.0.7
-      call-bind: 1.0.7
-      data-view-buffer: 1.0.1
-      data-view-byte-length: 1.0.1
-      data-view-byte-offset: 1.0.0
-      es-define-property: 1.0.0
-      es-errors: 1.3.0
-      es-object-atoms: 1.0.0
-      es-set-tostringtag: 2.0.3
-      es-to-primitive: 1.3.0
-      function.prototype.name: 1.1.6
-      get-intrinsic: 1.2.4
-      get-symbol-description: 1.0.2
-      globalthis: 1.0.4
-      gopd: 1.1.0
-      has-property-descriptors: 1.0.2
-      has-proto: 1.1.0
-      has-symbols: 1.1.0
-      hasown: 2.0.2
-      internal-slot: 1.0.7
-      is-array-buffer: 3.0.4
-      is-callable: 1.2.7
-      is-data-view: 1.0.1
-      is-negative-zero: 2.0.3
-      is-regex: 1.2.0
-      is-shared-array-buffer: 1.0.3
-      is-string: 1.1.0
-      is-typed-array: 1.1.13
-      is-weakref: 1.0.2
-      object-inspect: 1.13.3
-      object-keys: 1.1.1
-      object.assign: 4.1.5
-      regexp.prototype.flags: 1.5.3
-      safe-array-concat: 1.1.2
-      safe-regex-test: 1.0.3
-      string.prototype.trim: 1.2.9
-      string.prototype.trimend: 1.0.8
-      string.prototype.trimstart: 1.0.8
-      typed-array-buffer: 1.0.2
-      typed-array-byte-length: 1.0.1
-      typed-array-byte-offset: 1.0.3
-      typed-array-length: 1.0.7
-      unbox-primitive: 1.0.2
-      which-typed-array: 1.1.16
-
-  es-define-property@1.0.0:
-    dependencies:
-      get-intrinsic: 1.2.4
-
-  es-errors@1.3.0: {}
-
-  es-object-atoms@1.0.0:
-    dependencies:
-      es-errors: 1.3.0
-
-  es-set-tostringtag@2.0.3:
-    dependencies:
-      get-intrinsic: 1.2.4
-      has-tostringtag: 1.0.2
-      hasown: 2.0.2
-
-  es-shim-unscopables@1.0.2:
-    dependencies:
-      hasown: 2.0.2
-
-  es-to-primitive@1.3.0:
-    dependencies:
-      is-callable: 1.2.7
-      is-date-object: 1.0.5
-      is-symbol: 1.1.0
-
-  es6-error@4.1.1:
-    optional: true
-
-  esbuild@0.23.1:
-    optionalDependencies:
-      '@esbuild/aix-ppc64': 0.23.1
-      '@esbuild/android-arm': 0.23.1
-      '@esbuild/android-arm64': 0.23.1
-      '@esbuild/android-x64': 0.23.1
-      '@esbuild/darwin-arm64': 0.23.1
-      '@esbuild/darwin-x64': 0.23.1
-      '@esbuild/freebsd-arm64': 0.23.1
-      '@esbuild/freebsd-x64': 0.23.1
-      '@esbuild/linux-arm': 0.23.1
-      '@esbuild/linux-arm64': 0.23.1
-      '@esbuild/linux-ia32': 0.23.1
-      '@esbuild/linux-loong64': 0.23.1
-      '@esbuild/linux-mips64el': 0.23.1
-      '@esbuild/linux-ppc64': 0.23.1
-      '@esbuild/linux-riscv64': 0.23.1
-      '@esbuild/linux-s390x': 0.23.1
-      '@esbuild/linux-x64': 0.23.1
-      '@esbuild/netbsd-x64': 0.23.1
-      '@esbuild/openbsd-arm64': 0.23.1
-      '@esbuild/openbsd-x64': 0.23.1
-      '@esbuild/sunos-x64': 0.23.1
-      '@esbuild/win32-arm64': 0.23.1
-      '@esbuild/win32-ia32': 0.23.1
-      '@esbuild/win32-x64': 0.23.1
-
-  esbuild@0.24.0:
-    optionalDependencies:
-      '@esbuild/aix-ppc64': 0.24.0
-      '@esbuild/android-arm': 0.24.0
-      '@esbuild/android-arm64': 0.24.0
-      '@esbuild/android-x64': 0.24.0
-      '@esbuild/darwin-arm64': 0.24.0
-      '@esbuild/darwin-x64': 0.24.0
-      '@esbuild/freebsd-arm64': 0.24.0
-      '@esbuild/freebsd-x64': 0.24.0
-      '@esbuild/linux-arm': 0.24.0
-      '@esbuild/linux-arm64': 0.24.0
-      '@esbuild/linux-ia32': 0.24.0
-      '@esbuild/linux-loong64': 0.24.0
-      '@esbuild/linux-mips64el': 0.24.0
-      '@esbuild/linux-ppc64': 0.24.0
-      '@esbuild/linux-riscv64': 0.24.0
-      '@esbuild/linux-s390x': 0.24.0
-      '@esbuild/linux-x64': 0.24.0
-      '@esbuild/netbsd-x64': 0.24.0
-      '@esbuild/openbsd-arm64': 0.24.0
-      '@esbuild/openbsd-x64': 0.24.0
-      '@esbuild/sunos-x64': 0.24.0
-      '@esbuild/win32-arm64': 0.24.0
-      '@esbuild/win32-ia32': 0.24.0
-      '@esbuild/win32-x64': 0.24.0
-
-  escalade@3.2.0: {}
-
-  escape-string-regexp@4.0.0: {}
-
-  eslint-config-prettier@9.1.0(eslint@9.16.0):
-    dependencies:
-      eslint: 9.16.0
-    optional: true
-
-  eslint-import-resolver-alias@1.1.2(eslint-plugin-import@2.31.0(@typescript-eslint/parser@8.17.0(eslint@9.16.0)(typescript@5.7.2))(eslint@9.16.0)):
-    dependencies:
-      eslint-plugin-import: 2.31.0(@typescript-eslint/parser@8.17.0(eslint@9.16.0)(typescript@5.7.2))(eslint@9.16.0)
-
-  eslint-import-resolver-node@0.3.9:
-    dependencies:
-      debug: 3.2.7
-      is-core-module: 2.15.1
-      resolve: 1.22.8
-    transitivePeerDependencies:
-      - supports-color
-
-  eslint-module-utils@2.12.0(@typescript-eslint/parser@8.17.0(eslint@9.16.0)(typescript@5.7.2))(eslint-import-resolver-node@0.3.9)(eslint@9.16.0):
-    dependencies:
-      debug: 3.2.7
-    optionalDependencies:
-      '@typescript-eslint/parser': 8.17.0(eslint@9.16.0)(typescript@5.7.2)
-      eslint: 9.16.0
-      eslint-import-resolver-node: 0.3.9
-    transitivePeerDependencies:
-      - supports-color
-
-  eslint-plugin-import@2.31.0(@typescript-eslint/parser@8.17.0(eslint@9.16.0)(typescript@5.7.2))(eslint@9.16.0):
-    dependencies:
-      '@rtsao/scc': 1.1.0
-      array-includes: 3.1.8
-      array.prototype.findlastindex: 1.2.5
-      array.prototype.flat: 1.3.2
-      array.prototype.flatmap: 1.3.2
-      debug: 3.2.7
-      doctrine: 2.1.0
-      eslint: 9.16.0
-      eslint-import-resolver-node: 0.3.9
-      eslint-module-utils: 2.12.0(@typescript-eslint/parser@8.17.0(eslint@9.16.0)(typescript@5.7.2))(eslint-import-resolver-node@0.3.9)(eslint@9.16.0)
-      hasown: 2.0.2
-      is-core-module: 2.15.1
-      is-glob: 4.0.3
-      minimatch: 3.1.2
-      object.fromentries: 2.0.8
-      object.groupby: 1.0.3
-      object.values: 1.2.0
-      semver: 6.3.1
-      string.prototype.trimend: 1.0.8
-      tsconfig-paths: 3.15.0
-    optionalDependencies:
-      '@typescript-eslint/parser': 8.17.0(eslint@9.16.0)(typescript@5.7.2)
-    transitivePeerDependencies:
-      - eslint-import-resolver-typescript
-      - eslint-import-resolver-webpack
-      - supports-color
-
-  eslint-plugin-path-alias@2.1.0(eslint@9.16.0):
-    dependencies:
-      eslint: 9.16.0
-      find-pkg: 2.0.0
-      get-tsconfig: 4.8.1
-      nanomatch: 1.2.13
-    transitivePeerDependencies:
-      - supports-color
-
-  eslint-plugin-prettier@5.2.1(eslint-config-prettier@9.1.0(eslint@9.16.0))(eslint@9.16.0)(prettier@3.4.1):
-    dependencies:
-      eslint: 9.16.0
-      prettier: 3.4.1
-      prettier-linter-helpers: 1.0.0
-      synckit: 0.9.2
-    optionalDependencies:
-      eslint-config-prettier: 9.1.0(eslint@9.16.0)
-
-  eslint-plugin-simple-header@1.2.1(eslint@9.16.0):
-    dependencies:
-      eslint: 9.16.0
-
-  eslint-plugin-simple-import-sort@12.1.1(eslint@9.16.0):
-    dependencies:
-      eslint: 9.16.0
-
-  eslint-plugin-unused-imports@4.1.4(@typescript-eslint/eslint-plugin@8.17.0(@typescript-eslint/parser@8.17.0(eslint@9.16.0)(typescript@5.7.2))(eslint@9.16.0)(typescript@5.7.2))(eslint@9.16.0):
-    dependencies:
-      eslint: 9.16.0
-    optionalDependencies:
-      '@typescript-eslint/eslint-plugin': 8.17.0(@typescript-eslint/parser@8.17.0(eslint@9.16.0)(typescript@5.7.2))(eslint@9.16.0)(typescript@5.7.2)
-
-  eslint-scope@8.2.0:
-    dependencies:
-      esrecurse: 4.3.0
-      estraverse: 5.3.0
-
-  eslint-visitor-keys@3.4.3: {}
-
-  eslint-visitor-keys@4.2.0: {}
-
-  eslint@9.16.0:
-    dependencies:
-      '@eslint-community/eslint-utils': 4.4.1(eslint@9.16.0)
-      '@eslint-community/regexpp': 4.12.1
-      '@eslint/config-array': 0.19.0
-      '@eslint/core': 0.9.0
-      '@eslint/eslintrc': 3.2.0
-      '@eslint/js': 9.16.0
-      '@eslint/plugin-kit': 0.2.3
-      '@humanfs/node': 0.16.6
-      '@humanwhocodes/module-importer': 1.0.1
-      '@humanwhocodes/retry': 0.4.1
-      '@types/estree': 1.0.6
-      '@types/json-schema': 7.0.15
-      ajv: 6.12.6
-      chalk: 4.1.2
-      cross-spawn: 7.0.6
-      debug: 4.3.7
-      escape-string-regexp: 4.0.0
-      eslint-scope: 8.2.0
-      eslint-visitor-keys: 4.2.0
-      espree: 10.3.0
-      esquery: 1.6.0
-      esutils: 2.0.3
-      fast-deep-equal: 3.1.3
-      file-entry-cache: 8.0.0
-      find-up: 5.0.0
-      glob-parent: 6.0.2
-      ignore: 5.3.2
-      imurmurhash: 0.1.4
-      is-glob: 4.0.3
-      json-stable-stringify-without-jsonify: 1.0.1
-      lodash.merge: 4.6.2
-      minimatch: 3.1.2
-      natural-compare: 1.4.0
-      optionator: 0.9.4
-    transitivePeerDependencies:
-      - supports-color
-
-  espree@10.3.0:
-    dependencies:
-      acorn: 8.14.0
-      acorn-jsx: 5.3.2(acorn@8.14.0)
-      eslint-visitor-keys: 4.2.0
-
-  esquery@1.6.0:
-    dependencies:
-      estraverse: 5.3.0
-
-  esrecurse@4.3.0:
-    dependencies:
-      estraverse: 5.3.0
-
-  estraverse@5.3.0: {}
-
-  esutils@2.0.3: {}
-
-  expand-tilde@2.0.2:
-    dependencies:
-      homedir-polyfill: 1.0.3
-
-  exponential-backoff@3.1.1: {}
-
-  extend-shallow@2.0.1:
-    dependencies:
-      is-extendable: 0.1.1
-
-  extend-shallow@3.0.2:
-    dependencies:
-      assign-symbols: 1.0.0
-      is-extendable: 1.0.1
-
-  extract-zip@2.0.1:
-    dependencies:
-      debug: 4.3.7
-      get-stream: 5.2.0
-      yauzl: 2.10.0
-    optionalDependencies:
-      '@types/yauzl': 2.10.3
-    transitivePeerDependencies:
-      - supports-color
-
-  extsprintf@1.4.1:
-    optional: true
-
-  fast-deep-equal@3.1.3: {}
-
-  fast-diff@1.3.0: {}
-
-  fast-glob@3.3.2:
-    dependencies:
-      '@nodelib/fs.stat': 2.0.5
-      '@nodelib/fs.walk': 1.2.8
-      glob-parent: 5.1.2
-      merge2: 1.4.1
-      micromatch: 4.0.8
-
-  fast-json-stable-stringify@2.1.0: {}
-
-  fast-levenshtein@2.0.6: {}
-
-  fastq@1.17.1:
-    dependencies:
-      reusify: 1.0.4
-
-  fd-slicer@1.1.0:
-    dependencies:
-      pend: 1.2.0
-
-  file-entry-cache@8.0.0:
-    dependencies:
-      flat-cache: 4.0.1
-
-  filelist@1.0.4:
-    dependencies:
-      minimatch: 5.1.6
-
-  fill-range@7.1.1:
-    dependencies:
-      to-regex-range: 5.0.1
-
-  find-file-up@2.0.1:
-    dependencies:
-      resolve-dir: 1.0.1
-
-  find-pkg@2.0.0:
-    dependencies:
-      find-file-up: 2.0.1
-
-  find-up@5.0.0:
-    dependencies:
-      locate-path: 6.0.0
-      path-exists: 4.0.0
-
-  flat-cache@4.0.1:
-    dependencies:
-      flatted: 3.3.2
-      keyv: 4.5.4
-
-  flatted@3.3.2: {}
-
-  follow-redirects@1.15.9(debug@4.3.7):
-    optionalDependencies:
-      debug: 4.3.7
-    optional: true
-
-  for-each@0.3.3:
-    dependencies:
-      is-callable: 1.2.7
-
-  for-in@1.0.2: {}
-
-  foreground-child@3.3.0:
-    dependencies:
-      cross-spawn: 7.0.6
-      signal-exit: 4.1.0
-
-  form-data@4.0.1:
-    dependencies:
-      asynckit: 0.4.0
-      combined-stream: 1.0.8
-      mime-types: 2.1.35
-
-  fragment-cache@0.2.1:
-    dependencies:
-      map-cache: 0.2.2
-
-  fs-constants@1.0.0: {}
-
-  fs-extra@10.1.0:
-    dependencies:
-      graceful-fs: 4.2.11
-      jsonfile: 6.1.0
-      universalify: 2.0.1
-
-  fs-extra@11.2.0:
-    dependencies:
-      graceful-fs: 4.2.11
-      jsonfile: 6.1.0
-      universalify: 2.0.1
-
-  fs-extra@8.1.0:
-    dependencies:
-      graceful-fs: 4.2.11
-      jsonfile: 4.0.0
-      universalify: 0.1.2
-
-  fs-extra@9.1.0:
-    dependencies:
-      at-least-node: 1.0.0
-      graceful-fs: 4.2.11
-      jsonfile: 6.1.0
-      universalify: 2.0.1
-
-  fs-minipass@2.1.0:
-    dependencies:
-      minipass: 3.3.6
-
-  fs.realpath@1.0.0: {}
-
-  fsevents@2.3.3:
-    optional: true
-
-  function-bind@1.1.2: {}
-
-  function.prototype.name@1.1.6:
-    dependencies:
-      call-bind: 1.0.7
-      define-properties: 1.2.1
-      es-abstract: 1.23.5
-      functions-have-names: 1.2.3
-
-  functions-have-names@1.2.3: {}
-
-  gauge@4.0.4:
-    dependencies:
-      aproba: 2.0.0
-      color-support: 1.1.3
-      console-control-strings: 1.1.0
-      has-unicode: 2.0.1
-      signal-exit: 3.0.7
-      string-width: 4.2.3
-      strip-ansi: 6.0.1
-      wide-align: 1.1.5
-
-  get-caller-file@2.0.5: {}
-
-  get-intrinsic@1.2.4:
-    dependencies:
-      es-errors: 1.3.0
-      function-bind: 1.1.2
-      has-proto: 1.1.0
-      has-symbols: 1.1.0
-      hasown: 2.0.2
-
-  get-stream@5.2.0:
-    dependencies:
-      pump: 3.0.2
-
-  get-symbol-description@1.0.2:
-    dependencies:
-      call-bind: 1.0.7
-      es-errors: 1.3.0
-      get-intrinsic: 1.2.4
-
-  get-tsconfig@4.8.1:
-    dependencies:
-      resolve-pkg-maps: 1.0.0
-
-  get-value@2.0.6: {}
-
-  glob-parent@5.1.2:
-    dependencies:
-      is-glob: 4.0.3
-
-  glob-parent@6.0.2:
-    dependencies:
-      is-glob: 4.0.3
-
-  glob@10.4.5:
-    dependencies:
-      foreground-child: 3.3.0
-      jackspeak: 3.4.3
-      minimatch: 9.0.5
-      minipass: 7.1.2
-      package-json-from-dist: 1.0.1
-      path-scurry: 1.11.1
-
-  glob@7.2.3:
-    dependencies:
-      fs.realpath: 1.0.0
-      inflight: 1.0.6
-      inherits: 2.0.4
-      minimatch: 3.1.2
-      once: 1.4.0
-      path-is-absolute: 1.0.1
-
-  glob@8.1.0:
-    dependencies:
-      fs.realpath: 1.0.0
-      inflight: 1.0.6
-      inherits: 2.0.4
-      minimatch: 5.1.6
-      once: 1.4.0
-
-  global-agent@3.0.0:
-    dependencies:
-      boolean: 3.2.0
-      es6-error: 4.1.1
-      matcher: 3.0.0
-      roarr: 2.15.4
-      semver: 7.6.3
-      serialize-error: 7.0.1
-    optional: true
-
-  global-modules@1.0.0:
-    dependencies:
-      global-prefix: 1.0.2
-      is-windows: 1.0.2
-      resolve-dir: 1.0.1
-
-  global-prefix@1.0.2:
-    dependencies:
-      expand-tilde: 2.0.2
-      homedir-polyfill: 1.0.3
-      ini: 1.3.8
-      is-windows: 1.0.2
-      which: 1.3.1
-
-  globals@14.0.0: {}
-
-  globalthis@1.0.4:
-    dependencies:
-      define-properties: 1.2.1
-      gopd: 1.1.0
-
-  gopd@1.1.0:
-    dependencies:
-      get-intrinsic: 1.2.4
-
-  got@11.8.6:
-    dependencies:
-      '@sindresorhus/is': 4.6.0
-      '@szmarczak/http-timer': 4.0.6
-      '@types/cacheable-request': 6.0.3
-      '@types/responselike': 1.0.3
-      cacheable-lookup: 5.0.4
-      cacheable-request: 7.0.4
-      decompress-response: 6.0.0
-      http2-wrapper: 1.0.3
-      lowercase-keys: 2.0.0
-      p-cancelable: 2.1.1
-      responselike: 2.0.1
-
-  graceful-fs@4.2.11: {}
-
-  graphemer@1.4.0: {}
-
-  has-bigints@1.0.2: {}
-
-  has-flag@4.0.0: {}
-
-  has-property-descriptors@1.0.2:
-    dependencies:
-      es-define-property: 1.0.0
-
-  has-proto@1.1.0:
-    dependencies:
-      call-bind: 1.0.7
-
-  has-symbols@1.1.0: {}
-
-  has-tostringtag@1.0.2:
-    dependencies:
-      has-symbols: 1.1.0
-
-  has-unicode@2.0.1: {}
-
-  has-value@0.3.1:
-    dependencies:
-      get-value: 2.0.6
-      has-values: 0.1.4
-      isobject: 2.1.0
-
-  has-value@1.0.0:
-    dependencies:
-      get-value: 2.0.6
-      has-values: 1.0.0
-      isobject: 3.0.1
-
-  has-values@0.1.4: {}
-
-  has-values@1.0.0:
-    dependencies:
-      is-number: 3.0.0
-      kind-of: 4.0.0
-
-  hasown@2.0.2:
-    dependencies:
-      function-bind: 1.1.2
-
-  homedir-polyfill@1.0.3:
-    dependencies:
-      parse-passwd: 1.0.0
-
-  hosted-git-info@4.1.0:
-    dependencies:
-      lru-cache: 6.0.0
-
-  http-cache-semantics@4.1.1: {}
-
-  http-proxy-agent@5.0.0:
-    dependencies:
-      '@tootallnate/once': 2.0.0
-      agent-base: 6.0.2
-      debug: 4.3.7
-    transitivePeerDependencies:
-      - supports-color
-
-  http-proxy-agent@7.0.2:
-    dependencies:
-      agent-base: 7.1.1
-      debug: 4.3.7
-    transitivePeerDependencies:
-      - supports-color
-
-  http2-wrapper@1.0.3:
-    dependencies:
-      quick-lru: 5.1.1
-      resolve-alpn: 1.2.1
-
-  https-proxy-agent@5.0.1:
-    dependencies:
-      agent-base: 6.0.2
-      debug: 4.3.7
-    transitivePeerDependencies:
-      - supports-color
-
-  https-proxy-agent@7.0.5:
-    dependencies:
-      agent-base: 7.1.1
-      debug: 4.3.7
-    transitivePeerDependencies:
-      - supports-color
-
-  humanize-ms@1.2.1:
-    dependencies:
-      ms: 2.1.3
-
-  iconv-corefoundation@1.1.7:
-    dependencies:
-      cli-truncate: 2.1.0
-      node-addon-api: 1.7.2
-    optional: true
-
-  iconv-lite@0.6.3:
-    dependencies:
-      safer-buffer: 2.1.2
-
-  ieee754@1.2.1: {}
-
-  ignore@5.3.2: {}
-
-  import-fresh@3.3.0:
-    dependencies:
-      parent-module: 1.0.1
-      resolve-from: 4.0.0
-
-  imurmurhash@0.1.4: {}
-
-  indent-string@4.0.0: {}
-
-  infer-owner@1.0.4: {}
-
-  inflight@1.0.6:
-    dependencies:
-      once: 1.4.0
-      wrappy: 1.0.2
-
-  inherits@2.0.4: {}
-
-  ini@1.3.8: {}
-
-  internal-slot@1.0.7:
-    dependencies:
-      es-errors: 1.3.0
-      hasown: 2.0.2
-      side-channel: 1.0.6
-
-  ip-address@9.0.5:
-    dependencies:
-      jsbn: 1.1.0
-      sprintf-js: 1.1.3
-
-  is-accessor-descriptor@1.0.1:
-    dependencies:
-      hasown: 2.0.2
-
-  is-array-buffer@3.0.4:
-    dependencies:
-      call-bind: 1.0.7
-      get-intrinsic: 1.2.4
-
-  is-async-function@2.0.0:
-    dependencies:
-      has-tostringtag: 1.0.2
-
-  is-bigint@1.1.0:
-    dependencies:
-      has-bigints: 1.0.2
-
-  is-boolean-object@1.2.0:
-    dependencies:
-      call-bind: 1.0.7
-      has-tostringtag: 1.0.2
-
-  is-buffer@1.1.6: {}
-
-  is-callable@1.2.7: {}
-
-  is-ci@3.0.1:
-    dependencies:
-      ci-info: 3.9.0
-
-  is-core-module@2.15.1:
-    dependencies:
-      hasown: 2.0.2
-
-  is-data-descriptor@1.0.1:
-    dependencies:
-      hasown: 2.0.2
-
-  is-data-view@1.0.1:
-    dependencies:
-      is-typed-array: 1.1.13
-
-  is-date-object@1.0.5:
-    dependencies:
-      has-tostringtag: 1.0.2
-
-  is-descriptor@0.1.7:
-    dependencies:
-      is-accessor-descriptor: 1.0.1
-      is-data-descriptor: 1.0.1
-
-  is-descriptor@1.0.3:
-    dependencies:
-      is-accessor-descriptor: 1.0.1
-      is-data-descriptor: 1.0.1
-
-  is-extendable@0.1.1: {}
-
-  is-extendable@1.0.1:
-    dependencies:
-      is-plain-object: 2.0.4
-
-  is-extglob@2.1.1: {}
-
-  is-finalizationregistry@1.1.0:
-    dependencies:
-      call-bind: 1.0.7
-
-  is-fullwidth-code-point@3.0.0: {}
-
-  is-generator-function@1.0.10:
-    dependencies:
-      has-tostringtag: 1.0.2
-
-  is-glob@4.0.3:
-    dependencies:
-      is-extglob: 2.1.1
-
-  is-interactive@1.0.0: {}
-
-  is-lambda@1.0.1: {}
-
-  is-map@2.0.3: {}
-
-  is-negative-zero@2.0.3: {}
-
-  is-number-object@1.1.0:
-    dependencies:
-      call-bind: 1.0.7
-      has-tostringtag: 1.0.2
-
-  is-number@3.0.0:
-    dependencies:
-      kind-of: 3.2.2
-
-  is-number@7.0.0: {}
-
-  is-plain-object@2.0.4:
-    dependencies:
-      isobject: 3.0.1
-
-  is-regex@1.2.0:
-    dependencies:
-      call-bind: 1.0.7
-      gopd: 1.1.0
-      has-tostringtag: 1.0.2
-      hasown: 2.0.2
-
-  is-set@2.0.3: {}
-
-  is-shared-array-buffer@1.0.3:
-    dependencies:
-      call-bind: 1.0.7
-
-  is-string@1.1.0:
-    dependencies:
-      call-bind: 1.0.7
-      has-tostringtag: 1.0.2
-
-  is-symbol@1.1.0:
-    dependencies:
-      call-bind: 1.0.7
-      has-symbols: 1.1.0
-      safe-regex-test: 1.0.3
-
-  is-typed-array@1.1.13:
-    dependencies:
-      which-typed-array: 1.1.16
-
-  is-unicode-supported@0.1.0: {}
-
-  is-weakmap@2.0.2: {}
-
-  is-weakref@1.0.2:
-    dependencies:
-      call-bind: 1.0.7
-
-  is-weakset@2.0.3:
-    dependencies:
-      call-bind: 1.0.7
-      get-intrinsic: 1.2.4
-
-  is-windows@1.0.2: {}
-
-  isarray@1.0.0: {}
-
-  isarray@2.0.5: {}
-
-  isbinaryfile@4.0.10: {}
-
-  isbinaryfile@5.0.4: {}
-
-  isexe@2.0.0: {}
-
-  isobject@2.1.0:
-    dependencies:
-      isarray: 1.0.0
-
-  isobject@3.0.1: {}
-
-  jackspeak@3.4.3:
-    dependencies:
-      '@isaacs/cliui': 8.0.2
-    optionalDependencies:
-      '@pkgjs/parseargs': 0.11.0
-
-  jake@10.9.2:
-    dependencies:
-      async: 3.2.6
-      chalk: 4.1.2
-      filelist: 1.0.4
-      minimatch: 3.1.2
-
-  js-yaml@4.1.0:
-    dependencies:
-      argparse: 2.0.1
-
-  jsbn@1.1.0: {}
-
-  json-buffer@3.0.1: {}
-
-  json-schema-traverse@0.4.1: {}
-
-  json-stable-stringify-without-jsonify@1.0.1: {}
-
-  json-stringify-safe@5.0.1:
-    optional: true
-
-  json5@1.0.2:
-    dependencies:
-      minimist: 1.2.8
-
-  json5@2.2.3: {}
-
-  jsonfile@4.0.0:
-    optionalDependencies:
-      graceful-fs: 4.2.11
-
-  jsonfile@6.1.0:
-    dependencies:
-      universalify: 2.0.1
-    optionalDependencies:
-      graceful-fs: 4.2.11
-
-  keyv@4.5.4:
-    dependencies:
-      json-buffer: 3.0.1
-
-  kind-of@3.2.2:
-    dependencies:
-      is-buffer: 1.1.6
-
-  kind-of@4.0.0:
-    dependencies:
-      is-buffer: 1.1.6
-
-  kind-of@6.0.3: {}
-
-  lazy-val@1.0.5: {}
-
-  lazystream@1.0.1:
-    dependencies:
-      readable-stream: 2.3.8
-
-  levn@0.4.1:
-    dependencies:
-      prelude-ls: 1.2.1
-      type-check: 0.4.0
-
-  locate-path@6.0.0:
-    dependencies:
-      p-locate: 5.0.0
-
-  lodash.defaults@4.2.0: {}
-
-  lodash.difference@4.5.0: {}
-
-  lodash.escaperegexp@4.1.2: {}
-
-  lodash.flatten@4.4.0: {}
-
-  lodash.isequal@4.5.0: {}
-
-  lodash.isplainobject@4.0.6: {}
-
-  lodash.merge@4.6.2: {}
-
-  lodash.union@4.6.0: {}
-
-  lodash@4.17.21: {}
-
-  log-symbols@4.1.0:
-    dependencies:
-      chalk: 4.1.2
-      is-unicode-supported: 0.1.0
-
-  lowercase-keys@2.0.0: {}
-
-  lru-cache@10.4.3: {}
-
-  lru-cache@6.0.0:
-    dependencies:
-      yallist: 4.0.0
-
-  lru-cache@7.18.3: {}
-
-  make-fetch-happen@10.2.1:
-    dependencies:
-      agentkeepalive: 4.5.0
-      cacache: 16.1.3
-      http-cache-semantics: 4.1.1
-      http-proxy-agent: 5.0.0
-      https-proxy-agent: 5.0.1
-      is-lambda: 1.0.1
-      lru-cache: 7.18.3
-      minipass: 3.3.6
-      minipass-collect: 1.0.2
-      minipass-fetch: 2.1.2
-      minipass-flush: 1.0.5
-      minipass-pipeline: 1.2.4
-      negotiator: 0.6.4
-      promise-retry: 2.0.1
-      socks-proxy-agent: 7.0.0
-      ssri: 9.0.1
-    transitivePeerDependencies:
-      - bluebird
-      - supports-color
-
-  map-cache@0.2.2: {}
-
-  map-visit@1.0.0:
-    dependencies:
-      object-visit: 1.0.1
-
-  matcher@3.0.0:
-    dependencies:
-      escape-string-regexp: 4.0.0
-    optional: true
-
-  memory-stream@1.0.0:
-    dependencies:
-      readable-stream: 3.6.2
-    optional: true
-
-  merge2@1.4.1: {}
-
-  micromatch@4.0.8:
-    dependencies:
-      braces: 3.0.3
-      picomatch: 2.3.1
-
-  mime-db@1.52.0: {}
-
-  mime-types@2.1.35:
-    dependencies:
-      mime-db: 1.52.0
-
-  mime@2.6.0: {}
-
-  mimic-fn@2.1.0: {}
-
-  mimic-response@1.0.1: {}
-
-  mimic-response@3.1.0: {}
-
-  minimatch@10.0.1:
-    dependencies:
-      brace-expansion: 2.0.1
-
-  minimatch@3.1.2:
-    dependencies:
-      brace-expansion: 1.1.11
-
-  minimatch@5.1.6:
-    dependencies:
-      brace-expansion: 2.0.1
-
-  minimatch@9.0.5:
-    dependencies:
-      brace-expansion: 2.0.1
-
-  minimist@1.2.8: {}
-
-  minipass-collect@1.0.2:
-    dependencies:
-      minipass: 3.3.6
-
-  minipass-fetch@2.1.2:
-    dependencies:
-      minipass: 3.3.6
-      minipass-sized: 1.0.3
-      minizlib: 2.1.2
-    optionalDependencies:
-      encoding: 0.1.13
-
-  minipass-flush@1.0.5:
-    dependencies:
-      minipass: 3.3.6
-
-  minipass-pipeline@1.2.4:
-    dependencies:
-      minipass: 3.3.6
-
-  minipass-sized@1.0.3:
-    dependencies:
-      minipass: 3.3.6
-
-  minipass@3.3.6:
-    dependencies:
-      yallist: 4.0.0
-
-  minipass@5.0.0: {}
-
-  minipass@7.1.2: {}
-
-  minizlib@2.1.2:
-    dependencies:
-      minipass: 3.3.6
-      yallist: 4.0.0
-
-  mixin-deep@1.3.2:
-    dependencies:
-      for-in: 1.0.2
-      is-extendable: 1.0.1
-
-  mkdirp@1.0.4: {}
-
-  moment@2.30.1: {}
-
-  ms@2.0.0: {}
-
-  ms@2.1.3: {}
-
-  nanomatch@1.2.13:
-    dependencies:
-      arr-diff: 4.0.0
-      array-unique: 0.3.2
-      define-property: 2.0.2
-      extend-shallow: 3.0.2
-      fragment-cache: 0.2.1
-      is-windows: 1.0.2
-      kind-of: 6.0.3
-      object.pick: 1.3.0
-      regex-not: 1.0.2
-      snapdragon: 0.8.2
-      to-regex: 3.0.2
-    transitivePeerDependencies:
-      - supports-color
-
-  natural-compare@1.4.0: {}
-
-  negotiator@0.6.4: {}
-
-  node-abi@3.71.0:
-    dependencies:
-      semver: 7.6.3
-
-  node-addon-api@1.7.2:
-    optional: true
-
-  node-addon-api@8.3.0:
-    optional: true
-
-  node-api-headers@1.4.0:
-    optional: true
-
-  node-api-version@0.2.0:
-    dependencies:
-      semver: 7.6.3
-
-  node-gyp@9.4.1:
-    dependencies:
-      env-paths: 2.2.1
-      exponential-backoff: 3.1.1
-      glob: 7.2.3
-      graceful-fs: 4.2.11
-      make-fetch-happen: 10.2.1
-      nopt: 6.0.0
-      npmlog: 6.0.2
-      rimraf: 3.0.2
-      semver: 7.6.3
-      tar: 6.2.1
-      which: 2.0.2
-    transitivePeerDependencies:
-      - bluebird
-      - supports-color
-
-  nopt@6.0.0:
-    dependencies:
-      abbrev: 1.1.1
-
-  normalize-path@3.0.0: {}
-
-  normalize-url@6.1.0: {}
-
-  npmlog@6.0.2:
-    dependencies:
-      are-we-there-yet: 3.0.1
-      console-control-strings: 1.1.0
-      gauge: 4.0.4
-      set-blocking: 2.0.0
-
-  object-copy@0.1.0:
-    dependencies:
-      copy-descriptor: 0.1.1
-      define-property: 0.2.5
-      kind-of: 3.2.2
-
-  object-inspect@1.13.3: {}
-
-  object-keys@1.1.1: {}
-
-  object-visit@1.0.1:
-    dependencies:
-      isobject: 3.0.1
-
-  object.assign@4.1.5:
-    dependencies:
-      call-bind: 1.0.7
-      define-properties: 1.2.1
-      has-symbols: 1.1.0
-      object-keys: 1.1.1
-
-  object.fromentries@2.0.8:
-    dependencies:
-      call-bind: 1.0.7
-      define-properties: 1.2.1
-      es-abstract: 1.23.5
-      es-object-atoms: 1.0.0
-
-  object.groupby@1.0.3:
-    dependencies:
-      call-bind: 1.0.7
-      define-properties: 1.2.1
-      es-abstract: 1.23.5
-
-  object.pick@1.3.0:
-    dependencies:
-      isobject: 3.0.1
-
-  object.values@1.2.0:
-    dependencies:
-      call-bind: 1.0.7
-      define-properties: 1.2.1
-      es-object-atoms: 1.0.0
-
-  once@1.4.0:
-    dependencies:
-      wrappy: 1.0.2
-
-  onetime@5.1.2:
-    dependencies:
-      mimic-fn: 2.1.0
-
-  optionator@0.9.4:
-    dependencies:
-      deep-is: 0.1.4
-      fast-levenshtein: 2.0.6
-      levn: 0.4.1
-      prelude-ls: 1.2.1
-      type-check: 0.4.0
-      word-wrap: 1.2.5
-
-  ora@5.4.1:
-    dependencies:
-      bl: 4.1.0
-      chalk: 4.1.2
-      cli-cursor: 3.1.0
-      cli-spinners: 2.9.2
-      is-interactive: 1.0.0
-      is-unicode-supported: 0.1.0
-      log-symbols: 4.1.0
-      strip-ansi: 6.0.1
-      wcwidth: 1.0.1
-
-  p-cancelable@2.1.1: {}
-
-  p-limit@3.1.0:
-    dependencies:
-      yocto-queue: 0.1.0
-
-  p-locate@5.0.0:
-    dependencies:
-      p-limit: 3.1.0
-
-  p-map@4.0.0:
-    dependencies:
-      aggregate-error: 3.1.0
-
-  package-json-from-dist@1.0.1: {}
-
-  parent-module@1.0.1:
-    dependencies:
-      callsites: 3.1.0
-
-  parse-passwd@1.0.0: {}
-
-  pascalcase@0.1.1: {}
-
-  path-exists@4.0.0: {}
-
-  path-is-absolute@1.0.1: {}
-
-  path-key@3.1.1: {}
-
-  path-parse@1.0.7: {}
-
-  path-scurry@1.11.1:
-    dependencies:
-      lru-cache: 10.4.3
-      minipass: 7.1.2
-
-  pe-library@0.4.1: {}
-
-  pend@1.2.0: {}
-
-  picomatch@2.3.1: {}
-
-  picomatch@4.0.2: {}
-
-  pkg-prebuilds@0.2.1:
-    dependencies:
-      yargs: 17.7.2
-    optional: true
-
-  plist@3.1.0:
-    dependencies:
-      '@xmldom/xmldom': 0.8.10
-      base64-js: 1.5.1
-      xmlbuilder: 15.1.1
-
-  possible-typed-array-names@1.0.0: {}
-
-  prelude-ls@1.2.1: {}
-
-  prettier-linter-helpers@1.0.0:
-    dependencies:
-      fast-diff: 1.3.0
-
-  prettier@3.4.1: {}
-
-  process-nextick-args@2.0.1: {}
-
-  progress@2.0.3: {}
-
-  promise-inflight@1.0.1: {}
-
-  promise-retry@2.0.1:
-    dependencies:
-      err-code: 2.0.3
-      retry: 0.12.0
-
-  proxy-from-env@1.1.0:
-    optional: true
-
-  pump@3.0.2:
-    dependencies:
-      end-of-stream: 1.4.4
-      once: 1.4.0
-
-  punycode@2.3.1: {}
-
-  queue-microtask@1.2.3: {}
-
-  quick-lru@5.1.1: {}
-
-  rc@1.2.8:
-    dependencies:
-      deep-extend: 0.6.0
-      ini: 1.3.8
-      minimist: 1.2.8
-      strip-json-comments: 2.0.1
-    optional: true
-
-  read-binary-file-arch@1.0.6:
-    dependencies:
-      debug: 4.3.7
-    transitivePeerDependencies:
-      - supports-color
-
-  readable-stream@2.3.8:
-    dependencies:
-      core-util-is: 1.0.3
-      inherits: 2.0.4
-      isarray: 1.0.0
-      process-nextick-args: 2.0.1
-      safe-buffer: 5.1.2
-      string_decoder: 1.1.1
-      util-deprecate: 1.0.2
-
-  readable-stream@3.6.2:
-    dependencies:
-      inherits: 2.0.4
-      string_decoder: 1.3.0
-      util-deprecate: 1.0.2
-
-  readdir-glob@1.1.3:
-    dependencies:
-      minimatch: 5.1.6
-
-  reflect.getprototypeof@1.0.7:
-    dependencies:
-      call-bind: 1.0.7
-      define-properties: 1.2.1
-      es-abstract: 1.23.5
-      es-errors: 1.3.0
-      get-intrinsic: 1.2.4
-      gopd: 1.1.0
-      which-builtin-type: 1.2.0
-
-  regex-not@1.0.2:
-    dependencies:
-      extend-shallow: 3.0.2
-      safe-regex: 1.1.0
-
-  regexp.prototype.flags@1.5.3:
-    dependencies:
-      call-bind: 1.0.7
-      define-properties: 1.2.1
-      es-errors: 1.3.0
-      set-function-name: 2.0.2
-
-  require-directory@2.1.1: {}
-
-  resedit@1.7.2:
-    dependencies:
-      pe-library: 0.4.1
-
-  resolve-alpn@1.2.1: {}
-
-  resolve-dir@1.0.1:
-    dependencies:
-      expand-tilde: 2.0.2
-      global-modules: 1.0.0
-
-  resolve-from@4.0.0: {}
-
-  resolve-pkg-maps@1.0.0: {}
-
-  resolve-url@0.2.1: {}
-
-  resolve@1.22.8:
-    dependencies:
-      is-core-module: 2.15.1
-      path-parse: 1.0.7
-      supports-preserve-symlinks-flag: 1.0.0
-
-  responselike@2.0.1:
-    dependencies:
-      lowercase-keys: 2.0.0
-
-  restore-cursor@3.1.0:
-    dependencies:
-      onetime: 5.1.2
-      signal-exit: 3.0.7
-
-  ret@0.1.15: {}
-
-  retry@0.12.0: {}
-
-  reusify@1.0.4: {}
-
-  rimraf@3.0.2:
-    dependencies:
-      glob: 7.2.3
-
-  roarr@2.15.4:
-    dependencies:
-      boolean: 3.2.0
-      detect-node: 2.1.0
-      globalthis: 1.0.4
-      json-stringify-safe: 5.0.1
-      semver-compare: 1.0.0
-      sprintf-js: 1.1.3
-    optional: true
-
-  run-parallel@1.2.0:
-    dependencies:
-      queue-microtask: 1.2.3
-
-  safe-array-concat@1.1.2:
-    dependencies:
-      call-bind: 1.0.7
-      get-intrinsic: 1.2.4
-      has-symbols: 1.1.0
-      isarray: 2.0.5
-
-  safe-buffer@5.1.2: {}
-
-  safe-buffer@5.2.1: {}
-
-  safe-regex-test@1.0.3:
-    dependencies:
-      call-bind: 1.0.7
-      es-errors: 1.3.0
-      is-regex: 1.2.0
-
-  safe-regex@1.1.0:
-    dependencies:
-      ret: 0.1.15
-
-  safer-buffer@2.1.2: {}
-
-  sanitize-filename@1.6.3:
-    dependencies:
-      truncate-utf8-bytes: 1.0.2
-
-  sax@1.4.1: {}
-
-  semver-compare@1.0.0:
-    optional: true
-
-  semver@6.3.1: {}
-
-  semver@7.6.3: {}
-
-  serialize-error@7.0.1:
-    dependencies:
-      type-fest: 0.13.1
-    optional: true
-
-  set-blocking@2.0.0: {}
-
-  set-function-length@1.2.2:
-    dependencies:
-      define-data-property: 1.1.4
-      es-errors: 1.3.0
-      function-bind: 1.1.2
-      get-intrinsic: 1.2.4
-      gopd: 1.1.0
-      has-property-descriptors: 1.0.2
-
-  set-function-name@2.0.2:
-    dependencies:
-      define-data-property: 1.1.4
-      es-errors: 1.3.0
-      functions-have-names: 1.2.3
-      has-property-descriptors: 1.0.2
-
-  set-value@2.0.1:
-    dependencies:
-      extend-shallow: 2.0.1
-      is-extendable: 0.1.1
-      is-plain-object: 2.0.4
-      split-string: 3.1.0
-
-  shebang-command@2.0.0:
-    dependencies:
-      shebang-regex: 3.0.0
-
-  shebang-regex@3.0.0: {}
-
-  side-channel@1.0.6:
-    dependencies:
-      call-bind: 1.0.7
-      es-errors: 1.3.0
-      get-intrinsic: 1.2.4
-      object-inspect: 1.13.3
-
-  signal-exit@3.0.7: {}
-
-  signal-exit@4.1.0: {}
-
-  simple-update-notifier@2.0.0:
-    dependencies:
-      semver: 7.6.3
-
-  slice-ansi@3.0.0:
-    dependencies:
-      ansi-styles: 4.3.0
-      astral-regex: 2.0.0
-      is-fullwidth-code-point: 3.0.0
-    optional: true
-
-  smart-buffer@4.2.0: {}
-
-  snapdragon@0.8.2:
-    dependencies:
-      base: 0.11.2
-      debug: 2.6.9
-      define-property: 0.2.5
-      extend-shallow: 2.0.1
-      map-cache: 0.2.2
-      source-map: 0.5.7
-      source-map-resolve: 0.5.3
-      use: 3.1.1
-    transitivePeerDependencies:
-      - supports-color
-
-  socks-proxy-agent@7.0.0:
-    dependencies:
-      agent-base: 6.0.2
-      debug: 4.3.7
-      socks: 2.8.3
-    transitivePeerDependencies:
-      - supports-color
-
-  socks@2.8.3:
-    dependencies:
-      ip-address: 9.0.5
-      smart-buffer: 4.2.0
-
-  source-map-resolve@0.5.3:
-    dependencies:
-      atob: 2.1.2
-      decode-uri-component: 0.2.2
-      resolve-url: 0.2.1
-      source-map-url: 0.4.1
-      urix: 0.1.0
-
-  source-map-support@0.5.21:
-    dependencies:
-      buffer-from: 1.1.2
-      source-map: 0.6.1
-
-  source-map-url@0.4.1: {}
-
-  source-map@0.5.7: {}
-
-  source-map@0.6.1: {}
-
-  split-string@3.1.0:
-    dependencies:
-      extend-shallow: 3.0.2
-
-  sprintf-js@1.1.3: {}
-
-  ssri@9.0.1:
-    dependencies:
-      minipass: 3.3.6
-
-  standalone-electron-types@1.0.0:
-    dependencies:
-      '@types/node': 18.19.67
-
-  stat-mode@1.0.0: {}
-
-  static-extend@0.1.2:
-    dependencies:
-      define-property: 0.2.5
-      object-copy: 0.1.0
-
-  string-width@4.2.3:
-    dependencies:
-      emoji-regex: 8.0.0
-      is-fullwidth-code-point: 3.0.0
-      strip-ansi: 6.0.1
-
-  string-width@5.1.2:
-    dependencies:
-      eastasianwidth: 0.2.0
-      emoji-regex: 9.2.2
-      strip-ansi: 7.1.0
-
-  string.prototype.trim@1.2.9:
-    dependencies:
-      call-bind: 1.0.7
-      define-properties: 1.2.1
-      es-abstract: 1.23.5
-      es-object-atoms: 1.0.0
-
-  string.prototype.trimend@1.0.8:
-    dependencies:
-      call-bind: 1.0.7
-      define-properties: 1.2.1
-      es-object-atoms: 1.0.0
-
-  string.prototype.trimstart@1.0.8:
-    dependencies:
-      call-bind: 1.0.7
-      define-properties: 1.2.1
-      es-object-atoms: 1.0.0
-
-  string_decoder@1.1.1:
-    dependencies:
-      safe-buffer: 5.1.2
-
-  string_decoder@1.3.0:
-    dependencies:
-      safe-buffer: 5.2.1
-
-  strip-ansi@6.0.1:
-    dependencies:
-      ansi-regex: 5.0.1
-
-  strip-ansi@7.1.0:
-    dependencies:
-      ansi-regex: 6.1.0
-
-  strip-bom@3.0.0: {}
-
-  strip-json-comments@2.0.1:
-    optional: true
-
-  strip-json-comments@3.1.1: {}
-
-  sumchecker@3.0.1:
-    dependencies:
-      debug: 4.3.7
-    transitivePeerDependencies:
-      - supports-color
-
-  supports-color@7.2.0:
-    dependencies:
-      has-flag: 4.0.0
-
-  supports-preserve-symlinks-flag@1.0.0: {}
-
-  synckit@0.9.2:
-    dependencies:
-      '@pkgr/core': 0.1.1
-      tslib: 2.8.1
-
-  tar-stream@2.2.0:
-    dependencies:
-      bl: 4.1.0
-      end-of-stream: 1.4.4
-      fs-constants: 1.0.0
-      inherits: 2.0.4
-      readable-stream: 3.6.2
-
-  tar@6.2.1:
-    dependencies:
-      chownr: 2.0.0
-      fs-minipass: 2.1.0
-      minipass: 5.0.0
-      minizlib: 2.1.2
-      mkdirp: 1.0.4
-      yallist: 4.0.0
-
-  temp-file@3.4.0:
-    dependencies:
-      async-exit-hook: 2.0.1
-      fs-extra: 10.1.0
-
-  tiny-typed-emitter@2.1.0: {}
-
-  tmp-promise@3.0.3:
-    dependencies:
-      tmp: 0.2.3
-
-  tmp@0.2.3: {}
-
-  to-object-path@0.3.0:
-    dependencies:
-      kind-of: 3.2.2
-
-  to-regex-range@5.0.1:
-    dependencies:
-      is-number: 7.0.0
-
-  to-regex@3.0.2:
-    dependencies:
-      define-property: 2.0.2
-      extend-shallow: 3.0.2
-      regex-not: 1.0.2
-      safe-regex: 1.1.0
-
-  truncate-utf8-bytes@1.0.2:
-    dependencies:
-      utf8-byte-length: 1.0.5
-
-  ts-api-utils@1.4.3(typescript@5.7.2):
-    dependencies:
-      typescript: 5.7.2
-
-  tsconfig-paths@3.15.0:
-    dependencies:
-      '@types/json5': 0.0.29
-      json5: 1.0.2
-      minimist: 1.2.8
-      strip-bom: 3.0.0
-
-  tslib@2.8.1: {}
-
-  tsx@4.19.2:
-    dependencies:
-      esbuild: 0.23.1
-      get-tsconfig: 4.8.1
-    optionalDependencies:
-      fsevents: 2.3.3
-
-  type-check@0.4.0:
-    dependencies:
-      prelude-ls: 1.2.1
-
-  type-fest@0.13.1:
-    optional: true
-
-  type-fest@3.13.1: {}
-
-  type-fest@4.30.0: {}
-
-  typed-array-buffer@1.0.2:
-    dependencies:
-      call-bind: 1.0.7
-      es-errors: 1.3.0
-      is-typed-array: 1.1.13
-
-  typed-array-byte-length@1.0.1:
-    dependencies:
-      call-bind: 1.0.7
-      for-each: 0.3.3
-      gopd: 1.1.0
-      has-proto: 1.1.0
-      is-typed-array: 1.1.13
-
-  typed-array-byte-offset@1.0.3:
-    dependencies:
-      available-typed-arrays: 1.0.7
-      call-bind: 1.0.7
-      for-each: 0.3.3
-      gopd: 1.1.0
-      has-proto: 1.1.0
-      is-typed-array: 1.1.13
-      reflect.getprototypeof: 1.0.7
-
-  typed-array-length@1.0.7:
-    dependencies:
-      call-bind: 1.0.7
-      for-each: 0.3.3
-      gopd: 1.1.0
-      is-typed-array: 1.1.13
-      possible-typed-array-names: 1.0.0
-      reflect.getprototypeof: 1.0.7
-
-  typescript-eslint@8.17.0(eslint@9.16.0)(typescript@5.7.2):
-    dependencies:
-      '@typescript-eslint/eslint-plugin': 8.17.0(@typescript-eslint/parser@8.17.0(eslint@9.16.0)(typescript@5.7.2))(eslint@9.16.0)(typescript@5.7.2)
-      '@typescript-eslint/parser': 8.17.0(eslint@9.16.0)(typescript@5.7.2)
-      '@typescript-eslint/utils': 8.17.0(eslint@9.16.0)(typescript@5.7.2)
-      eslint: 9.16.0
-    optionalDependencies:
-      typescript: 5.7.2
-    transitivePeerDependencies:
-      - supports-color
-
-  typescript@5.7.2: {}
-
-  unbox-primitive@1.0.2:
-    dependencies:
-      call-bind: 1.0.7
-      has-bigints: 1.0.2
-      has-symbols: 1.1.0
-      which-boxed-primitive: 1.1.0
-
-  undici-types@5.26.5: {}
-
-  undici-types@6.19.8: {}
-
-  undici-types@6.20.0: {}
-
-  union-value@1.0.1:
-    dependencies:
-      arr-union: 3.1.0
-      get-value: 2.0.6
-      is-extendable: 0.1.1
-      set-value: 2.0.1
-
-  unique-filename@2.0.1:
-    dependencies:
-      unique-slug: 3.0.0
-
-  unique-slug@3.0.0:
-    dependencies:
-      imurmurhash: 0.1.4
-
-  universalify@0.1.2: {}
-
-  universalify@2.0.1: {}
-
-  unset-value@1.0.0:
-    dependencies:
-      has-value: 0.3.1
-      isobject: 3.0.1
-
-  uri-js@4.4.1:
-    dependencies:
-      punycode: 2.3.1
-
-  urix@0.1.0: {}
-
-  url-join@4.0.1:
-    optional: true
-
-  use@3.1.1: {}
-
-  utf8-byte-length@1.0.5: {}
-
-  util-deprecate@1.0.2: {}
-
-  verror@1.10.1:
-    dependencies:
-      assert-plus: 1.0.0
-      core-util-is: 1.0.2
-      extsprintf: 1.4.1
-    optional: true
-
-  wcwidth@1.0.1:
-    dependencies:
-      defaults: 1.0.4
-
-  which-boxed-primitive@1.1.0:
-    dependencies:
-      is-bigint: 1.1.0
-      is-boolean-object: 1.2.0
-      is-number-object: 1.1.0
-      is-string: 1.1.0
-      is-symbol: 1.1.0
-
-  which-builtin-type@1.2.0:
-    dependencies:
-      call-bind: 1.0.7
-      function.prototype.name: 1.1.6
-      has-tostringtag: 1.0.2
-      is-async-function: 2.0.0
-      is-date-object: 1.0.5
-      is-finalizationregistry: 1.1.0
-      is-generator-function: 1.0.10
-      is-regex: 1.2.0
-      is-weakref: 1.0.2
-      isarray: 2.0.5
-      which-boxed-primitive: 1.1.0
-      which-collection: 1.0.2
-      which-typed-array: 1.1.16
-
-  which-collection@1.0.2:
-    dependencies:
-      is-map: 2.0.3
-      is-set: 2.0.3
-      is-weakmap: 2.0.2
-      is-weakset: 2.0.3
-
-  which-typed-array@1.1.16:
-    dependencies:
-      available-typed-arrays: 1.0.7
-      call-bind: 1.0.7
-      for-each: 0.3.3
-      gopd: 1.1.0
-      has-tostringtag: 1.0.2
-
-  which@1.3.1:
-    dependencies:
-      isexe: 2.0.0
-
-  which@2.0.2:
-    dependencies:
-      isexe: 2.0.0
-
-  wide-align@1.1.5:
-    dependencies:
-      string-width: 4.2.3
-
-  word-wrap@1.2.5: {}
-
-  wrap-ansi@7.0.0:
-    dependencies:
-      ansi-styles: 4.3.0
-      string-width: 4.2.3
-      strip-ansi: 6.0.1
-
-  wrap-ansi@8.1.0:
-    dependencies:
-      ansi-styles: 6.2.1
-      string-width: 5.1.2
-      strip-ansi: 7.1.0
-
-  wrappy@1.0.2: {}
-
-  ws@8.18.0: {}
-
-  xml-formatter@3.6.3:
-    dependencies:
-      xml-parser-xo: 4.1.2
-
-  xml-parser-xo@4.1.2: {}
-
-  xmlbuilder@15.1.1: {}
-
-  y18n@5.0.8: {}
-
-  yallist@4.0.0: {}
-
-  yargs-parser@21.1.1: {}
-
-  yargs@17.7.2:
-    dependencies:
-      cliui: 8.0.1
-      escalade: 3.2.0
-      get-caller-file: 2.0.5
-      require-directory: 2.1.1
-      string-width: 4.2.3
-      y18n: 5.0.8
-      yargs-parser: 21.1.1
-
-  yauzl@2.10.0:
-    dependencies:
-      buffer-crc32: 0.2.13
-      fd-slicer: 1.1.0
-
-  yocto-queue@0.1.0: {}
-
-  zip-stream@4.1.1:
-    dependencies:
-      archiver-utils: 3.0.4
-      compress-commons: 4.1.2
-      readable-stream: 3.6.2
+    wcwidth@1.0.1:
+        dependencies:
+            defaults: 1.0.4
+
+    which-boxed-primitive@1.1.0:
+        dependencies:
+            is-bigint: 1.1.0
+            is-boolean-object: 1.2.0
+            is-number-object: 1.1.0
+            is-string: 1.1.0
+            is-symbol: 1.1.0
+
+    which-builtin-type@1.2.0:
+        dependencies:
+            call-bind: 1.0.7
+            function.prototype.name: 1.1.6
+            has-tostringtag: 1.0.2
+            is-async-function: 2.0.0
+            is-date-object: 1.0.5
+            is-finalizationregistry: 1.1.0
+            is-generator-function: 1.0.10
+            is-regex: 1.2.0
+            is-weakref: 1.0.2
+            isarray: 2.0.5
+            which-boxed-primitive: 1.1.0
+            which-collection: 1.0.2
+            which-typed-array: 1.1.16
+
+    which-collection@1.0.2:
+        dependencies:
+            is-map: 2.0.3
+            is-set: 2.0.3
+            is-weakmap: 2.0.2
+            is-weakset: 2.0.3
+
+    which-typed-array@1.1.16:
+        dependencies:
+            available-typed-arrays: 1.0.7
+            call-bind: 1.0.7
+            for-each: 0.3.3
+            gopd: 1.1.0
+            has-tostringtag: 1.0.2
+
+    which@1.3.1:
+        dependencies:
+            isexe: 2.0.0
+
+    which@2.0.2:
+        dependencies:
+            isexe: 2.0.0
+
+    wide-align@1.1.5:
+        dependencies:
+            string-width: 4.2.3
+
+    word-wrap@1.2.5: {}
+
+    wrap-ansi@7.0.0:
+        dependencies:
+            ansi-styles: 4.3.0
+            string-width: 4.2.3
+            strip-ansi: 6.0.1
+
+    wrap-ansi@8.1.0:
+        dependencies:
+            ansi-styles: 6.2.1
+            string-width: 5.1.2
+            strip-ansi: 7.1.0
+
+    wrappy@1.0.2: {}
+
+    ws@8.18.0: {}
+
+    xml-formatter@3.6.3:
+        dependencies:
+            xml-parser-xo: 4.1.2
+
+    xml-parser-xo@4.1.2: {}
+
+    xmlbuilder@15.1.1: {}
+
+    y18n@5.0.8: {}
+
+    yallist@4.0.0: {}
+
+    yargs-parser@21.1.1: {}
+
+    yargs@17.7.2:
+        dependencies:
+            cliui: 8.0.1
+            escalade: 3.2.0
+            get-caller-file: 2.0.5
+            require-directory: 2.1.1
+            string-width: 4.2.3
+            y18n: 5.0.8
+            yargs-parser: 21.1.1
+
+    yauzl@2.10.0:
+        dependencies:
+            buffer-crc32: 0.2.13
+            fd-slicer: 1.1.0
+
+    yocto-queue@0.1.0: {}
+
+    zip-stream@4.1.1:
+        dependencies:
+            archiver-utils: 3.0.4
+            compress-commons: 4.1.2
+            readable-stream: 3.6.2
diff --git a/scripts/build/build.mts b/scripts/build/build.mts
index 243381ba..fa832e35 100644
--- a/scripts/build/build.mts
+++ b/scripts/build/build.mts
@@ -45,6 +45,10 @@ async function copyVenmic() {
         copyFile(
             "./node_modules/@vencord/venmic/prebuilds/venmic-addon-linux-arm64/node-napi-v7.node",
             "./static/dist/venmic-arm64.node"
+        ),
+        copyFile(
+            "./node_modules/venbind/prebuilds/linux-x86_64/venbind-linux-x86_64.node",
+            "./static/dist/venbind-linux-x86_64.node"
         )
     ]).catch(() => console.warn("Failed to copy venmic. Building without venmic support"));
 }
diff --git a/src/main/index.ts b/src/main/index.ts
index e732b662..e8af42b3 100644
--- a/src/main/index.ts
+++ b/src/main/index.ts
@@ -16,6 +16,7 @@ import { registerMediaPermissionsHandler } from "./mediaPermissions";
 import { registerScreenShareHandler } from "./screenShare";
 import { Settings, State } from "./settings";
 import { isDeckGameMode } from "./utils/steamOS";
+import { startVenbind } from "./venbind";
 
 if (IS_DEV) {
     require("source-map-support").install();
@@ -91,6 +92,7 @@ function init() {
     app.whenReady().then(async () => {
         if (process.platform === "win32") app.setAppUserModelId("dev.vencord.vesktop");
 
+        startVenbind();
         registerScreenShareHandler();
         registerMediaPermissionsHandler();
 
diff --git a/src/main/ipc.ts b/src/main/ipc.ts
index 6e040857..4fa662c3 100644
--- a/src/main/ipc.ts
+++ b/src/main/ipc.ts
@@ -135,15 +135,6 @@ handle(IpcEvents.CLIPBOARD_COPY_IMAGE, async (_, buf: ArrayBuffer, src: string)
     });
 });
 
-const registered_keybinds = {};
-
-handle(IpcEvents.KEYBIND_REGISTER, (_, id: number, shortcut: string, options: any) => {
-    registered_keybinds[id] = shortcut;
-});
-handle(IpcEvents.KEYBIND_UNREGISTER, (_, id: number) => {
-    delete registered_keybinds[id];
-});
-
 function readCss() {
     return readFile(VENCORD_QUICKCSS_FILE, "utf-8").catch(() => "");
 }
diff --git a/src/main/venbind.ts b/src/main/venbind.ts
new file mode 100644
index 00000000..617b27e5
--- /dev/null
+++ b/src/main/venbind.ts
@@ -0,0 +1,57 @@
+/*
+ * SPDX-License-Identifier: GPL-3.0
+ * Vesktop, a desktop app aiming to give you a snappier Discord Experience
+ * Copyright (c) 2023 Vendicated and Vencord contributors
+ */
+
+import { join } from "path";
+import { IpcEvents } from "shared/IpcEvents";
+import { STATIC_DIR } from "shared/paths";
+import type { Venbind as VenbindType } from "venbind";
+
+import { mainWin } from "./mainWindow";
+import { handle } from "./utils/ipcWrappers";
+
+let venbind: VenbindType | null = null;
+export function obtainVenbind() {
+    // TODO?: make binary outputs consistant with node's apis
+    let os: string;
+    switch (process.platform) {
+        case "linux":
+            os = "linux";
+            break;
+        // case "win32":
+        //     os = "windows";
+        // case "darwin":
+        //     os = "darwin";
+        default:
+            return null;
+    };
+    let arch: string;
+    switch (process.arch) {
+        case "x64":
+            arch = "x86_64";
+            break;
+        // case "arm64":
+        //     arch = "aarch64";
+        //     break;
+        default:
+            return null;
+    };
+    if (venbind == null) venbind = require(join(STATIC_DIR, `dist/venbind-${os}-${arch}.node`));
+    return venbind;
+}
+
+export function startVenbind() {
+    const venbind = obtainVenbind();
+    venbind?.startKeybinds(null, x => {
+        mainWin.webContents.executeJavaScript(`Vesktop.keybindCallbacks[${x}](false)`);
+    });
+}
+
+handle(IpcEvents.KEYBIND_REGISTER, (_, id: number, shortcut: string, options: any) => {
+    obtainVenbind()?.registerKeybind(shortcut, id);
+});
+handle(IpcEvents.KEYBIND_UNREGISTER, (_, id: number) => {
+    obtainVenbind()?.unregisterKeybind(id);
+});

From eea93b51e3777127ab8844fa303848839e32c07f Mon Sep 17 00:00:00 2001
From: Tuxinal <24763016+tuxinal@users.noreply.github.com>
Date: Sun, 18 Aug 2024 19:43:28 +0330
Subject: [PATCH 08/31] separate venbind copy function

---
 scripts/build/build.mts | 10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)

diff --git a/scripts/build/build.mts b/scripts/build/build.mts
index fa832e35..4758d312 100644
--- a/scripts/build/build.mts
+++ b/scripts/build/build.mts
@@ -45,16 +45,22 @@ async function copyVenmic() {
         copyFile(
             "./node_modules/@vencord/venmic/prebuilds/venmic-addon-linux-arm64/node-napi-v7.node",
             "./static/dist/venmic-arm64.node"
-        ),
+        )
+    ]).catch(() => console.warn("Failed to copy venmic. Building without venmic support"));
+}
+
+async function copyVenbind() {
+    return Promise.all([
         copyFile(
             "./node_modules/venbind/prebuilds/linux-x86_64/venbind-linux-x86_64.node",
             "./static/dist/venbind-linux-x86_64.node"
         )
-    ]).catch(() => console.warn("Failed to copy venmic. Building without venmic support"));
+    ]).catch(() => console.warn("Failed to copy venbind. Building without venbind support"));
 }
 
 await Promise.all([
     copyVenmic(),
+    copyVenbind(),
     createContext({
         ...NodeCommonOpts,
         entryPoints: ["src/main/index.ts"],

From 4b14cd4f6fab5b38d72eb9dda1d72949f9c3ac00 Mon Sep 17 00:00:00 2001
From: Tuxinal <24763016+tuxinal@users.noreply.github.com>
Date: Sun, 18 Aug 2024 20:33:19 +0330
Subject: [PATCH 09/31] fix unregistering not working

---
 src/main/venbind.ts              | 54 +++++++++++++++++---------------
 src/renderer/patches/keybinds.ts |  4 +--
 2 files changed, 31 insertions(+), 27 deletions(-)

diff --git a/src/main/venbind.ts b/src/main/venbind.ts
index 617b27e5..5a075f1a 100644
--- a/src/main/venbind.ts
+++ b/src/main/venbind.ts
@@ -14,31 +14,35 @@ import { handle } from "./utils/ipcWrappers";
 
 let venbind: VenbindType | null = null;
 export function obtainVenbind() {
-    // TODO?: make binary outputs consistant with node's apis
-    let os: string;
-    switch (process.platform) {
-        case "linux":
-            os = "linux";
-            break;
-        // case "win32":
-        //     os = "windows";
-        // case "darwin":
-        //     os = "darwin";
-        default:
-            return null;
-    };
-    let arch: string;
-    switch (process.arch) {
-        case "x64":
-            arch = "x86_64";
-            break;
-        // case "arm64":
-        //     arch = "aarch64";
-        //     break;
-        default:
-            return null;
-    };
-    if (venbind == null) venbind = require(join(STATIC_DIR, `dist/venbind-${os}-${arch}.node`));
+    if (venbind == null) {
+        // TODO?: make binary outputs consistant with node's apis
+        let os: string;
+        let arch: string;
+
+        switch (process.platform) {
+            case "linux":
+                os = "linux";
+                break;
+            // case "win32":
+            //     os = "windows";
+            // case "darwin":
+            //     os = "darwin";
+            default:
+                return null;
+        }
+        switch (process.arch) {
+            case "x64":
+                arch = "x86_64";
+                break;
+            // case "arm64":
+            //     arch = "aarch64";
+            //     break;
+            default:
+                return null;
+        }
+
+        venbind = require(join(STATIC_DIR, `dist/venbind-${os}-${arch}.node`));
+    }
     return venbind;
 }
 
diff --git a/src/renderer/patches/keybinds.ts b/src/renderer/patches/keybinds.ts
index fc33f73b..b8550c53 100644
--- a/src/renderer/patches/keybinds.ts
+++ b/src/renderer/patches/keybinds.ts
@@ -43,8 +43,8 @@ addPatch({
                 },
                 {
                     // eslint-disable-next-line no-useless-escape
-                    match: /inputEventUnregister\((parseInt\(\i,10\))\);else if\(\i\[\i\]\)\{/,
-                    replace: "$&$self.unregisterKeybind($1);return;"
+                    match: /inputEventUnregister\((parseInt\(\i,10\))\);else/,
+                    replace: "$&{$self.unregisterKeybind($1);return;}"
                 }
             ]
         }

From f79ee94301f316c139e58be3d0df64f332b09c1b Mon Sep 17 00:00:00 2001
From: checkraisefold <checkraisefold@crf.gay>
Date: Tue, 7 Jan 2025 23:13:37 -0800
Subject: [PATCH 10/31] Changes for windows support

---
 scripts/build/build.mts | 9 +++++++++
 src/main/venbind.ts     | 6 ++++--
 2 files changed, 13 insertions(+), 2 deletions(-)

diff --git a/scripts/build/build.mts b/scripts/build/build.mts
index 4758d312..4b967131 100644
--- a/scripts/build/build.mts
+++ b/scripts/build/build.mts
@@ -50,6 +50,15 @@ async function copyVenmic() {
 }
 
 async function copyVenbind() {
+    if (process.platform === "win32") {
+        return Promise.all([
+            copyFile(
+                "./node_modules/venbind/prebuilds/windows-x86_64/venbind-windows-x86_64.node",
+                "./static/dist/venbind-windows-x86_64.node"
+            )
+        ]).catch(() => console.warn("Failed to copy venbind. Building without venbind support"));
+    }
+
     return Promise.all([
         copyFile(
             "./node_modules/venbind/prebuilds/linux-x86_64/venbind-linux-x86_64.node",
diff --git a/src/main/venbind.ts b/src/main/venbind.ts
index 5a075f1a..64ba87de 100644
--- a/src/main/venbind.ts
+++ b/src/main/venbind.ts
@@ -23,10 +23,12 @@ export function obtainVenbind() {
             case "linux":
                 os = "linux";
                 break;
-            // case "win32":
-            //     os = "windows";
+            case "win32":
+                os = "windows";
+                break;
             // case "darwin":
             //     os = "darwin";
+            //     break;
             default:
                 return null;
         }

From 0114f8efa42474e9dae12affa245eed73bfd30f9 Mon Sep 17 00:00:00 2001
From: Tuxinal <24763016+tuxinal@users.noreply.github.com>
Date: Tue, 21 Jan 2025 15:47:48 +0330
Subject: [PATCH 11/31] Add all available actions to globalshortcuts on startup

---
 src/main/venbind.ts              | 18 ++++++++--
 src/preload/VesktopNative.ts     |  4 ++-
 src/renderer/patches/keybinds.ts | 62 +++++++++++++++++++++++++++++++-
 src/shared/IpcEvents.ts          |  5 ++-
 4 files changed, 84 insertions(+), 5 deletions(-)

diff --git a/src/main/venbind.ts b/src/main/venbind.ts
index 64ba87de..0af72636 100644
--- a/src/main/venbind.ts
+++ b/src/main/venbind.ts
@@ -10,7 +10,7 @@ import { STATIC_DIR } from "shared/paths";
 import type { Venbind as VenbindType } from "venbind";
 
 import { mainWin } from "./mainWindow";
-import { handle } from "./utils/ipcWrappers";
+import { handle, handleSync } from "./utils/ipcWrappers";
 
 let venbind: VenbindType | null = null;
 export function obtainVenbind() {
@@ -50,7 +50,7 @@ export function obtainVenbind() {
 
 export function startVenbind() {
     const venbind = obtainVenbind();
-    venbind?.startKeybinds(null, x => {
+    venbind?.startKeybinds(x => {
         mainWin.webContents.executeJavaScript(`Vesktop.keybindCallbacks[${x}](false)`);
     });
 }
@@ -61,3 +61,17 @@ handle(IpcEvents.KEYBIND_REGISTER, (_, id: number, shortcut: string, options: an
 handle(IpcEvents.KEYBIND_UNREGISTER, (_, id: number) => {
     obtainVenbind()?.unregisterKeybind(id);
 });
+handleSync(IpcEvents.KEYBIND_SHOULD_PREREGISTER, _ => {
+    if (
+        process.platform === "linux" &&
+        (process.env.XDG_SESSION_TYPE === "wayland" ||
+            !!process.env.WAYLAND_DISPLAY ||
+            !!process.env.VENBIND_USE_XDG_PORTAL)
+    ) {
+        return true;
+    }
+    return false;
+});
+handle(IpcEvents.KEYBIND_PREREGISTER, (_, actions: { id: number; name: string }[]) => {
+    obtainVenbind()?.preregisterKeybinds(actions);
+});
diff --git a/src/preload/VesktopNative.ts b/src/preload/VesktopNative.ts
index 5f93cfe9..1e49b9a0 100644
--- a/src/preload/VesktopNative.ts
+++ b/src/preload/VesktopNative.ts
@@ -82,6 +82,8 @@ export const VesktopNative = {
     keybind: {
         register: (id: number, shortcut: string, options: any) =>
             invoke<void>(IpcEvents.KEYBIND_REGISTER, id, shortcut),
-        unregister: (id: number) => invoke<void>(IpcEvents.KEYBIND_UNREGISTER, id)
+        unregister: (id: number) => invoke<void>(IpcEvents.KEYBIND_UNREGISTER, id),
+        shouldPreRegister: () => sendSync<boolean>(IpcEvents.KEYBIND_SHOULD_PREREGISTER),
+        preRegister: (actions: { id: number; name: string }[]) => invoke<void>(IpcEvents.KEYBIND_PREREGISTER, actions)
     }
 };
diff --git a/src/renderer/patches/keybinds.ts b/src/renderer/patches/keybinds.ts
index b8550c53..ec0b1cf2 100644
--- a/src/renderer/patches/keybinds.ts
+++ b/src/renderer/patches/keybinds.ts
@@ -9,7 +9,18 @@ import { keybindCallbacks } from "renderer";
 
 import { addPatch } from "./shared";
 const toShortcutString = findByCodeLazy('return"gamepad".');
-
+const actionReadableNames: { [key: string]: string } = {
+    PUSH_TO_TALK: "Push To Talk",
+    PUSH_TO_TALK_PRIORITY: "Push To Talk (Priority)",
+    PUSH_TO_MUTE: "Push To Mute",
+    TOGGLE_MUTE: "Toggle Mute",
+    TOGGLE_DEAFEN: "Toggle Deafen",
+    TOGGLE_VOICE_MODE: "Toggle Voice Activity Mode",
+    TOGGLE_STREAMER_MODE: "Toggle Streamer Mode",
+    NAVIGATE_BACK: "Navigate Back",
+    NAVIGATE_FORWARD: "Navigate Forward",
+    DISCONNECT_FROM_VOICE_CHANNEL: "Disconnect From Voice Channel"
+};
 addPatch({
     patches: [
         {
@@ -45,17 +56,66 @@ addPatch({
                     // eslint-disable-next-line no-useless-escape
                     match: /inputEventUnregister\((parseInt\(\i,10\))\);else/,
                     replace: "$&{$self.unregisterKeybind($1);return;}"
+                },
+                {
+                    match: /let{keybinds:(\i)}=\i;/,
+                    replace: "$&$self.preRegisterKeybinds($1);"
                 }
             ]
         }
     ],
 
     registerKeybind: function (id, shortcut, callback, options) {
+        if (VesktopNative.keybind.shouldPreRegister()) {
+            return;
+        }
         keybindCallbacks[id] = callback;
         VesktopNative.keybind.register(id, toShortcutString(shortcut), options);
     },
     unregisterKeybind: function (id) {
+        if (VesktopNative.keybind.shouldPreRegister()) {
+            return;
+        }
         delete keybindCallbacks[id];
         VesktopNative.keybind.unregister(id);
+    },
+    // only used for wayland/xdg-desktop-portal globalshortcuts
+    preRegisterKeybinds: function (allActions: {
+        [action: string]: {
+            onTrigger: Function;
+        };
+    }) {
+        let actions: { id: number; name: string }[] = [];
+        if (!VesktopNative.keybind.shouldPreRegister()) {
+            return;
+        }
+        let id = 1;
+        Object.entries(allActions).forEach(([key, val]) => {
+            if (
+                [
+                    "UNASSIGNED",
+                    "SWITCH_TO_VOICE_CHANNEL",
+                    "TOGGLE_OVERLAY",
+                    "TOGGLE_OVERLAY_INPUT_LOCK",
+                    "TOGGLE_PRIORITY_SPEAKER",
+                    "OVERLAY_ACTIVATE_REGION_TEXT_WIDGET",
+                    "TOGGLE_GO_LIVE_STREAMING", // ???
+                    "SOUNDBOARD",
+                    "SOUNDBOARD_HOLD",
+                    "SAVE_CLIP"
+                    // most of these aren't available to change through discord as far as i can tell
+                ].includes(key)
+            ) {
+                return;
+            }
+            // the second argument in onTrigger seems to hold some context in some specific actions
+            // as far as i can tell these are the only actions that use it: push to talk (except it doesn't seem to do anything there??)
+            // and switch to voice channel which requires a channel parameter which is provided through discord's ui
+            // except we can't really provide that with xdp so i'll just skip it for now
+            keybindCallbacks[id] = (keyState: boolean) => val.onTrigger(keyState, undefined);
+            actions.push({ id, name: actionReadableNames[key] });
+            id++;
+        });
+        VesktopNative.keybind.preRegister(actions);
     }
 });
diff --git a/src/shared/IpcEvents.ts b/src/shared/IpcEvents.ts
index 62ea94c3..5d802601 100644
--- a/src/shared/IpcEvents.ts
+++ b/src/shared/IpcEvents.ts
@@ -51,6 +51,9 @@ export const enum IpcEvents {
     ARRPC_ACTIVITY = "VCD_ARRPC_ACTIVITY",
 
     CLIPBOARD_COPY_IMAGE = "VCD_CLIPBOARD_COPY_IMAGE",
+
     KEYBIND_REGISTER = "VCD_KEYBIND_REGISTER",
-    KEYBIND_UNREGISTER = "VCD_KEYBIND_UNREGISTER"
+    KEYBIND_UNREGISTER = "VCD_KEYBIND_UNREGISTER",
+    KEYBIND_SHOULD_PREREGISTER = "VCD_KEYBIND_SHOULD_PREREGISTER",
+    KEYBIND_PREREGISTER = "VCD_KEYBIND_PREREGISTER"
 }

From 34a6043ea81d17d1fb356f770950dac8fc1cfc74 Mon Sep 17 00:00:00 2001
From: Tuxinal <24763016+tuxinal@users.noreply.github.com>
Date: Mon, 27 Jan 2025 15:09:49 +0330
Subject: [PATCH 12/31] Show error on platforms using XDP

---
 .../patches/{keybinds.ts => keybinds.tsx}     | 28 +++++++++++++++++--
 1 file changed, 26 insertions(+), 2 deletions(-)
 rename src/renderer/patches/{keybinds.ts => keybinds.tsx} (79%)

diff --git a/src/renderer/patches/keybinds.ts b/src/renderer/patches/keybinds.tsx
similarity index 79%
rename from src/renderer/patches/keybinds.ts
rename to src/renderer/patches/keybinds.tsx
index ec0b1cf2..8100cb5d 100644
--- a/src/renderer/patches/keybinds.ts
+++ b/src/renderer/patches/keybinds.tsx
@@ -8,6 +8,7 @@ import { findByCodeLazy } from "@vencord/types/webpack";
 import { keybindCallbacks } from "renderer";
 
 import { addPatch } from "./shared";
+import { ErrorCard } from "@vencord/types/components";
 const toShortcutString = findByCodeLazy('return"gamepad".');
 const actionReadableNames: { [key: string]: string } = {
     PUSH_TO_TALK: "Push To Talk",
@@ -26,6 +27,11 @@ addPatch({
         {
             find: "keybindActionTypes",
             replacement: [
+                {
+                    // eslint-disable-next-line no-useless-escape
+                    match: /(\i\.isPlatformEmbedded\?)(.+renderEmpty\(\i\)\]\}\)\]\}\))/,
+                    replace: "$1$self.xdpWarning($2)"
+                },
                 {
                     // eslint-disable-next-line no-useless-escape
                     match: /\i\.isPlatformEmbedded/g,
@@ -58,6 +64,7 @@ addPatch({
                     replace: "$&{$self.unregisterKeybind($1);return;}"
                 },
                 {
+                    // eslint-disable-next-line no-useless-escape
                     match: /let{keybinds:(\i)}=\i;/,
                     replace: "$&$self.preRegisterKeybinds($1);"
                 }
@@ -85,7 +92,7 @@ addPatch({
             onTrigger: Function;
         };
     }) {
-        let actions: { id: number; name: string }[] = [];
+        const actions: { id: number; name: string }[] = [];
         if (!VesktopNative.keybind.shouldPreRegister()) {
             return;
         }
@@ -113,9 +120,26 @@ addPatch({
             // and switch to voice channel which requires a channel parameter which is provided through discord's ui
             // except we can't really provide that with xdp so i'll just skip it for now
             keybindCallbacks[id] = (keyState: boolean) => val.onTrigger(keyState, undefined);
-            actions.push({ id, name: actionReadableNames[key] });
+            actions.push({ id, name: actionReadableNames[key] || key });
             id++;
         });
         VesktopNative.keybind.preRegister(actions);
+    },
+    xdpWarning: function (keybinds) {
+        if (!VesktopNative.keybind.shouldPreRegister()) {
+            return keybinds;
+        }
+        return (
+            <ErrorCard>
+                <p>
+                    You appear to be using Vesktop on a platform that requires XDG desktop portals for using keybinds.
+                    You can configure keybinds using your desktop environment's built-in settings page.
+                </p>
+                <p>
+                    If your desktop environment does not support the GlobalShortcuts portal you have to manually bind
+                    your desired keybinds to CLI triggers.
+                </p>
+            </ErrorCard>
+        );
     }
 });

From e7a753113f0edf6ba87b771b8b38f8b483992d9c Mon Sep 17 00:00:00 2001
From: Tuxinal <24763016+tuxinal@users.noreply.github.com>
Date: Fri, 7 Feb 2025 12:43:05 +0330
Subject: [PATCH 13/31] Add keyup keydown support update venbind

---
 package.json                      |  2 +-
 src/main/index.ts                 |  4 +--
 src/main/venbind.ts               |  6 ++--
 src/preload/VesktopNative.ts      |  3 +-
 src/renderer/index.ts             | 19 +++++++++++-
 src/renderer/patches/keybinds.tsx | 49 +++++++++++++++++++++++--------
 6 files changed, 62 insertions(+), 21 deletions(-)

diff --git a/package.json b/package.json
index d9b20ff3..b24b3e6b 100644
--- a/package.json
+++ b/package.json
@@ -26,7 +26,7 @@
     "dependencies": {
         "arrpc": "github:OpenAsar/arrpc#5aadc307cb9bf4479f0a12364a253b07a77ace22",
         "electron-updater": "^6.3.9",
-        "venbind": "^0.0.2"
+        "venbind": "^0.0.3"
     },
     "optionalDependencies": {
         "@vencord/venmic": "^6.1.0"
diff --git a/src/main/index.ts b/src/main/index.ts
index e8af42b3..1003a648 100644
--- a/src/main/index.ts
+++ b/src/main/index.ts
@@ -76,10 +76,10 @@ function init() {
         if (keybindIndex !== -1) {
             if (cmdLine[keybindIndex + 2] === "keyup" || cmdLine[keybindIndex + 2] === "keydown") {
                 mainWin.webContents.executeJavaScript(
-                    `Vesktop.keybindCallbacks[${cmdLine[keybindIndex + 1]}](${cmdLine[keybindIndex + 2] === "keydown" ? "true" : "false"})`
+                    `Vesktop.triggerKeybind(${cmdLine[keybindIndex + 1]}, ${cmdLine[keybindIndex + 2] === "keydown" ? "false" : "true"})`
                 );
             } else {
-                mainWin.webContents.executeJavaScript(`Vesktop.keybindCallbacks[${cmdLine[keybindIndex + 1]}](false)`);
+                mainWin.webContents.executeJavaScript(`Vesktop.triggerKeybind(${cmdLine[keybindIndex + 1]}, true)`);
             }
         } else if (data.IS_DEV) app.quit();
         else if (mainWin) {
diff --git a/src/main/venbind.ts b/src/main/venbind.ts
index 0af72636..9a456275 100644
--- a/src/main/venbind.ts
+++ b/src/main/venbind.ts
@@ -50,12 +50,12 @@ export function obtainVenbind() {
 
 export function startVenbind() {
     const venbind = obtainVenbind();
-    venbind?.startKeybinds(x => {
-        mainWin.webContents.executeJavaScript(`Vesktop.keybindCallbacks[${x}](false)`);
+    venbind?.startKeybinds((id, keyup) => {
+        mainWin.webContents.executeJavaScript(`Vesktop.triggerKeybind(${id}, ${keyup})`);
     });
 }
 
-handle(IpcEvents.KEYBIND_REGISTER, (_, id: number, shortcut: string, options: any) => {
+handle(IpcEvents.KEYBIND_REGISTER, (_, id: number, shortcut: string) => {
     obtainVenbind()?.registerKeybind(shortcut, id);
 });
 handle(IpcEvents.KEYBIND_UNREGISTER, (_, id: number) => {
diff --git a/src/preload/VesktopNative.ts b/src/preload/VesktopNative.ts
index 1e49b9a0..bc51261f 100644
--- a/src/preload/VesktopNative.ts
+++ b/src/preload/VesktopNative.ts
@@ -80,8 +80,7 @@ export const VesktopNative = {
             invoke<void>(IpcEvents.CLIPBOARD_COPY_IMAGE, imageBuffer, imageSrc)
     },
     keybind: {
-        register: (id: number, shortcut: string, options: any) =>
-            invoke<void>(IpcEvents.KEYBIND_REGISTER, id, shortcut),
+        register: (id: number, shortcut: string) => invoke<void>(IpcEvents.KEYBIND_REGISTER, id, shortcut),
         unregister: (id: number) => invoke<void>(IpcEvents.KEYBIND_UNREGISTER, id),
         shouldPreRegister: () => sendSync<boolean>(IpcEvents.KEYBIND_SHOULD_PREREGISTER),
         preRegister: (actions: { id: number; name: string }[]) => invoke<void>(IpcEvents.KEYBIND_PREREGISTER, actions)
diff --git a/src/renderer/index.ts b/src/renderer/index.ts
index 01c80cea..d7196887 100644
--- a/src/renderer/index.ts
+++ b/src/renderer/index.ts
@@ -21,7 +21,15 @@ export { Settings };
 
 const InviteActions = findByPropsLazy("resolveInvite");
 
-export const keybindCallbacks: { [id: number]: Function } = {};
+export const keybindCallbacks: {
+    [id: number]: {
+        onTrigger: Function;
+        keyEvents: {
+            keyup: boolean;
+            keydown: boolean;
+        };
+    };
+} = {};
 
 export async function openInviteModal(code: string) {
     const { invite } = await InviteActions.resolveInvite(code, "Desktop Modal");
@@ -39,6 +47,15 @@ export async function openInviteModal(code: string) {
     return true;
 }
 
+export async function triggerKeybind(id: number, keyup: boolean) {
+    var cb = keybindCallbacks[id];
+    if (cb.keyEvents.keyup && keyup) {
+        cb.onTrigger(false);
+    } else if (cb.keyEvents.keydown && !keyup) {
+        cb.onTrigger(true);
+    }
+}
+
 const customSettingsSections = (
     Vencord.Plugins.plugins.Settings as any as { customSections: ((ID: Record<string, unknown>) => any)[] }
 ).customSections;
diff --git a/src/renderer/patches/keybinds.tsx b/src/renderer/patches/keybinds.tsx
index 8100cb5d..a1bd3c57 100644
--- a/src/renderer/patches/keybinds.tsx
+++ b/src/renderer/patches/keybinds.tsx
@@ -22,6 +22,7 @@ const actionReadableNames: { [key: string]: string } = {
     NAVIGATE_FORWARD: "Navigate Forward",
     DISCONNECT_FROM_VOICE_CHANNEL: "Disconnect From Voice Channel"
 };
+const actions: { id: number; name: string }[] = [];
 addPatch({
     patches: [
         {
@@ -72,12 +73,23 @@ addPatch({
         }
     ],
 
-    registerKeybind: function (id, shortcut, callback, options) {
+    registerKeybind: function (
+        id,
+        shortcut,
+        callback: Function,
+        options: {
+            keyup: boolean;
+            keydown: boolean;
+        }
+    ) {
         if (VesktopNative.keybind.shouldPreRegister()) {
             return;
         }
-        keybindCallbacks[id] = callback;
-        VesktopNative.keybind.register(id, toShortcutString(shortcut), options);
+        keybindCallbacks[id] = {
+            onTrigger: callback,
+            keyEvents: options
+        };
+        VesktopNative.keybind.register(id, toShortcutString(shortcut));
     },
     unregisterKeybind: function (id) {
         if (VesktopNative.keybind.shouldPreRegister()) {
@@ -90,9 +102,12 @@ addPatch({
     preRegisterKeybinds: function (allActions: {
         [action: string]: {
             onTrigger: Function;
+            keyEvents: {
+                keyup: boolean;
+                keydown: boolean;
+            };
         };
     }) {
-        const actions: { id: number; name: string }[] = [];
         if (!VesktopNative.keybind.shouldPreRegister()) {
             return;
         }
@@ -102,6 +117,7 @@ addPatch({
                 [
                     "UNASSIGNED",
                     "SWITCH_TO_VOICE_CHANNEL",
+                    "PUSH_TO_TALK",
                     "TOGGLE_OVERLAY",
                     "TOGGLE_OVERLAY_INPUT_LOCK",
                     "TOGGLE_PRIORITY_SPEAKER",
@@ -115,20 +131,21 @@ addPatch({
             ) {
                 return;
             }
-            // the second argument in onTrigger seems to hold some context in some specific actions
-            // as far as i can tell these are the only actions that use it: push to talk (except it doesn't seem to do anything there??)
-            // and switch to voice channel which requires a channel parameter which is provided through discord's ui
-            // except we can't really provide that with xdp so i'll just skip it for now
-            keybindCallbacks[id] = (keyState: boolean) => val.onTrigger(keyState, undefined);
+            keybindCallbacks[id] = {
+                // TODO: the "undefined" here is supposed to be a context. basically only used by push to talk to determine if you are in ptt mode or not
+                // (it's also used by switch to channel to determine the channel but you can't really define that through xdp)
+                onTrigger: (keyState: boolean) => val.onTrigger(keyState, undefined),
+                keyEvents: val.keyEvents
+            };
             actions.push({ id, name: actionReadableNames[key] || key });
             id++;
         });
-        VesktopNative.keybind.preRegister(actions);
     },
     xdpWarning: function (keybinds) {
         if (!VesktopNative.keybind.shouldPreRegister()) {
             return keybinds;
         }
+        VesktopNative.keybind.preRegister(actions);
         return (
             <ErrorCard>
                 <p>
@@ -136,9 +153,17 @@ addPatch({
                     You can configure keybinds using your desktop environment's built-in settings page.
                 </p>
                 <p>
-                    If your desktop environment does not support the GlobalShortcuts portal you have to manually bind
-                    your desired keybinds to CLI triggers.
+                    If your desktop environment does not support the GlobalShortcuts portal (which you would know if its
+                    settings page didn't open just now) you have to manually bind your desired keybinds to CLI triggers.
                 </p>
+                <p>List of valid keybind IDs to use with the CLI:</p>
+                <ul>
+                    {actions.map(keybind => (
+                        <li>
+                            {keybind.id}: {keybind.name}
+                        </li>
+                    ))}
+                </ul>
             </ErrorCard>
         );
     }

From 13927ee08e8706fc59cba9a3983358f4c29f794c Mon Sep 17 00:00:00 2001
From: Tuxinal <24763016+tuxinal@users.noreply.github.com>
Date: Fri, 7 Feb 2025 14:28:50 +0330
Subject: [PATCH 14/31] =?UTF-8?q?Update=20lockfile=20properly=20Github=20m?=
 =?UTF-8?q?erge=20ui=20is=20=F0=9F=92=80?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 pnpm-lock.yaml        | 10 ++++++++++
 src/renderer/index.ts | 19 -------------------
 2 files changed, 10 insertions(+), 19 deletions(-)

diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml
index a97c567e..8a3034ce 100644
--- a/pnpm-lock.yaml
+++ b/pnpm-lock.yaml
@@ -19,6 +19,9 @@ importers:
       electron-updater:
         specifier: ^6.3.9
         version: 6.3.9
+      venbind:
+        specifier: ^0.0.3
+        version: 0.0.3
     optionalDependencies:
       '@vencord/venmic':
         specifier: ^6.1.0
@@ -2877,6 +2880,11 @@ packages:
   util-deprecate@1.0.2:
     resolution: {integrity: sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==}
 
+  venbind@0.0.3:
+    resolution: {integrity: sha512-irlmr5Qeo9pSejGF5nATwzn5ramkEuJzjDMExrPA0p1DrNfFpUqyDsA05edUfHB2R4S9iyuILZG9zDQVKB3O3w==}
+    cpu: [x64]
+    os: [linux, win32]
+
   verror@1.10.1:
     resolution: {integrity: sha512-veufcmxri4e3XSrT0xwfUR7kguIkaxBeosDg00yDWhk49wdwkSUrvvsm7nc75e1PUyvIeZj6nS8VQRYz2/S4Xg==}
     engines: {node: '>=0.6.0'}
@@ -6159,6 +6167,8 @@ snapshots:
 
   util-deprecate@1.0.2: {}
 
+  venbind@0.0.3: {}
+
   verror@1.10.1:
     dependencies:
       assert-plus: 1.0.0
diff --git a/src/renderer/index.ts b/src/renderer/index.ts
index a00cd08c..ca8aa82e 100644
--- a/src/renderer/index.ts
+++ b/src/renderer/index.ts
@@ -18,9 +18,6 @@ import { VesktopLogger } from "./logger";
 import { Settings } from "./settings";
 export { Settings };
 
-
-const InviteActions = findByPropsLazy("resolveInvite");
-
 export const keybindCallbacks: {
     [id: number]: {
         onTrigger: Function;
@@ -31,22 +28,6 @@ export const keybindCallbacks: {
     };
 } = {};
 
-export async function openInviteModal(code: string) {
-    const { invite } = await InviteActions.resolveInvite(code, "Desktop Modal");
-    if (!invite) return false;
-
-    VesktopNative.win.focus();
-
-    FluxDispatcher.dispatch({
-        type: "INVITE_MODAL_OPEN",
-        invite,
-        code,
-        context: "APP"
-    });
-
-    return true;
-}
-
 VesktopLogger.log("read if cute :3");
 VesktopLogger.log("Vesktop v" + VesktopNative.app.getVersion());
 

From 807ccb4a5fecb4a95b04f5ed3a56beae78108166 Mon Sep 17 00:00:00 2001
From: Tuxinal <24763016+tuxinal@users.noreply.github.com>
Date: Fri, 7 Feb 2025 16:05:08 +0330
Subject: [PATCH 15/31] update findbycode query

---
 src/renderer/patches/keybinds.tsx | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/renderer/patches/keybinds.tsx b/src/renderer/patches/keybinds.tsx
index a1bd3c57..29d48437 100644
--- a/src/renderer/patches/keybinds.tsx
+++ b/src/renderer/patches/keybinds.tsx
@@ -9,7 +9,7 @@ import { keybindCallbacks } from "renderer";
 
 import { addPatch } from "./shared";
 import { ErrorCard } from "@vencord/types/components";
-const toShortcutString = findByCodeLazy('return"gamepad".');
+const toShortcutString = findByCodeLazy('.MOUSE_BUTTON?"mouse".concat(');
 const actionReadableNames: { [key: string]: string } = {
     PUSH_TO_TALK: "Push To Talk",
     PUSH_TO_TALK_PRIORITY: "Push To Talk (Priority)",

From f65428648554748413e7bb0f9f4fef71a30468c0 Mon Sep 17 00:00:00 2001
From: Tuxinal <24763016+tuxinal@users.noreply.github.com>
Date: Sat, 8 Feb 2025 16:50:24 +0330
Subject: [PATCH 16/31] Fix Push To Talk you love half line fixes

---
 src/renderer/patches/keybinds.tsx | 9 +++++----
 1 file changed, 5 insertions(+), 4 deletions(-)

diff --git a/src/renderer/patches/keybinds.tsx b/src/renderer/patches/keybinds.tsx
index 29d48437..491274ee 100644
--- a/src/renderer/patches/keybinds.tsx
+++ b/src/renderer/patches/keybinds.tsx
@@ -117,7 +117,6 @@ addPatch({
                 [
                     "UNASSIGNED",
                     "SWITCH_TO_VOICE_CHANNEL",
-                    "PUSH_TO_TALK",
                     "TOGGLE_OVERLAY",
                     "TOGGLE_OVERLAY_INPUT_LOCK",
                     "TOGGLE_PRIORITY_SPEAKER",
@@ -132,9 +131,11 @@ addPatch({
                 return;
             }
             keybindCallbacks[id] = {
-                // TODO: the "undefined" here is supposed to be a context. basically only used by push to talk to determine if you are in ptt mode or not
-                // (it's also used by switch to channel to determine the channel but you can't really define that through xdp)
-                onTrigger: (keyState: boolean) => val.onTrigger(keyState, undefined),
+                onTrigger: (keyState: boolean) =>
+                    val.onTrigger(keyState, {
+                        // switch to channel also requires some extra properties that would have to be supplied here
+                        context: undefined
+                    }),
                 keyEvents: val.keyEvents
             };
             actions.push({ id, name: actionReadableNames[key] || key });

From acf1de89b3cc92413c58dcd208e72b1132620049 Mon Sep 17 00:00:00 2001
From: Tuxinal <24763016+tuxinal@users.noreply.github.com>
Date: Fri, 28 Mar 2025 14:37:09 +0330
Subject: [PATCH 17/31] update venbind

---
 package.json                      |  2 +-
 pnpm-lock.yaml                    | 10 +++++-----
 src/main/venbind.ts               | 12 ++++++++----
 src/renderer/patches/keybinds.tsx |  2 +-
 4 files changed, 15 insertions(+), 11 deletions(-)

diff --git a/package.json b/package.json
index 41ceccfb..b0a6b060 100644
--- a/package.json
+++ b/package.json
@@ -28,7 +28,7 @@
     "dependencies": {
         "arrpc": "github:OpenAsar/arrpc#2234e9c9111f4c42ebcc3aa6a2215bfd979eef77",
         "electron-updater": "^6.3.9",
-        "venbind": "^0.0.3"
+        "venbind": "^0.0.4"
     },
     "optionalDependencies": {
         "@vencord/venmic": "^6.1.0"
diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml
index 8a3034ce..2f3c3a83 100644
--- a/pnpm-lock.yaml
+++ b/pnpm-lock.yaml
@@ -20,8 +20,8 @@ importers:
         specifier: ^6.3.9
         version: 6.3.9
       venbind:
-        specifier: ^0.0.3
-        version: 0.0.3
+        specifier: ^0.0.4
+        version: 0.0.4
     optionalDependencies:
       '@vencord/venmic':
         specifier: ^6.1.0
@@ -2880,8 +2880,8 @@ packages:
   util-deprecate@1.0.2:
     resolution: {integrity: sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==}
 
-  venbind@0.0.3:
-    resolution: {integrity: sha512-irlmr5Qeo9pSejGF5nATwzn5ramkEuJzjDMExrPA0p1DrNfFpUqyDsA05edUfHB2R4S9iyuILZG9zDQVKB3O3w==}
+  venbind@0.0.4:
+    resolution: {integrity: sha512-BNNT2JMNxl2xKdttT9TeXYUAR6r1g8hwAstJePUZ21XqbtRjY7ZtKZuqMkmruH8hMlYlv2BKPeoTcw3W0bNOzQ==}
     cpu: [x64]
     os: [linux, win32]
 
@@ -6167,7 +6167,7 @@ snapshots:
 
   util-deprecate@1.0.2: {}
 
-  venbind@0.0.3: {}
+  venbind@0.0.4: {}
 
   verror@1.10.1:
     dependencies:
diff --git a/src/main/venbind.ts b/src/main/venbind.ts
index 9a456275..6f997b72 100644
--- a/src/main/venbind.ts
+++ b/src/main/venbind.ts
@@ -49,17 +49,21 @@ export function obtainVenbind() {
 }
 
 export function startVenbind() {
-    const venbind = obtainVenbind();
+    obtainVenbind();
+    venbind?.defineErrorHandle((err: string) => {
+        console.error("venbind error:", err);
+        venbind = null;
+    });
     venbind?.startKeybinds((id, keyup) => {
         mainWin.webContents.executeJavaScript(`Vesktop.triggerKeybind(${id}, ${keyup})`);
     });
 }
 
 handle(IpcEvents.KEYBIND_REGISTER, (_, id: number, shortcut: string) => {
-    obtainVenbind()?.registerKeybind(shortcut, id);
+    venbind?.registerKeybind(shortcut, id);
 });
 handle(IpcEvents.KEYBIND_UNREGISTER, (_, id: number) => {
-    obtainVenbind()?.unregisterKeybind(id);
+    venbind?.unregisterKeybind(id);
 });
 handleSync(IpcEvents.KEYBIND_SHOULD_PREREGISTER, _ => {
     if (
@@ -73,5 +77,5 @@ handleSync(IpcEvents.KEYBIND_SHOULD_PREREGISTER, _ => {
     return false;
 });
 handle(IpcEvents.KEYBIND_PREREGISTER, (_, actions: { id: number; name: string }[]) => {
-    obtainVenbind()?.preregisterKeybinds(actions);
+    venbind?.preregisterKeybinds(actions);
 });
diff --git a/src/renderer/patches/keybinds.tsx b/src/renderer/patches/keybinds.tsx
index 491274ee..cb99fc08 100644
--- a/src/renderer/patches/keybinds.tsx
+++ b/src/renderer/patches/keybinds.tsx
@@ -141,12 +141,12 @@ addPatch({
             actions.push({ id, name: actionReadableNames[key] || key });
             id++;
         });
+        VesktopNative.keybind.preRegister(actions);
     },
     xdpWarning: function (keybinds) {
         if (!VesktopNative.keybind.shouldPreRegister()) {
             return keybinds;
         }
-        VesktopNative.keybind.preRegister(actions);
         return (
             <ErrorCard>
                 <p>

From 11ee245c4165d3b04c4dd7f34322f9b985b846a3 Mon Sep 17 00:00:00 2001
From: Tuxinal <24763016+tuxinal@users.noreply.github.com>
Date: Sat, 29 Mar 2025 18:39:04 +0330
Subject: [PATCH 18/31] Use xdp registry. Make keybind IDs string based. one
 notable thing is that the default keybind process on discord (as partially
 used on x11 and windows) does actually have its own ids which are numbers.
 and so the id strings on x11 and windows are actually _those_ ids as strings
 this is opposite to how stuff is on wayland/xdp where the ids are the actual
 name for the keybind (e.g. TOGGLE_MUTE, PUSH_TO_TALK, ...)

---
 package.json                      |  2 +-
 pnpm-lock.yaml                    | 10 +++++-----
 src/main/venbind.ts               | 10 +++++-----
 src/preload/VesktopNative.ts      |  6 +++---
 src/renderer/index.ts             |  4 ++--
 src/renderer/patches/keybinds.tsx | 23 ++++++++++++-----------
 6 files changed, 28 insertions(+), 27 deletions(-)

diff --git a/package.json b/package.json
index b652a2b7..25fdc071 100644
--- a/package.json
+++ b/package.json
@@ -28,7 +28,7 @@
     "dependencies": {
         "arrpc": "github:OpenAsar/arrpc#2234e9c9111f4c42ebcc3aa6a2215bfd979eef77",
         "electron-updater": "^6.3.9",
-        "venbind": "^0.0.4"
+        "venbind": "^0.0.6"
     },
     "optionalDependencies": {
         "@vencord/venmic": "^6.1.0"
diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml
index 660187ec..e7f1bc21 100644
--- a/pnpm-lock.yaml
+++ b/pnpm-lock.yaml
@@ -20,8 +20,8 @@ importers:
         specifier: ^6.3.9
         version: 6.3.9
       venbind:
-        specifier: ^0.0.4
-        version: 0.0.4
+        specifier: ^0.0.6
+        version: 0.0.6
     optionalDependencies:
       '@vencord/venmic':
         specifier: ^6.1.0
@@ -2873,8 +2873,8 @@ packages:
   util-deprecate@1.0.2:
     resolution: {integrity: sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==}
 
-  venbind@0.0.4:
-    resolution: {integrity: sha512-BNNT2JMNxl2xKdttT9TeXYUAR6r1g8hwAstJePUZ21XqbtRjY7ZtKZuqMkmruH8hMlYlv2BKPeoTcw3W0bNOzQ==}
+  venbind@0.0.6:
+    resolution: {integrity: sha512-D4m7tD/f99w34mPGM0BIGiN207HeqXNAo94GJWWd7ERQX3u50fr/Bh7JRaEkLTJzBwvTu8caWAXis7Jxds21bQ==}
     cpu: [x64]
     os: [linux, win32]
 
@@ -6156,7 +6156,7 @@ snapshots:
 
   util-deprecate@1.0.2: {}
 
-  venbind@0.0.4: {}
+  venbind@0.0.6: {}
 
   verror@1.10.1:
     dependencies:
diff --git a/src/main/venbind.ts b/src/main/venbind.ts
index 6f997b72..6cc50344 100644
--- a/src/main/venbind.ts
+++ b/src/main/venbind.ts
@@ -55,14 +55,14 @@ export function startVenbind() {
         venbind = null;
     });
     venbind?.startKeybinds((id, keyup) => {
-        mainWin.webContents.executeJavaScript(`Vesktop.triggerKeybind(${id}, ${keyup})`);
-    });
+        mainWin.webContents.executeJavaScript(`Vesktop.triggerKeybind("${id}", ${keyup})`);
+    }, "dev.vencord.Vesktop");
 }
 
-handle(IpcEvents.KEYBIND_REGISTER, (_, id: number, shortcut: string) => {
+handle(IpcEvents.KEYBIND_REGISTER, (_, id: string, shortcut: string) => {
     venbind?.registerKeybind(shortcut, id);
 });
-handle(IpcEvents.KEYBIND_UNREGISTER, (_, id: number) => {
+handle(IpcEvents.KEYBIND_UNREGISTER, (_, id: string) => {
     venbind?.unregisterKeybind(id);
 });
 handleSync(IpcEvents.KEYBIND_SHOULD_PREREGISTER, _ => {
@@ -76,6 +76,6 @@ handleSync(IpcEvents.KEYBIND_SHOULD_PREREGISTER, _ => {
     }
     return false;
 });
-handle(IpcEvents.KEYBIND_PREREGISTER, (_, actions: { id: number; name: string }[]) => {
+handle(IpcEvents.KEYBIND_PREREGISTER, (_, actions: { id: string; name: string }[]) => {
     venbind?.preregisterKeybinds(actions);
 });
diff --git a/src/preload/VesktopNative.ts b/src/preload/VesktopNative.ts
index 58c69816..e3c85acc 100644
--- a/src/preload/VesktopNative.ts
+++ b/src/preload/VesktopNative.ts
@@ -86,9 +86,9 @@ export const VesktopNative = {
         respond: (response: IpcResponse) => ipcRenderer.send(IpcEvents.IPC_COMMAND, response)
     },
     keybind: {
-        register: (id: number, shortcut: string) => invoke<void>(IpcEvents.KEYBIND_REGISTER, id, shortcut),
-        unregister: (id: number) => invoke<void>(IpcEvents.KEYBIND_UNREGISTER, id),
+        register: (id: string, shortcut: string) => invoke<void>(IpcEvents.KEYBIND_REGISTER, id, shortcut),
+        unregister: (id: string) => invoke<void>(IpcEvents.KEYBIND_UNREGISTER, id),
         shouldPreRegister: () => sendSync<boolean>(IpcEvents.KEYBIND_SHOULD_PREREGISTER),
-        preRegister: (actions: { id: number; name: string }[]) => invoke<void>(IpcEvents.KEYBIND_PREREGISTER, actions)
+        preRegister: (actions: { id: string; name: string }[]) => invoke<void>(IpcEvents.KEYBIND_PREREGISTER, actions)
     }
 };
diff --git a/src/renderer/index.ts b/src/renderer/index.ts
index ae32fd12..80fced62 100644
--- a/src/renderer/index.ts
+++ b/src/renderer/index.ts
@@ -21,7 +21,7 @@ export { Settings };
 import type SettingsPlugin from "@vencord/types/plugins/_core/settings";
 
 export const keybindCallbacks: {
-    [id: number]: {
+    [id: string]: {
         onTrigger: Function;
         keyEvents: {
             keyup: boolean;
@@ -35,7 +35,7 @@ VesktopLogger.log("Vesktop v" + VesktopNative.app.getVersion());
 
 const customSettingsSections = (Vencord.Plugins.plugins.Settings as any as typeof SettingsPlugin).customSections;
 
-export async function triggerKeybind(id: number, keyup: boolean) {
+export async function triggerKeybind(id: string, keyup: boolean) {
     var cb = keybindCallbacks[id];
     if (cb.keyEvents.keyup && keyup) {
         cb.onTrigger(false);
diff --git a/src/renderer/patches/keybinds.tsx b/src/renderer/patches/keybinds.tsx
index cb99fc08..213399b0 100644
--- a/src/renderer/patches/keybinds.tsx
+++ b/src/renderer/patches/keybinds.tsx
@@ -22,7 +22,7 @@ const actionReadableNames: { [key: string]: string } = {
     NAVIGATE_FORWARD: "Navigate Forward",
     DISCONNECT_FROM_VOICE_CHANNEL: "Disconnect From Voice Channel"
 };
-const actions: { id: number; name: string }[] = [];
+const actions: { id: string; name: string }[] = [];
 addPatch({
     patches: [
         {
@@ -74,7 +74,7 @@ addPatch({
     ],
 
     registerKeybind: function (
-        id,
+        id: number,
         shortcut,
         callback: Function,
         options: {
@@ -85,18 +85,20 @@ addPatch({
         if (VesktopNative.keybind.shouldPreRegister()) {
             return;
         }
-        keybindCallbacks[id] = {
+        var idStr = id.toString();
+        keybindCallbacks[idStr] = {
             onTrigger: callback,
             keyEvents: options
         };
-        VesktopNative.keybind.register(id, toShortcutString(shortcut));
+        VesktopNative.keybind.register(idStr, toShortcutString(shortcut));
     },
-    unregisterKeybind: function (id) {
+    unregisterKeybind: function (id: number) {
         if (VesktopNative.keybind.shouldPreRegister()) {
             return;
         }
-        delete keybindCallbacks[id];
-        VesktopNative.keybind.unregister(id);
+        var idStr = id.toString();
+        delete keybindCallbacks[idStr];
+        VesktopNative.keybind.unregister(idStr);
     },
     // only used for wayland/xdg-desktop-portal globalshortcuts
     preRegisterKeybinds: function (allActions: {
@@ -111,8 +113,8 @@ addPatch({
         if (!VesktopNative.keybind.shouldPreRegister()) {
             return;
         }
-        let id = 1;
         Object.entries(allActions).forEach(([key, val]) => {
+            console.log(key);
             if (
                 [
                     "UNASSIGNED",
@@ -130,7 +132,7 @@ addPatch({
             ) {
                 return;
             }
-            keybindCallbacks[id] = {
+            keybindCallbacks[key] = {
                 onTrigger: (keyState: boolean) =>
                     val.onTrigger(keyState, {
                         // switch to channel also requires some extra properties that would have to be supplied here
@@ -138,8 +140,7 @@ addPatch({
                     }),
                 keyEvents: val.keyEvents
             };
-            actions.push({ id, name: actionReadableNames[key] || key });
-            id++;
+            actions.push({ id: key, name: actionReadableNames[key] || key });
         });
         VesktopNative.keybind.preRegister(actions);
     },

From 7655fcfeb032d79bd61018e3ec5a77c9611d820e Mon Sep 17 00:00:00 2001
From: Tuxinal <24763016+tuxinal@users.noreply.github.com>
Date: Mon, 31 Mar 2025 20:13:56 +0330
Subject: [PATCH 19/31] Update the cli the new cli now looks like `(vesktop)
 --keybind=(id)` and `(vesktop) --keybind-[up/down]=(id)` also made the
 keybinds that get added to xdp a whitelist as opposed to a blacklist of
 keybinds that shouldn't get added

---
 src/main/index.ts                 | 20 ++++++++------------
 src/renderer/patches/keybinds.tsx | 18 ++----------------
 2 files changed, 10 insertions(+), 28 deletions(-)

diff --git a/src/main/index.ts b/src/main/index.ts
index b05ff97f..83c5359e 100644
--- a/src/main/index.ts
+++ b/src/main/index.ts
@@ -80,16 +80,12 @@ function init() {
     if (isDeckGameMode) nativeTheme.themeSource = "dark";
 
     app.on("second-instance", (_event, cmdLine, _cwd, data: any) => {
-        const keybindIndex = cmdLine.indexOf("--keybind");
-
-        if (keybindIndex !== -1) {
-            if (cmdLine[keybindIndex + 2] === "keyup" || cmdLine[keybindIndex + 2] === "keydown") {
-                mainWin.webContents.executeJavaScript(
-                    `Vesktop.triggerKeybind(${cmdLine[keybindIndex + 1]}, ${cmdLine[keybindIndex + 2] === "keydown" ? "false" : "true"})`
-                );
-            } else {
-                mainWin.webContents.executeJavaScript(`Vesktop.triggerKeybind(${cmdLine[keybindIndex + 1]}, true)`);
-            }
+        var keybind = cmdLine.find(x => x.startsWith("--keybind"));
+        if (keybind !== undefined) {
+            var action = keybind.split("=")[1];
+            var keyup: boolean = keybind.startsWith("--keybind-up=") || keybind.startsWith("--keybind=");
+            if ((keyup || keybind.startsWith("--keybind-down=")) && action != null)
+                mainWin.webContents.executeJavaScript(`Vesktop.triggerKeybind("${action}", ${keyup})`);
         } else if (data.IS_DEV) app.quit();
         else if (mainWin) {
             if (mainWin.isMinimized()) mainWin.restore();
@@ -114,7 +110,7 @@ function init() {
 }
 
 if (!app.requestSingleInstanceLock({ IS_DEV })) {
-    if (process.argv.includes("--keybind")) {
+    if (process.argv.some(x => x.startsWith("--keybind"))) {
         app.quit();
     } else {
         if (IS_DEV) {
@@ -126,7 +122,7 @@ if (!app.requestSingleInstanceLock({ IS_DEV })) {
         }
     }
 } else {
-    if (process.argv.includes("--keybind")) {
+    if (process.argv.some(x => x.startsWith("--keybind"))) {
         console.error("No instances running! cannot issue a keybind!");
         app.quit();
     } else {
diff --git a/src/renderer/patches/keybinds.tsx b/src/renderer/patches/keybinds.tsx
index 213399b0..ab4fabe3 100644
--- a/src/renderer/patches/keybinds.tsx
+++ b/src/renderer/patches/keybinds.tsx
@@ -18,6 +18,7 @@ const actionReadableNames: { [key: string]: string } = {
     TOGGLE_DEAFEN: "Toggle Deafen",
     TOGGLE_VOICE_MODE: "Toggle Voice Activity Mode",
     TOGGLE_STREAMER_MODE: "Toggle Streamer Mode",
+    TOGGLE_CAMERA: "Toggle Camera",
     NAVIGATE_BACK: "Navigate Back",
     NAVIGATE_FORWARD: "Navigate Forward",
     DISCONNECT_FROM_VOICE_CHANNEL: "Disconnect From Voice Channel"
@@ -114,22 +115,7 @@ addPatch({
             return;
         }
         Object.entries(allActions).forEach(([key, val]) => {
-            console.log(key);
-            if (
-                [
-                    "UNASSIGNED",
-                    "SWITCH_TO_VOICE_CHANNEL",
-                    "TOGGLE_OVERLAY",
-                    "TOGGLE_OVERLAY_INPUT_LOCK",
-                    "TOGGLE_PRIORITY_SPEAKER",
-                    "OVERLAY_ACTIVATE_REGION_TEXT_WIDGET",
-                    "TOGGLE_GO_LIVE_STREAMING", // ???
-                    "SOUNDBOARD",
-                    "SOUNDBOARD_HOLD",
-                    "SAVE_CLIP"
-                    // most of these aren't available to change through discord as far as i can tell
-                ].includes(key)
-            ) {
+            if (actionReadableNames[key] == null) {
                 return;
             }
             keybindCallbacks[key] = {

From 7cbfddd0272f440bd38055653cea794883b17960 Mon Sep 17 00:00:00 2001
From: Tuxinal <24763016+tuxinal@users.noreply.github.com>
Date: Mon, 31 Mar 2025 20:41:23 +0330
Subject: [PATCH 20/31] bump venbind

---
 package.json   |  2 +-
 pnpm-lock.yaml | 10 +++++-----
 2 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/package.json b/package.json
index 25fdc071..bca081e0 100644
--- a/package.json
+++ b/package.json
@@ -28,7 +28,7 @@
     "dependencies": {
         "arrpc": "github:OpenAsar/arrpc#2234e9c9111f4c42ebcc3aa6a2215bfd979eef77",
         "electron-updater": "^6.3.9",
-        "venbind": "^0.0.6"
+        "venbind": "^0.0.7"
     },
     "optionalDependencies": {
         "@vencord/venmic": "^6.1.0"
diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml
index e7f1bc21..4e50fe89 100644
--- a/pnpm-lock.yaml
+++ b/pnpm-lock.yaml
@@ -20,8 +20,8 @@ importers:
         specifier: ^6.3.9
         version: 6.3.9
       venbind:
-        specifier: ^0.0.6
-        version: 0.0.6
+        specifier: ^0.0.7
+        version: 0.0.7
     optionalDependencies:
       '@vencord/venmic':
         specifier: ^6.1.0
@@ -2873,8 +2873,8 @@ packages:
   util-deprecate@1.0.2:
     resolution: {integrity: sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==}
 
-  venbind@0.0.6:
-    resolution: {integrity: sha512-D4m7tD/f99w34mPGM0BIGiN207HeqXNAo94GJWWd7ERQX3u50fr/Bh7JRaEkLTJzBwvTu8caWAXis7Jxds21bQ==}
+  venbind@0.0.7:
+    resolution: {integrity: sha512-upiBdF2vlY8lVYcCVBP88+/qwLuMcXWvilve6VI8Fgnfwu4yAbugZtn2WNfmUELCrBf1DAaRWMj/oLV4uDQoeQ==}
     cpu: [x64]
     os: [linux, win32]
 
@@ -6156,7 +6156,7 @@ snapshots:
 
   util-deprecate@1.0.2: {}
 
-  venbind@0.0.6: {}
+  venbind@0.0.7: {}
 
   verror@1.10.1:
     dependencies:

From 47782aa95f5059ae39df14ecde5085aede58fd88 Mon Sep 17 00:00:00 2001
From: Tuxinal <24763016+tuxinal@users.noreply.github.com>
Date: Tue, 1 Apr 2025 10:08:32 +0330
Subject: [PATCH 21/31] Disable Registry usage for now

---
 src/main/venbind.ts | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/main/venbind.ts b/src/main/venbind.ts
index 6cc50344..d2d4b976 100644
--- a/src/main/venbind.ts
+++ b/src/main/venbind.ts
@@ -56,7 +56,7 @@ export function startVenbind() {
     });
     venbind?.startKeybinds((id, keyup) => {
         mainWin.webContents.executeJavaScript(`Vesktop.triggerKeybind("${id}", ${keyup})`);
-    }, "dev.vencord.Vesktop");
+    }, null);
 }
 
 handle(IpcEvents.KEYBIND_REGISTER, (_, id: string, shortcut: string) => {

From 2900e899b7f1a2a92f3c7c459d1037dddb912222 Mon Sep 17 00:00:00 2001
From: Tuxinal <24763016+tuxinal@users.noreply.github.com>
Date: Fri, 4 Apr 2025 12:42:51 +0330
Subject: [PATCH 22/31] make the id patch less ugly, add a description for it
 change some texts

---
 src/renderer/patches/keybinds.tsx | 41 +++++++++++++++++++++++++------
 1 file changed, 33 insertions(+), 8 deletions(-)

diff --git a/src/renderer/patches/keybinds.tsx b/src/renderer/patches/keybinds.tsx
index ab4fabe3..6daea1b0 100644
--- a/src/renderer/patches/keybinds.tsx
+++ b/src/renderer/patches/keybinds.tsx
@@ -9,6 +9,7 @@ import { keybindCallbacks } from "renderer";
 
 import { addPatch } from "./shared";
 import { ErrorCard } from "@vencord/types/components";
+import { Card } from "@vencord/types/webpack/common";
 const toShortcutString = findByCodeLazy('.MOUSE_BUTTON?"mouse".concat(');
 const actionReadableNames: { [key: string]: string } = {
     PUSH_TO_TALK: "Push To Talk",
@@ -45,10 +46,9 @@ addPatch({
                     replace: "true"
                 },
                 {
-                    // THIS PATCH IS TEMPORARY
                     // eslint-disable-next-line no-useless-escape
                     match: /\.keybindGroup,\i.card\),children:\[/g,
-                    replace: "$&`ID: ${this.props.keybind.id}`,"
+                    replace: "$&$self.keybindIdComponent(this.props.keybind.id),"
                 }
             ]
         },
@@ -130,19 +130,44 @@ addPatch({
         });
         VesktopNative.keybind.preRegister(actions);
     },
+    keybindIdComponent: function (id) {
+        return <span style={{ color: "var(--text-muted)" }}>ID: {id}</span>;
+    },
     xdpWarning: function (keybinds) {
         if (!VesktopNative.keybind.shouldPreRegister()) {
-            return keybinds;
+            return (
+                <>
+                    {keybinds}
+                    <Card
+                        style={{
+                            padding: "1rem",
+                            color: "var(--text-normal)",
+                            backgroundColor: "var(--info-warning-background)",
+                            border: "1px solid var(--info-warning-foreground)"
+                        }}
+                    >
+                        The ID specified for each keybind is for use in the keybind CLI. You don't have to use this for
+                        configuring keybinds. This is just in case you want to trigger keybinds from external programs.
+                    </Card>
+                </>
+            );
         }
         return (
-            <ErrorCard>
+            <Card
+                style={{
+                    padding: "1rem",
+                    color: "var(--text-normal)",
+                    backgroundColor: "var(--info-warning-background)",
+                    border: "1px solid var(--info-warning-foreground)"
+                }}
+            >
                 <p>
                     You appear to be using Vesktop on a platform that requires XDG desktop portals for using keybinds.
-                    You can configure keybinds using your desktop environment's built-in settings page.
+                    You can configure keybinds using your desktop environment's settings.
                 </p>
                 <p>
-                    If your desktop environment does not support the GlobalShortcuts portal (which you would know if its
-                    settings page didn't open just now) you have to manually bind your desired keybinds to CLI triggers.
+                    If your desktop environment does not support the GlobalShortcuts portal you can manually bind your
+                    desired keybinds to CLI triggers.
                 </p>
                 <p>List of valid keybind IDs to use with the CLI:</p>
                 <ul>
@@ -152,7 +177,7 @@ addPatch({
                         </li>
                     ))}
                 </ul>
-            </ErrorCard>
+            </Card>
         );
     }
 });

From 75453e1476bf2f8dbc7a9c8e2778892284219ea6 Mon Sep 17 00:00:00 2001
From: Tuxinal <24763016+tuxinal@users.noreply.github.com>
Date: Fri, 4 Apr 2025 17:52:58 +0330
Subject: [PATCH 23/31] Update venbind loooooootss of changes in the patch
 related to how keybinds are given to venbind the main change in venbind is
 that the api for registring keybinds on xdp and everything else is the same
 now

---
 package.json                      |  2 +-
 pnpm-lock.yaml                    | 10 +++---
 src/main/venbind.ts               | 12 ++-----
 src/preload/VesktopNative.ts      | 12 ++++---
 src/renderer/patches/keybinds.tsx | 54 ++++++++++++++++++++-----------
 src/shared/IpcEvents.ts           |  6 ++--
 6 files changed, 54 insertions(+), 42 deletions(-)

diff --git a/package.json b/package.json
index bca081e0..8099ca4d 100644
--- a/package.json
+++ b/package.json
@@ -28,7 +28,7 @@
     "dependencies": {
         "arrpc": "github:OpenAsar/arrpc#2234e9c9111f4c42ebcc3aa6a2215bfd979eef77",
         "electron-updater": "^6.3.9",
-        "venbind": "^0.0.7"
+        "venbind": "^0.1.0"
     },
     "optionalDependencies": {
         "@vencord/venmic": "^6.1.0"
diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml
index 4e50fe89..f8c0eda1 100644
--- a/pnpm-lock.yaml
+++ b/pnpm-lock.yaml
@@ -20,8 +20,8 @@ importers:
         specifier: ^6.3.9
         version: 6.3.9
       venbind:
-        specifier: ^0.0.7
-        version: 0.0.7
+        specifier: ^0.1.0
+        version: 0.1.0
     optionalDependencies:
       '@vencord/venmic':
         specifier: ^6.1.0
@@ -2873,8 +2873,8 @@ packages:
   util-deprecate@1.0.2:
     resolution: {integrity: sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==}
 
-  venbind@0.0.7:
-    resolution: {integrity: sha512-upiBdF2vlY8lVYcCVBP88+/qwLuMcXWvilve6VI8Fgnfwu4yAbugZtn2WNfmUELCrBf1DAaRWMj/oLV4uDQoeQ==}
+  venbind@0.1.0:
+    resolution: {integrity: sha512-aI2Uc+IrCSG6GI/x5icIlJ2jESpUefZtzeqH+WYbGn6bhvWJblnjJ3ur3qmfWTeRCTG4SJ9jVnR5QRWyyx0f0g==}
     cpu: [x64]
     os: [linux, win32]
 
@@ -6156,7 +6156,7 @@ snapshots:
 
   util-deprecate@1.0.2: {}
 
-  venbind@0.0.7: {}
+  venbind@0.1.0: {}
 
   verror@1.10.1:
     dependencies:
diff --git a/src/main/venbind.ts b/src/main/venbind.ts
index d2d4b976..cd4a9fbb 100644
--- a/src/main/venbind.ts
+++ b/src/main/venbind.ts
@@ -59,13 +59,7 @@ export function startVenbind() {
     }, null);
 }
 
-handle(IpcEvents.KEYBIND_REGISTER, (_, id: string, shortcut: string) => {
-    venbind?.registerKeybind(shortcut, id);
-});
-handle(IpcEvents.KEYBIND_UNREGISTER, (_, id: string) => {
-    venbind?.unregisterKeybind(id);
-});
-handleSync(IpcEvents.KEYBIND_SHOULD_PREREGISTER, _ => {
+handleSync(IpcEvents.KEYBIND_NEEDS_XDP, _ => {
     if (
         process.platform === "linux" &&
         (process.env.XDG_SESSION_TYPE === "wayland" ||
@@ -76,6 +70,6 @@ handleSync(IpcEvents.KEYBIND_SHOULD_PREREGISTER, _ => {
     }
     return false;
 });
-handle(IpcEvents.KEYBIND_PREREGISTER, (_, actions: { id: string; name: string }[]) => {
-    venbind?.preregisterKeybinds(actions);
+handle(IpcEvents.KEYBIND_SET_KEYBINDS, (_, keybinds: { id: string; name?: string; shortcut?: string }[]) => {
+    venbind?.setKeybinds(keybinds);
 });
diff --git a/src/preload/VesktopNative.ts b/src/preload/VesktopNative.ts
index e3c85acc..1e14b1e0 100644
--- a/src/preload/VesktopNative.ts
+++ b/src/preload/VesktopNative.ts
@@ -86,9 +86,13 @@ export const VesktopNative = {
         respond: (response: IpcResponse) => ipcRenderer.send(IpcEvents.IPC_COMMAND, response)
     },
     keybind: {
-        register: (id: string, shortcut: string) => invoke<void>(IpcEvents.KEYBIND_REGISTER, id, shortcut),
-        unregister: (id: string) => invoke<void>(IpcEvents.KEYBIND_UNREGISTER, id),
-        shouldPreRegister: () => sendSync<boolean>(IpcEvents.KEYBIND_SHOULD_PREREGISTER),
-        preRegister: (actions: { id: string; name: string }[]) => invoke<void>(IpcEvents.KEYBIND_PREREGISTER, actions)
+        setKeybinds: (
+            keybinds: {
+                id: string;
+                shortcut?: string;
+                name?: string;
+            }[]
+        ) => invoke<void>(IpcEvents.KEYBIND_SET_KEYBINDS, keybinds),
+        needsXdp: () => sendSync<boolean>(IpcEvents.KEYBIND_NEEDS_XDP)
     }
 };
diff --git a/src/renderer/patches/keybinds.tsx b/src/renderer/patches/keybinds.tsx
index 6daea1b0..12ae0154 100644
--- a/src/renderer/patches/keybinds.tsx
+++ b/src/renderer/patches/keybinds.tsx
@@ -8,7 +8,6 @@ import { findByCodeLazy } from "@vencord/types/webpack";
 import { keybindCallbacks } from "renderer";
 
 import { addPatch } from "./shared";
-import { ErrorCard } from "@vencord/types/components";
 import { Card } from "@vencord/types/webpack/common";
 const toShortcutString = findByCodeLazy('.MOUSE_BUTTON?"mouse".concat(');
 const actionReadableNames: { [key: string]: string } = {
@@ -24,7 +23,7 @@ const actionReadableNames: { [key: string]: string } = {
     NAVIGATE_FORWARD: "Navigate Forward",
     DISCONNECT_FROM_VOICE_CHANNEL: "Disconnect From Voice Channel"
 };
-const actions: { id: string; name: string }[] = [];
+const keybinds: { id: string; name?: string; shortcut?: string }[] = [];
 addPatch({
     patches: [
         {
@@ -65,10 +64,20 @@ addPatch({
                     match: /inputEventUnregister\((parseInt\(\i,10\))\);else/,
                     replace: "$&{$self.unregisterKeybind($1);return;}"
                 },
+                {
+                    // eslint-disable-next-line no-useless-escape
+                    match: /:\(\i\.\i\.disable\(\)(.*?)\i\(\)\)/,
+                    replace: "$&;$self.setKeybinds();" // for when the user opens and closes the keybinds settings page
+                },
                 {
                     // eslint-disable-next-line no-useless-escape
                     match: /let{keybinds:(\i)}=\i;/,
-                    replace: "$&$self.preRegisterKeybinds($1);"
+                    replace: "$&$self.xdpRegisterKeybinds($1);"
+                },
+                {
+                    // eslint-disable-next-line no-useless-escape
+                    match: /location:"KeybindsStore"},\q\)\)/, // same function as above (where xdpRegisterKeybinds is called)
+                    replace: "$&;$self.setKeybinds();" // for when discord is opened
                 }
             ]
         }
@@ -83,26 +92,35 @@ addPatch({
             keydown: boolean;
         }
     ) {
-        if (VesktopNative.keybind.shouldPreRegister()) {
-            return;
-        }
+        if (VesktopNative.keybind.needsXdp()) return;
+
         var idStr = id.toString();
         keybindCallbacks[idStr] = {
             onTrigger: callback,
             keyEvents: options
         };
-        VesktopNative.keybind.register(idStr, toShortcutString(shortcut));
+
+        keybinds.push({
+            id: idStr,
+            shortcut: toShortcutString(shortcut)
+        });
     },
     unregisterKeybind: function (id: number) {
-        if (VesktopNative.keybind.shouldPreRegister()) {
-            return;
-        }
+        if (VesktopNative.keybind.needsXdp()) return;
+
         var idStr = id.toString();
         delete keybindCallbacks[idStr];
-        VesktopNative.keybind.unregister(idStr);
+        keybinds.splice(
+            keybinds.findIndex(x => x.id === idStr),
+            1
+        );
+    },
+    setKeybinds: function () {
+        if (VesktopNative.keybind.needsXdp()) return;
+        VesktopNative.keybind.setKeybinds(keybinds);
     },
     // only used for wayland/xdg-desktop-portal globalshortcuts
-    preRegisterKeybinds: function (allActions: {
+    xdpRegisterKeybinds: function (allActions: {
         [action: string]: {
             onTrigger: Function;
             keyEvents: {
@@ -111,9 +129,7 @@ addPatch({
             };
         };
     }) {
-        if (!VesktopNative.keybind.shouldPreRegister()) {
-            return;
-        }
+        if (!VesktopNative.keybind.needsXdp()) return;
         Object.entries(allActions).forEach(([key, val]) => {
             if (actionReadableNames[key] == null) {
                 return;
@@ -126,15 +142,15 @@ addPatch({
                     }),
                 keyEvents: val.keyEvents
             };
-            actions.push({ id: key, name: actionReadableNames[key] || key });
+            keybinds.push({ id: key, name: actionReadableNames[key] || key });
         });
-        VesktopNative.keybind.preRegister(actions);
+        VesktopNative.keybind.setKeybinds(keybinds);
     },
     keybindIdComponent: function (id) {
         return <span style={{ color: "var(--text-muted)" }}>ID: {id}</span>;
     },
     xdpWarning: function (keybinds) {
-        if (!VesktopNative.keybind.shouldPreRegister()) {
+        if (!VesktopNative.keybind.needsXdp()) {
             return (
                 <>
                     {keybinds}
@@ -171,7 +187,7 @@ addPatch({
                 </p>
                 <p>List of valid keybind IDs to use with the CLI:</p>
                 <ul>
-                    {actions.map(keybind => (
+                    {keybinds.map(keybind => (
                         <li>
                             {keybind.id}: {keybind.name}
                         </li>
diff --git a/src/shared/IpcEvents.ts b/src/shared/IpcEvents.ts
index e33040ac..69f046a2 100644
--- a/src/shared/IpcEvents.ts
+++ b/src/shared/IpcEvents.ts
@@ -57,10 +57,8 @@ export const enum IpcEvents {
 
     IPC_COMMAND = "VCD_IPC_COMMAND",
 
-    KEYBIND_REGISTER = "VCD_KEYBIND_REGISTER",
-    KEYBIND_UNREGISTER = "VCD_KEYBIND_UNREGISTER",
-    KEYBIND_SHOULD_PREREGISTER = "VCD_KEYBIND_SHOULD_PREREGISTER",
-    KEYBIND_PREREGISTER = "VCD_KEYBIND_PREREGISTER"
+    KEYBIND_SET_KEYBINDS = "VCD_KEYBIND_SET_KEYBINDS",
+    KEYBIND_NEEDS_XDP = "VCD_KEYBIND_NEEDS_XDP"
 }
 
 export const enum IpcCommands {

From 529ee77a95830da80cc960fde5c4baff7db0dc4d Mon Sep 17 00:00:00 2001
From: Tuxinal <24763016+tuxinal@users.noreply.github.com>
Date: Sun, 6 Apr 2025 18:56:07 +0330
Subject: [PATCH 24/31] fix keybinds page not opening on wayland/xdp i forgor
 to name things correctly

---
 src/renderer/patches/keybinds.tsx | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/renderer/patches/keybinds.tsx b/src/renderer/patches/keybinds.tsx
index 12ae0154..e2cc6e3c 100644
--- a/src/renderer/patches/keybinds.tsx
+++ b/src/renderer/patches/keybinds.tsx
@@ -149,11 +149,11 @@ addPatch({
     keybindIdComponent: function (id) {
         return <span style={{ color: "var(--text-muted)" }}>ID: {id}</span>;
     },
-    xdpWarning: function (keybinds) {
+    xdpWarning: function (keybindsList) {
         if (!VesktopNative.keybind.needsXdp()) {
             return (
                 <>
-                    {keybinds}
+                    {keybindsList}
                     <Card
                         style={{
                             padding: "1rem",

From 12561e3441ca05b73cd114eacc9c6b84b711403d Mon Sep 17 00:00:00 2001
From: Tuxinal <24763016+tuxinal@users.noreply.github.com>
Date: Mon, 7 Apr 2025 00:13:41 +0330
Subject: [PATCH 25/31] lint

---
 src/main/venbind.ts               | 4 ++--
 src/renderer/patches/keybinds.tsx | 6 +++---
 2 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/src/main/venbind.ts b/src/main/venbind.ts
index cd4a9fbb..c631596e 100644
--- a/src/main/venbind.ts
+++ b/src/main/venbind.ts
@@ -1,7 +1,7 @@
 /*
- * SPDX-License-Identifier: GPL-3.0
  * Vesktop, a desktop app aiming to give you a snappier Discord Experience
- * Copyright (c) 2023 Vendicated and Vencord contributors
+ * Copyright (c) 2025 Vendicated and Vesktop contributors
+ * SPDX-License-Identifier: GPL-3.0-or-later
  */
 
 import { join } from "path";
diff --git a/src/renderer/patches/keybinds.tsx b/src/renderer/patches/keybinds.tsx
index e2cc6e3c..46df4558 100644
--- a/src/renderer/patches/keybinds.tsx
+++ b/src/renderer/patches/keybinds.tsx
@@ -1,14 +1,14 @@
 /*
- * SPDX-License-Identifier: GPL-3.0
  * Vesktop, a desktop app aiming to give you a snappier Discord Experience
- * Copyright (c) 2023 Vendicated and Vencord contributors
+ * Copyright (c) 2025 Vendicated and Vesktop contributors
+ * SPDX-License-Identifier: GPL-3.0-or-later
  */
 
 import { findByCodeLazy } from "@vencord/types/webpack";
+import { Card } from "@vencord/types/webpack/common";
 import { keybindCallbacks } from "renderer";
 
 import { addPatch } from "./shared";
-import { Card } from "@vencord/types/webpack/common";
 const toShortcutString = findByCodeLazy('.MOUSE_BUTTON?"mouse".concat(');
 const actionReadableNames: { [key: string]: string } = {
     PUSH_TO_TALK: "Push To Talk",

From 89f593da51728a94e855d55f3951a0c8953e888b Mon Sep 17 00:00:00 2001
From: Tuxinal <24763016+tuxinal@users.noreply.github.com>
Date: Tue, 22 Apr 2025 09:53:19 +0330
Subject: [PATCH 26/31] Change the keybind settings UI on windows and x11 stop
 using discord's built in keybind store. keybinds are now stored in vesktop's
 local storage record shortcuts through venbind instead of electron

---
 package.json                                 |   2 +-
 pnpm-lock.yaml                               |  10 +-
 src/main/venbind.ts                          |   3 +
 src/preload/VesktopNative.ts                 |   1 +
 src/renderer/components/KeybindsSettings.tsx | 127 ++++++++++++++++
 src/renderer/index.ts                        |  22 +--
 src/renderer/keybinds.ts                     |  57 +++++++
 src/renderer/patches/keybinds.tsx            | 148 +++----------------
 src/renderer/settings.ts                     |   4 +
 src/shared/IpcEvents.ts                      |   1 +
 10 files changed, 224 insertions(+), 151 deletions(-)
 create mode 100644 src/renderer/components/KeybindsSettings.tsx
 create mode 100644 src/renderer/keybinds.ts

diff --git a/package.json b/package.json
index 4923aed4..1d022060 100644
--- a/package.json
+++ b/package.json
@@ -28,7 +28,7 @@
     "dependencies": {
         "arrpc": "github:OpenAsar/arrpc#2234e9c9111f4c42ebcc3aa6a2215bfd979eef77",
         "electron-updater": "^6.6.2",
-        "venbind": "^0.1.0"
+        "venbind": "^0.1.1"
     },
     "optionalDependencies": {
         "@vencord/venmic": "^6.1.0"
diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml
index bac35128..4ad632e9 100644
--- a/pnpm-lock.yaml
+++ b/pnpm-lock.yaml
@@ -20,8 +20,8 @@ importers:
         specifier: ^6.6.2
         version: 6.6.2
       venbind:
-        specifier: ^0.1.0
-        version: 0.1.0
+        specifier: ^0.1.1
+        version: 0.1.1
     devDependencies:
       '@fal-works/esbuild-plugin-global-externals':
         specifier: ^2.1.2
@@ -2762,8 +2762,8 @@ packages:
   util-deprecate@1.0.2:
     resolution: {integrity: sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==}
 
-  venbind@0.1.0:
-    resolution: {integrity: sha512-aI2Uc+IrCSG6GI/x5icIlJ2jESpUefZtzeqH+WYbGn6bhvWJblnjJ3ur3qmfWTeRCTG4SJ9jVnR5QRWyyx0f0g==}
+  venbind@0.1.1:
+    resolution: {integrity: sha512-WBKnvT90uxtknC6WKvw+2O1hG73vGaUN5HGFlguzFCfW+N3Nd7QBtwKoZvtky1X1bSCf1SA0/HXBozue64l04A==}
     cpu: [x64]
     os: [linux, win32]
 
@@ -6073,7 +6073,7 @@ snapshots:
 
   util-deprecate@1.0.2: {}
 
-  venbind@0.1.0: {}
+  venbind@0.1.1: {}
 
   verror@1.10.1:
     dependencies:
diff --git a/src/main/venbind.ts b/src/main/venbind.ts
index c631596e..cddf5bc4 100644
--- a/src/main/venbind.ts
+++ b/src/main/venbind.ts
@@ -73,3 +73,6 @@ handleSync(IpcEvents.KEYBIND_NEEDS_XDP, _ => {
 handle(IpcEvents.KEYBIND_SET_KEYBINDS, (_, keybinds: { id: string; name?: string; shortcut?: string }[]) => {
     venbind?.setKeybinds(keybinds);
 });
+handleSync(IpcEvents.KEYBIND_GET_CURRENT_SHORTCUT, _ => {
+    return venbind?.getCurrentShortcut();
+});
diff --git a/src/preload/VesktopNative.ts b/src/preload/VesktopNative.ts
index b2bba9c7..81b21c65 100644
--- a/src/preload/VesktopNative.ts
+++ b/src/preload/VesktopNative.ts
@@ -93,6 +93,7 @@ export const VesktopNative = {
                 name?: string;
             }[]
         ) => invoke<void>(IpcEvents.KEYBIND_SET_KEYBINDS, keybinds),
+        getCurrentShortcut: () => sendSync<string>(IpcEvents.KEYBIND_GET_CURRENT_SHORTCUT),
         needsXdp: () => sendSync<boolean>(IpcEvents.KEYBIND_NEEDS_XDP)
     }
 };
diff --git a/src/renderer/components/KeybindsSettings.tsx b/src/renderer/components/KeybindsSettings.tsx
new file mode 100644
index 00000000..4a171676
--- /dev/null
+++ b/src/renderer/components/KeybindsSettings.tsx
@@ -0,0 +1,127 @@
+/*
+ * Vesktop, a desktop app aiming to give you a snappier Discord Experience
+ * Copyright (c) 2025 Vendicated and Vesktop contributors
+ * SPDX-License-Identifier: GPL-3.0-or-later
+ */
+
+import { Flex } from "@vencord/types/components";
+import { Button, Card, Heading, Select, TextInput, useEffect, useRef, useState } from "@vencord/types/webpack/common";
+import { actionReadableNames, registerKeybinds, unregisterKeybinds } from "renderer/keybinds";
+import { State } from "renderer/settings";
+
+export function KeybindsSettingsPage() {
+    const [keybinds, setKeybinds] = useState(State.store.keybinds || []);
+    useEffect(() => {
+        unregisterKeybinds();
+        return () => {
+            State.store.keybinds = keybinds.filter(x => x.action !== "");
+            registerKeybinds();
+        };
+    }, []);
+    return (
+        <Flex flexDirection="column" style={{ gap: "2px" }}>
+            <Button
+                style={{
+                    alignSelf: "flex-end",
+                    marginBottom: "1em"
+                }}
+                onClick={() =>
+                    setKeybinds(keybinds => [
+                        ...keybinds,
+                        {
+                            action: "",
+                            shortcut: ""
+                        }
+                    ])
+                }
+            >
+                New Keybind
+            </Button>
+            {keybinds.map((x, i) => (
+                <KeybindCard action={x.action} index={i} setKeybinds={setKeybinds} shortcut={x.shortcut} />
+            ))}
+        </Flex>
+    );
+}
+function KeybindCard({ setKeybinds, index, action, shortcut }) {
+    const shortcutTextInput = useRef<HTMLInputElement>(null);
+    const [recording, setRecording] = useState(false);
+    useEffect(() => {
+        if (recording) shortcutTextInput.current?.focus();
+    }, [recording]);
+    return (
+        <Card
+            type={Card.Types.PRIMARY}
+            style={{
+                padding: "12px"
+            }}
+        >
+            <Flex flexDirection="column" style={{ gap: 0 }}>
+                <Button
+                    color={Button.Colors.RED}
+                    style={{
+                        borderRadius: "50%",
+                        width: "24px",
+                        height: "24px",
+                        backgroundImage: "url(/assets/cc9937ea92f932c3.svg)",
+                        backgroundPosition: "50% 50%",
+                        backgroundRepeat: "no-repeat",
+                        alignSelf: "flex-end"
+                    }}
+                    size={Button.Sizes.ICON}
+                    onClick={() => {
+                        setKeybinds(keybinds => keybinds.filter((_, i) => i !== index));
+                    }}
+                />
+                <Flex>
+                    <Flex flexDirection="column" style={{ flexGrow: 1 }}>
+                        <Heading variant="heading-md/semibold">Action</Heading>
+                        <Select
+                            options={Object.entries(actionReadableNames).map(a => ({
+                                value: a[0],
+                                label: a[1]
+                            }))}
+                            placeholder="Unassigned"
+                            select={v => {
+                                setKeybinds(keybinds => {
+                                    keybinds[index].action = v;
+                                    return [...keybinds];
+                                });
+                            }}
+                            isSelected={v => v === action}
+                            serialize={v => String(v)}
+                        />
+                    </Flex>
+                    <Flex flexDirection="column" style={{ flexGrow: 1 }}>
+                        <Heading variant="heading-md/semibold">Keybind</Heading>
+                        <Flex style={{ gap: 0 }} flexDirection="row">
+                            <div style={{ flexGrow: 2 }}>
+                                <TextInput
+                                    editable={recording}
+                                    placeholder="No keybind set"
+                                    value={shortcut}
+                                    inputRef={shortcutTextInput}
+                                    onBlur={() => setRecording(false)}
+                                    onKeyDown={() => {
+                                        setKeybinds(keybinds => {
+                                            keybinds[index].shortcut = VesktopNative.keybind.getCurrentShortcut();
+                                            return [...keybinds];
+                                        });
+                                    }}
+                                />
+                            </div>
+                            <Button
+                                size={Button.Sizes.LARGE}
+                                color={Button.Colors.TRANSPARENT}
+                                style={{ flexGrow: 1, width: "auto" }}
+                                onClick={() => setRecording(!recording)}
+                            >
+                                Edit Keybind
+                            </Button>
+                        </Flex>
+                    </Flex>
+                </Flex>
+            </Flex>
+        </Card>
+    );
+}
diff --git a/src/renderer/index.ts b/src/renderer/index.ts
index 80fced62..f9912ac3 100644
--- a/src/renderer/index.ts
+++ b/src/renderer/index.ts
@@ -10,8 +10,9 @@ import "./appBadge";
 import "./patches";
 import "./fixes";
 import "./arrpc";
-
+import "./keybinds";
 export * as Components from "./components";
+export { triggerKeybind } from "./keybinds";
 
 import SettingsUi from "./components/settings/Settings";
 import { VesktopLogger } from "./logger";
@@ -20,30 +21,11 @@ export { Settings };
 
 import type SettingsPlugin from "@vencord/types/plugins/_core/settings";
 
-export const keybindCallbacks: {
-    [id: string]: {
-        onTrigger: Function;
-        keyEvents: {
-            keyup: boolean;
-            keydown: boolean;
-        };
-    };
-} = {};
-
 VesktopLogger.log("read if cute :3");
 VesktopLogger.log("Vesktop v" + VesktopNative.app.getVersion());
 
 const customSettingsSections = (Vencord.Plugins.plugins.Settings as any as typeof SettingsPlugin).customSections;
 
-export async function triggerKeybind(id: string, keyup: boolean) {
-    var cb = keybindCallbacks[id];
-    if (cb.keyEvents.keyup && keyup) {
-        cb.onTrigger(false);
-    } else if (cb.keyEvents.keydown && !keyup) {
-        cb.onTrigger(true);
-    }
-}
-
 customSettingsSections.push(() => ({
     section: "Vesktop",
     label: "Vesktop Settings",
diff --git a/src/renderer/keybinds.ts b/src/renderer/keybinds.ts
new file mode 100644
index 00000000..f5c9989b
--- /dev/null
+++ b/src/renderer/keybinds.ts
@@ -0,0 +1,57 @@
+/*
+ * Vesktop, a desktop app aiming to give you a snappier Discord Experience
+ * Copyright (c) 2025 Vendicated and Vesktop contributors
+ * SPDX-License-Identifier: GPL-3.0-or-later
+ */
+
+import { State } from "./settings";
+
+export const actionReadableNames: { [key: string]: string } = {
+    PUSH_TO_TALK: "Push To Talk",
+    PUSH_TO_TALK_PRIORITY: "Push To Talk (Priority)",
+    PUSH_TO_MUTE: "Push To Mute",
+    TOGGLE_MUTE: "Toggle Mute",
+    TOGGLE_DEAFEN: "Toggle Deafen",
+    TOGGLE_VOICE_MODE: "Toggle Voice Activity Mode",
+    TOGGLE_STREAMER_MODE: "Toggle Streamer Mode",
+    TOGGLE_CAMERA: "Toggle Camera",
+    NAVIGATE_BACK: "Navigate Back",
+    NAVIGATE_FORWARD: "Navigate Forward",
+    DISCONNECT_FROM_VOICE_CHANNEL: "Disconnect From Voice Channel"
+};
+
+export const actionCallbacks: {
+    [action: string]: {
+        onTrigger: Function;
+        keyEvents: {
+            keyup: boolean;
+            keydown: boolean;
+        };
+    };
+} = {};
+
+export async function triggerKeybind(action: string, keyup: boolean) {
+    var cb = actionCallbacks[action];
+    if (cb.keyEvents.keyup && keyup) {
+        cb.onTrigger(false);
+    } else if (cb.keyEvents.keydown && !keyup) {
+        cb.onTrigger(true);
+    }
+}
+
+export async function registerKeybinds() {
+    if (VesktopNative.keybind.needsXdp()) return;
+    VesktopNative.keybind.setKeybinds(
+        State.store.keybinds?.map(x => ({
+            id: x.action,
+            shortcut: x.shortcut
+        })) || []
+    );
+}
+
+export async function unregisterKeybinds() {
+    if (VesktopNative.keybind.needsXdp()) return;
+    VesktopNative.keybind.setKeybinds([]);
+}
+
+registerKeybinds();
diff --git a/src/renderer/patches/keybinds.tsx b/src/renderer/patches/keybinds.tsx
index 46df4558..99ffcc28 100644
--- a/src/renderer/patches/keybinds.tsx
+++ b/src/renderer/patches/keybinds.tsx
@@ -4,26 +4,12 @@
  * SPDX-License-Identifier: GPL-3.0-or-later
  */
 
-import { findByCodeLazy } from "@vencord/types/webpack";
 import { Card } from "@vencord/types/webpack/common";
-import { keybindCallbacks } from "renderer";
+import { KeybindsSettingsPage } from "renderer/components/KeybindsSettings";
+import { actionCallbacks, actionReadableNames } from "renderer/keybinds";
 
 import { addPatch } from "./shared";
-const toShortcutString = findByCodeLazy('.MOUSE_BUTTON?"mouse".concat(');
-const actionReadableNames: { [key: string]: string } = {
-    PUSH_TO_TALK: "Push To Talk",
-    PUSH_TO_TALK_PRIORITY: "Push To Talk (Priority)",
-    PUSH_TO_MUTE: "Push To Mute",
-    TOGGLE_MUTE: "Toggle Mute",
-    TOGGLE_DEAFEN: "Toggle Deafen",
-    TOGGLE_VOICE_MODE: "Toggle Voice Activity Mode",
-    TOGGLE_STREAMER_MODE: "Toggle Streamer Mode",
-    TOGGLE_CAMERA: "Toggle Camera",
-    NAVIGATE_BACK: "Navigate Back",
-    NAVIGATE_FORWARD: "Navigate Forward",
-    DISCONNECT_FROM_VOICE_CHANNEL: "Disconnect From Voice Channel"
-};
-const keybinds: { id: string; name?: string; shortcut?: string }[] = [];
+
 addPatch({
     patches: [
         {
@@ -31,96 +17,24 @@ addPatch({
             replacement: [
                 {
                     // eslint-disable-next-line no-useless-escape
-                    match: /(\i\.isPlatformEmbedded\?)(.+renderEmpty\(\i\)\]\}\)\]\}\))/,
-                    replace: "$1$self.xdpWarning($2)"
-                },
-                {
-                    // eslint-disable-next-line no-useless-escape
-                    match: /\i\.isPlatformEmbedded/g,
-                    replace: "true"
-                },
-                {
-                    // eslint-disable-next-line no-useless-escape
-                    match: /\(0,\i\.isDesktop\)\(\)/g,
-                    replace: "true"
-                },
-                {
-                    // eslint-disable-next-line no-useless-escape
-                    match: /\.keybindGroup,\i.card\),children:\[/g,
-                    replace: "$&$self.keybindIdComponent(this.props.keybind.id),"
+                    match: /\i\.isPlatformEmbedded\?.+renderEmpty\(\i\)\]\}\)\]\}\)/,
+                    replace: "true?[$self.keybindsPage()]"
                 }
             ]
         },
         {
             find: "[kb store] KeybindStore",
             replacement: [
-                {
-                    // eslint-disable-next-line no-useless-escape
-                    match: /inputEventRegister\((parseInt\(\i\),\i,\i,\i)\);else\{/,
-                    replace: "$&$self.registerKeybind($1);return;"
-                },
-                {
-                    // eslint-disable-next-line no-useless-escape
-                    match: /inputEventUnregister\((parseInt\(\i,10\))\);else/,
-                    replace: "$&{$self.unregisterKeybind($1);return;}"
-                },
-                {
-                    // eslint-disable-next-line no-useless-escape
-                    match: /:\(\i\.\i\.disable\(\)(.*?)\i\(\)\)/,
-                    replace: "$&;$self.setKeybinds();" // for when the user opens and closes the keybinds settings page
-                },
                 {
                     // eslint-disable-next-line no-useless-escape
                     match: /let{keybinds:(\i)}=\i;/,
-                    replace: "$&$self.xdpRegisterKeybinds($1);"
-                },
-                {
-                    // eslint-disable-next-line no-useless-escape
-                    match: /location:"KeybindsStore"},\q\)\)/, // same function as above (where xdpRegisterKeybinds is called)
-                    replace: "$&;$self.setKeybinds();" // for when discord is opened
+                    replace: "$&$self.addActions($1);"
                 }
             ]
         }
     ],
 
-    registerKeybind: function (
-        id: number,
-        shortcut,
-        callback: Function,
-        options: {
-            keyup: boolean;
-            keydown: boolean;
-        }
-    ) {
-        if (VesktopNative.keybind.needsXdp()) return;
-
-        var idStr = id.toString();
-        keybindCallbacks[idStr] = {
-            onTrigger: callback,
-            keyEvents: options
-        };
-
-        keybinds.push({
-            id: idStr,
-            shortcut: toShortcutString(shortcut)
-        });
-    },
-    unregisterKeybind: function (id: number) {
-        if (VesktopNative.keybind.needsXdp()) return;
-
-        var idStr = id.toString();
-        delete keybindCallbacks[idStr];
-        keybinds.splice(
-            keybinds.findIndex(x => x.id === idStr),
-            1
-        );
-    },
-    setKeybinds: function () {
-        if (VesktopNative.keybind.needsXdp()) return;
-        VesktopNative.keybind.setKeybinds(keybinds);
-    },
-    // only used for wayland/xdg-desktop-portal globalshortcuts
-    xdpRegisterKeybinds: function (allActions: {
+    addActions: function (allActions: {
         [action: string]: {
             onTrigger: Function;
             keyEvents: {
@@ -129,12 +43,10 @@ addPatch({
             };
         };
     }) {
-        if (!VesktopNative.keybind.needsXdp()) return;
         Object.entries(allActions).forEach(([key, val]) => {
-            if (actionReadableNames[key] == null) {
-                return;
-            }
-            keybindCallbacks[key] = {
+            if (actionReadableNames[key] == null) return;
+
+            actionCallbacks[key] = {
                 onTrigger: (keyState: boolean) =>
                     val.onTrigger(keyState, {
                         // switch to channel also requires some extra properties that would have to be supplied here
@@ -142,33 +54,17 @@ addPatch({
                     }),
                 keyEvents: val.keyEvents
             };
-            keybinds.push({ id: key, name: actionReadableNames[key] || key });
         });
-        VesktopNative.keybind.setKeybinds(keybinds);
-    },
-    keybindIdComponent: function (id) {
-        return <span style={{ color: "var(--text-muted)" }}>ID: {id}</span>;
-    },
-    xdpWarning: function (keybindsList) {
-        if (!VesktopNative.keybind.needsXdp()) {
-            return (
-                <>
-                    {keybindsList}
-                    <Card
-                        style={{
-                            padding: "1rem",
-                            color: "var(--text-normal)",
-                            backgroundColor: "var(--info-warning-background)",
-                            border: "1px solid var(--info-warning-foreground)"
-                        }}
-                    >
-                        The ID specified for each keybind is for use in the keybind CLI. You don't have to use this for
-                        configuring keybinds. This is just in case you want to trigger keybinds from external programs.
-                    </Card>
-                </>
+        if (VesktopNative.keybind.needsXdp())
+            VesktopNative.keybind.setKeybinds(
+                Object.entries(actionReadableNames).map(a => ({
+                    id: a[0],
+                    name: a[1]
+                }))
             );
-        }
-        return (
+    },
+    keybindsPage: function () {
+        return VesktopNative.keybind.needsXdp() ? (
             <Card
                 style={{
                     padding: "1rem",
@@ -187,13 +83,15 @@ addPatch({
                 </p>
                 <p>List of valid keybind IDs to use with the CLI:</p>
                 <ul>
-                    {keybinds.map(keybind => (
+                    {Object.entries(actionReadableNames).map(a => (
                         <li>
-                            {keybind.id}: {keybind.name}
+                            {a[0]}: {a[1]}
                         </li>
                     ))}
                 </ul>
             </Card>
+        ) : (
+            <KeybindsSettingsPage />
         );
     }
 });
diff --git a/src/renderer/settings.ts b/src/renderer/settings.ts
index 0a5ba806..e62e1182 100644
--- a/src/renderer/settings.ts
+++ b/src/renderer/settings.ts
@@ -37,6 +37,10 @@ interface TState {
         resolution: string;
         frameRate: string;
     };
+    keybinds?: {
+        action: string;
+        shortcut: string;
+    }[];
 }
 
 const stateKey = "VesktopState";
diff --git a/src/shared/IpcEvents.ts b/src/shared/IpcEvents.ts
index 69f046a2..67a5877b 100644
--- a/src/shared/IpcEvents.ts
+++ b/src/shared/IpcEvents.ts
@@ -58,6 +58,7 @@ export const enum IpcEvents {
     IPC_COMMAND = "VCD_IPC_COMMAND",
 
     KEYBIND_SET_KEYBINDS = "VCD_KEYBIND_SET_KEYBINDS",
+    KEYBIND_GET_CURRENT_SHORTCUT = "VCD_KEYBIND_GET_CURRENT_SHORTCUT",
     KEYBIND_NEEDS_XDP = "VCD_KEYBIND_NEEDS_XDP"
 }
 

From a4c33d7ec98e53433f437e230978c4d563b6dcaf Mon Sep 17 00:00:00 2001
From: Tuxinal <24763016+tuxinal@users.noreply.github.com>
Date: Wed, 30 Apr 2025 14:44:00 +0330
Subject: [PATCH 27/31] update venbind. add linux and windows arm64 support
 change some styles for keybind settings ui

---
 package.json                                 |  2 +-
 pnpm-lock.yaml                               | 12 ++++++------
 scripts/build/build.mts                      |  2 +-
 src/main/venbind.ts                          |  6 +++---
 src/renderer/components/KeybindsSettings.tsx | 19 +++++++------------
 src/renderer/components/keybindSettings.css  | 15 +++++++++++++++
 6 files changed, 33 insertions(+), 23 deletions(-)
 create mode 100644 src/renderer/components/keybindSettings.css

diff --git a/package.json b/package.json
index 1d022060..02854d26 100644
--- a/package.json
+++ b/package.json
@@ -28,7 +28,7 @@
     "dependencies": {
         "arrpc": "github:OpenAsar/arrpc#2234e9c9111f4c42ebcc3aa6a2215bfd979eef77",
         "electron-updater": "^6.6.2",
-        "venbind": "^0.1.1"
+        "venbind": "^0.1.4"
     },
     "optionalDependencies": {
         "@vencord/venmic": "^6.1.0"
diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml
index 4ad632e9..a3c17ada 100644
--- a/pnpm-lock.yaml
+++ b/pnpm-lock.yaml
@@ -20,8 +20,8 @@ importers:
         specifier: ^6.6.2
         version: 6.6.2
       venbind:
-        specifier: ^0.1.1
-        version: 0.1.1
+        specifier: ^0.1.4
+        version: 0.1.4
     devDependencies:
       '@fal-works/esbuild-plugin-global-externals':
         specifier: ^2.1.2
@@ -2762,9 +2762,9 @@ packages:
   util-deprecate@1.0.2:
     resolution: {integrity: sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==}
 
-  venbind@0.1.1:
-    resolution: {integrity: sha512-WBKnvT90uxtknC6WKvw+2O1hG73vGaUN5HGFlguzFCfW+N3Nd7QBtwKoZvtky1X1bSCf1SA0/HXBozue64l04A==}
-    cpu: [x64]
+  venbind@0.1.4:
+    resolution: {integrity: sha512-giNqfskQfbt36vczr6kS5FjfnD4A8BItSTLHV/h8KOdymlS3dA+iHLwY6e8h7LIWm02KAzFUS/j4/yikGV5KdA==}
+    cpu: [x64, arm64]
     os: [linux, win32]
 
   verror@1.10.1:
@@ -6073,7 +6073,7 @@ snapshots:
 
   util-deprecate@1.0.2: {}
 
-  venbind@0.1.1: {}
+  venbind@0.1.4: {}
 
   verror@1.10.1:
     dependencies:
diff --git a/scripts/build/build.mts b/scripts/build/build.mts
index ffea7e9e..2c9f85fd 100644
--- a/scripts/build/build.mts
+++ b/scripts/build/build.mts
@@ -91,7 +91,7 @@ await Promise.all([
         inject: ["./scripts/build/injectReact.mjs"],
         jsxFactory: "VencordCreateElement",
         jsxFragment: "VencordFragment",
-        external: ["@vencord/types/*"],
+        external: ["@vencord/types/*", "/assets/*"],
         plugins: [vencordDep],
         footer: { js: "//# sourceURL=VCDRenderer" }
     })
diff --git a/src/main/venbind.ts b/src/main/venbind.ts
index cddf5bc4..145bfc16 100644
--- a/src/main/venbind.ts
+++ b/src/main/venbind.ts
@@ -36,9 +36,9 @@ export function obtainVenbind() {
             case "x64":
                 arch = "x86_64";
                 break;
-            // case "arm64":
-            //     arch = "aarch64";
-            //     break;
+            case "arm64":
+                arch = "aarch64";
+                break;
             default:
                 return null;
         }
diff --git a/src/renderer/components/KeybindsSettings.tsx b/src/renderer/components/KeybindsSettings.tsx
index 4a171676..9c532627 100644
--- a/src/renderer/components/KeybindsSettings.tsx
+++ b/src/renderer/components/KeybindsSettings.tsx
@@ -4,6 +4,8 @@
  * SPDX-License-Identifier: GPL-3.0-or-later
  */
 
+import "./keybindSettings.css";
+
 import { Flex } from "@vencord/types/components";
 import { Button, Card, Heading, Select, TextInput, useEffect, useRef, useState } from "@vencord/types/webpack/common";
 import { actionReadableNames, registerKeybinds, unregisterKeybinds } from "renderer/keybinds";
@@ -19,7 +21,7 @@ export function KeybindsSettingsPage() {
         };
     }, []);
     return (
-        <Flex flexDirection="column" style={{ gap: "2px" }}>
+        <Flex flexDirection="column" style={{ gap: "1em" }}>
             <Button
                 style={{
                     alignSelf: "flex-end",
@@ -53,21 +55,14 @@ function KeybindCard({ setKeybinds, index, action, shortcut }) {
         <Card
             type={Card.Types.PRIMARY}
             style={{
-                padding: "12px"
+                padding: "1em"
             }}
+            className="vcd-keybind-card"
         >
             <Flex flexDirection="column" style={{ gap: 0 }}>
                 <Button
-                    color={Button.Colors.RED}
-                    style={{
-                        borderRadius: "50%",
-                        width: "24px",
-                        height: "24px",
-                        backgroundImage: "url(/assets/cc9937ea92f932c3.svg)",
-                        backgroundPosition: "50% 50%",
-                        backgroundRepeat: "no-repeat",
-                        alignSelf: "flex-end"
-                    }}
+                    color={Button.Colors.CUSTOM}
+                    className="vcd-keybind-delete-button"
                     size={Button.Sizes.ICON}
                     onClick={() => {
                         setKeybinds(keybinds => keybinds.filter((_, i) => i !== index));
diff --git a/src/renderer/components/keybindSettings.css b/src/renderer/components/keybindSettings.css
new file mode 100644
index 00000000..1c3716ab
--- /dev/null
+++ b/src/renderer/components/keybindSettings.css
@@ -0,0 +1,15 @@
+.vcd-keybind-delete-button {
+    border-radius: 50%;
+    width: 24px;
+    height: 24px;
+    background: url("/assets/cc9937ea92f932c3.svg") center no-repeat var(--button-danger-background);
+    position: absolute;
+    right: -12px;
+    top: -12px;
+    opacity: 0;
+    transition: opacity 0.1s ease-in-out;
+}
+
+.vcd-keybind-card:hover .vcd-keybind-delete-button {
+    opacity: 1;
+}

From 008ae9f64aff4d9b7ea0aabc2ccd59c46165617e Mon Sep 17 00:00:00 2001
From: Tuxinal <24763016+tuxinal@users.noreply.github.com>
Date: Thu, 8 May 2025 00:25:13 +0330
Subject: [PATCH 28/31] Fix keybinds not saving

---
 src/renderer/components/KeybindsSettings.tsx | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/src/renderer/components/KeybindsSettings.tsx b/src/renderer/components/KeybindsSettings.tsx
index 9c532627..b8d3bc31 100644
--- a/src/renderer/components/KeybindsSettings.tsx
+++ b/src/renderer/components/KeybindsSettings.tsx
@@ -13,13 +13,17 @@ import { State } from "renderer/settings";
 
 export function KeybindsSettingsPage() {
     const [keybinds, setKeybinds] = useState(State.store.keybinds || []);
+    const keybindsRef = useRef<typeof State.store.keybinds>();
     useEffect(() => {
         unregisterKeybinds();
         return () => {
-            State.store.keybinds = keybinds.filter(x => x.action !== "");
+            State.store.keybinds = keybindsRef.current?.filter(x => x.action !== "");
             registerKeybinds();
         };
     }, []);
+    useEffect(() => {
+        keybindsRef.current = keybinds;
+    }, [keybinds]);
     return (
         <Flex flexDirection="column" style={{ gap: "1em" }}>
             <Button

From a4fa490a75f7bf96e18f776261964e533b85b481 Mon Sep 17 00:00:00 2001
From: Tuxinal <24763016+tuxinal@users.noreply.github.com>
Date: Tue, 13 May 2025 13:31:01 +0330
Subject: [PATCH 29/31] update venbind actually load all the arm preloads

---
 package.json            |  2 +-
 pnpm-lock.yaml          | 10 +++++-----
 scripts/build/build.mts | 41 ++++++++++++++++++++++++++--------------
 src/main/venbind.ts     | 42 +++++------------------------------------
 4 files changed, 38 insertions(+), 57 deletions(-)

diff --git a/package.json b/package.json
index 93db997d..3201b545 100644
--- a/package.json
+++ b/package.json
@@ -28,7 +28,7 @@
     "dependencies": {
         "arrpc": "github:OpenAsar/arrpc#2234e9c9111f4c42ebcc3aa6a2215bfd979eef77",
         "electron-updater": "^6.6.2",
-        "venbind": "^0.1.4"
+        "venbind": "0.1.6"
     },
     "optionalDependencies": {
         "@vencord/venmic": "^6.1.0"
diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml
index bf70747d..4d1a8915 100644
--- a/pnpm-lock.yaml
+++ b/pnpm-lock.yaml
@@ -20,8 +20,8 @@ importers:
         specifier: ^6.6.2
         version: 6.6.2
       venbind:
-        specifier: ^0.1.4
-        version: 0.1.4
+        specifier: 0.1.6
+        version: 0.1.6
     devDependencies:
       '@fal-works/esbuild-plugin-global-externals':
         specifier: ^2.1.2
@@ -2762,8 +2762,8 @@ packages:
   util-deprecate@1.0.2:
     resolution: {integrity: sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==}
 
-  venbind@0.1.4:
-    resolution: {integrity: sha512-giNqfskQfbt36vczr6kS5FjfnD4A8BItSTLHV/h8KOdymlS3dA+iHLwY6e8h7LIWm02KAzFUS/j4/yikGV5KdA==}
+  venbind@0.1.6:
+    resolution: {integrity: sha512-6l7q6e7teEpZgFvL2ztUnb6q37GO2Iv6VPaUNpOGK6GsP5FpqaxgRGB9x/4PZnZAcjXdCOVwdHPuTPITVb+O1w==}
     cpu: [x64, arm64]
     os: [linux, win32]
 
@@ -6073,7 +6073,7 @@ snapshots:
 
   util-deprecate@1.0.2: {}
 
-  venbind@0.1.4: {}
+  venbind@0.1.6: {}
 
   verror@1.10.1:
     dependencies:
diff --git a/scripts/build/build.mts b/scripts/build/build.mts
index 0af9fe51..1fb2bfad 100644
--- a/scripts/build/build.mts
+++ b/scripts/build/build.mts
@@ -50,21 +50,34 @@ async function copyVenmic() {
 }
 
 async function copyVenbind() {
-    if (process.platform === "win32") {
-        return Promise.all([
-            copyFile(
-                "./node_modules/venbind/prebuilds/windows-x86_64/venbind-windows-x86_64.node",
-                "./static/dist/venbind-windows-x86_64.node"
-            )
-        ]).catch(() => console.warn("Failed to copy venbind. Building without venbind support"));
+    switch (process.platform) {
+        case "win32":
+            return Promise.all([
+                copyFile(
+                    "./node_modules/venbind/prebuilds/windows-x86_64/venbind-windows-x86_64.node",
+                    "./static/dist/venbind-win32-x64.node"
+                ),
+                copyFile(
+                    "./node_modules/venbind/prebuilds/windows-aarch64/venbind-windows-aarch64.node",
+                    "./static/dist/venbind-win32-arm64.node"
+                )
+            ]).catch(() => console.warn("Failed to copy venbind. Building without venbind support"));
+        case "linux":
+            return Promise.all([
+                copyFile(
+                    "./node_modules/venbind/prebuilds/linux-x86_64/venbind-linux-x86_64.node",
+                    "./static/dist/venbind-linux-x64.node"
+                ),
+                copyFile(
+                    "./node_modules/venbind/prebuilds/linux-aarch64/venbind-linux-aarch64.node",
+                    "./static/dist/venbind-linux-arm64.node"
+                )
+            ]).catch(() => console.warn("Failed to copy venbind. Building without venbind support"));
+        default:
+            return Promise.reject().catch(() =>
+                console.warn("Venbind doesn't support this platform. Building without venbind support")
+            );
     }
-
-    return Promise.all([
-        copyFile(
-            "./node_modules/venbind/prebuilds/linux-x86_64/venbind-linux-x86_64.node",
-            "./static/dist/venbind-linux-x86_64.node"
-        )
-    ]).catch(() => console.warn("Failed to copy venbind. Building without venbind support"));
 }
 
 await Promise.all([
diff --git a/src/main/venbind.ts b/src/main/venbind.ts
index 145bfc16..e09b9b4d 100644
--- a/src/main/venbind.ts
+++ b/src/main/venbind.ts
@@ -11,41 +11,12 @@ import type { Venbind as VenbindType } from "venbind";
 
 import { mainWin } from "./mainWindow";
 import { handle, handleSync } from "./utils/ipcWrappers";
+import { existsSync } from "fs";
 
 let venbind: VenbindType | null = null;
 export function obtainVenbind() {
-    if (venbind == null) {
-        // TODO?: make binary outputs consistant with node's apis
-        let os: string;
-        let arch: string;
-
-        switch (process.platform) {
-            case "linux":
-                os = "linux";
-                break;
-            case "win32":
-                os = "windows";
-                break;
-            // case "darwin":
-            //     os = "darwin";
-            //     break;
-            default:
-                return null;
-        }
-        switch (process.arch) {
-            case "x64":
-                arch = "x86_64";
-                break;
-            case "arm64":
-                arch = "aarch64";
-                break;
-            default:
-                return null;
-        }
-
-        venbind = require(join(STATIC_DIR, `dist/venbind-${os}-${arch}.node`));
-    }
-    return venbind;
+    var path = join(STATIC_DIR, `dist/venbind-${process.platform}-${process.arch}.node`);
+    if (existsSync(path)) venbind = require(path);
 }
 
 export function startVenbind() {
@@ -60,15 +31,12 @@ export function startVenbind() {
 }
 
 handleSync(IpcEvents.KEYBIND_NEEDS_XDP, _ => {
-    if (
+    return (
         process.platform === "linux" &&
         (process.env.XDG_SESSION_TYPE === "wayland" ||
             !!process.env.WAYLAND_DISPLAY ||
             !!process.env.VENBIND_USE_XDG_PORTAL)
-    ) {
-        return true;
-    }
-    return false;
+    );
 });
 handle(IpcEvents.KEYBIND_SET_KEYBINDS, (_, keybinds: { id: string; name?: string; shortcut?: string }[]) => {
     venbind?.setKeybinds(keybinds);

From efee4f76919e288c964ae9f4f2d2a22208d6b780 Mon Sep 17 00:00:00 2001
From: Tuxinal <24763016+tuxinal@users.noreply.github.com>
Date: Tue, 13 May 2025 13:38:12 +0330
Subject: [PATCH 30/31] lint

---
 src/main/venbind.ts | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/main/venbind.ts b/src/main/venbind.ts
index e09b9b4d..1fd3649a 100644
--- a/src/main/venbind.ts
+++ b/src/main/venbind.ts
@@ -4,6 +4,7 @@
  * SPDX-License-Identifier: GPL-3.0-or-later
  */
 
+import { existsSync } from "fs";
 import { join } from "path";
 import { IpcEvents } from "shared/IpcEvents";
 import { STATIC_DIR } from "shared/paths";
@@ -11,7 +12,6 @@ import type { Venbind as VenbindType } from "venbind";
 
 import { mainWin } from "./mainWindow";
 import { handle, handleSync } from "./utils/ipcWrappers";
-import { existsSync } from "fs";
 
 let venbind: VenbindType | null = null;
 export function obtainVenbind() {

From 13199c22b869806afef924ed7bb0266c13062bb0 Mon Sep 17 00:00:00 2001
From: Tuxinal <24763016+tuxinal@users.noreply.github.com>
Date: Tue, 27 May 2025 21:48:23 +0330
Subject: [PATCH 31/31] update venbind idk why but pnpm is _really_ insistent
 on updating es-abstract too for some reason

---
 package.json   |  2 +-
 pnpm-lock.yaml | 34 +++++++++++++++++-----------------
 2 files changed, 18 insertions(+), 18 deletions(-)

diff --git a/package.json b/package.json
index 322f1371..e60c83c1 100644
--- a/package.json
+++ b/package.json
@@ -28,7 +28,7 @@
     "dependencies": {
         "arrpc": "github:OpenAsar/arrpc#2234e9c9111f4c42ebcc3aa6a2215bfd979eef77",
         "electron-updater": "^6.6.2",
-        "venbind": "0.1.6"
+        "venbind": "0.1.7"
     },
     "optionalDependencies": {
         "@vencord/venmic": "^6.1.0"
diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml
index dbeacb99..0497eaf5 100644
--- a/pnpm-lock.yaml
+++ b/pnpm-lock.yaml
@@ -20,8 +20,8 @@ importers:
         specifier: ^6.6.2
         version: 6.6.2
       venbind:
-        specifier: 0.1.6
-        version: 0.1.6
+        specifier: 0.1.7
+        version: 0.1.7
     devDependencies:
       '@fal-works/esbuild-plugin-global-externals':
         specifier: ^2.1.2
@@ -1147,8 +1147,8 @@ packages:
   err-code@2.0.3:
     resolution: {integrity: sha512-2bmlRpNKBxT/CRmPOlyISQpNj+qSeYvcym/uT0Jx2bMOlKLtSy1ZmLuVxSEKKyor/N5yhvp/ZiG1oE3DEYMSFA==}
 
-  es-abstract@1.23.9:
-    resolution: {integrity: sha512-py07lI0wjxAC/DcfK1S6G7iANonniZwTISvdPzk9hzeH0IZIshbuuFxLIU96OyF89Yb9hiqWn8M/bY83KY5vzA==}
+  es-abstract@1.23.10:
+    resolution: {integrity: sha512-MtUbM072wlJNyeYAe0mhzrD+M6DIJa96CZAOBBrhDbgKnB4MApIKefcyAB1eOdYn8cUNZgvwBvEzdoAYsxgEIw==}
     engines: {node: '>= 0.4'}
 
   es-define-property@1.0.1:
@@ -2815,8 +2815,8 @@ packages:
   util-deprecate@1.0.2:
     resolution: {integrity: sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==}
 
-  venbind@0.1.6:
-    resolution: {integrity: sha512-6l7q6e7teEpZgFvL2ztUnb6q37GO2Iv6VPaUNpOGK6GsP5FpqaxgRGB9x/4PZnZAcjXdCOVwdHPuTPITVb+O1w==}
+  venbind@0.1.7:
+    resolution: {integrity: sha512-NuKrPYYd7NfMjcmY0xF6ltB/Lka2dV3ZhgFykTgPRlP3qSWmGbaOAmXyp1qPtDoVNAzu7BZkyNXaUqnveuB0tA==}
     cpu: [x64, arm64]
     os: [linux, win32]
 
@@ -3647,7 +3647,7 @@ snapshots:
     dependencies:
       call-bind: 1.0.8
       define-properties: 1.2.1
-      es-abstract: 1.23.9
+      es-abstract: 1.23.10
       es-object-atoms: 1.1.1
       get-intrinsic: 1.3.0
       is-string: 1.1.1
@@ -3659,7 +3659,7 @@ snapshots:
       call-bind: 1.0.8
       call-bound: 1.0.4
       define-properties: 1.2.1
-      es-abstract: 1.23.9
+      es-abstract: 1.23.10
       es-errors: 1.3.0
       es-object-atoms: 1.1.1
       es-shim-unscopables: 1.1.0
@@ -3668,14 +3668,14 @@ snapshots:
     dependencies:
       call-bind: 1.0.8
       define-properties: 1.2.1
-      es-abstract: 1.23.9
+      es-abstract: 1.23.10
       es-shim-unscopables: 1.1.0
 
   array.prototype.flatmap@1.3.3:
     dependencies:
       call-bind: 1.0.8
       define-properties: 1.2.1
-      es-abstract: 1.23.9
+      es-abstract: 1.23.10
       es-shim-unscopables: 1.1.0
 
   arraybuffer.prototype.slice@1.0.4:
@@ -3683,7 +3683,7 @@ snapshots:
       array-buffer-byte-length: 1.0.2
       call-bind: 1.0.8
       define-properties: 1.2.1
-      es-abstract: 1.23.9
+      es-abstract: 1.23.10
       es-errors: 1.3.0
       get-intrinsic: 1.3.0
       is-array-buffer: 3.0.5
@@ -4268,7 +4268,7 @@ snapshots:
 
   err-code@2.0.3: {}
 
-  es-abstract@1.23.9:
+  es-abstract@1.23.10:
     dependencies:
       array-buffer-byte-length: 1.0.2
       arraybuffer.prototype.slice: 1.0.4
@@ -5464,14 +5464,14 @@ snapshots:
     dependencies:
       call-bind: 1.0.8
       define-properties: 1.2.1
-      es-abstract: 1.23.9
+      es-abstract: 1.23.10
       es-object-atoms: 1.1.1
 
   object.groupby@1.0.3:
     dependencies:
       call-bind: 1.0.8
       define-properties: 1.2.1
-      es-abstract: 1.23.9
+      es-abstract: 1.23.10
 
   object.pick@1.3.0:
     dependencies:
@@ -5650,7 +5650,7 @@ snapshots:
     dependencies:
       call-bind: 1.0.8
       define-properties: 1.2.1
-      es-abstract: 1.23.9
+      es-abstract: 1.23.10
       es-errors: 1.3.0
       es-object-atoms: 1.1.1
       get-intrinsic: 1.3.0
@@ -5946,7 +5946,7 @@ snapshots:
       call-bound: 1.0.4
       define-data-property: 1.1.4
       define-properties: 1.2.1
-      es-abstract: 1.23.9
+      es-abstract: 1.23.10
       es-object-atoms: 1.1.1
       has-property-descriptors: 1.0.2
 
@@ -6178,7 +6178,7 @@ snapshots:
 
   util-deprecate@1.0.2: {}
 
-  venbind@0.1.6: {}
+  venbind@0.1.7: {}
 
   verror@1.10.1:
     dependencies:
