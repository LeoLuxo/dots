diff --git a/src/Vencord.ts b/src/Vencord.ts
index c4c6d470..4a969597 100644
--- a/src/Vencord.ts
+++ b/src/Vencord.ts
@@ -91,36 +91,6 @@ async function init() {
 
     syncSettings();
 
-    if (!IS_WEB && !IS_UPDATER_DISABLED) {
-        try {
-            const isOutdated = await checkForUpdates();
-            if (!isOutdated) return;
-
-            if (Settings.autoUpdate) {
-                await update();
-                if (Settings.autoUpdateNotification)
-                    setTimeout(() => showNotification({
-                        title: "Vencord has been updated!",
-                        body: "Click here to restart",
-                        permanent: true,
-                        noPersist: true,
-                        onClick: relaunch
-                    }), 10_000);
-                return;
-            }
-
-            setTimeout(() => showNotification({
-                title: "A Vencord update is available!",
-                body: "Click here to view the update",
-                permanent: true,
-                noPersist: true,
-                onClick: openUpdaterModal!
-            }), 10_000);
-        } catch (err) {
-            UpdateLogger.error("Failed to check for updates", err);
-        }
-    }
-
     if (IS_DEV) {
         const pendingPatches = patches.filter(p => !p.all && p.predicate?.() !== false);
         if (pendingPatches.length)
diff --git a/src/utils/updater.ts b/src/utils/updater.ts
index f99c6ca1..d432f988 100644
--- a/src/utils/updater.ts
+++ b/src/utils/updater.ts
@@ -38,6 +38,8 @@ async function Unwrap<T>(p: Promise<IpcRes<T>>) {
 }
 
 export async function checkForUpdates() {
+    return (isOutdated = false);
+
     changes = await Unwrap(VencordNative.updater.getUpdates());
     if (changes.some(c => c.hash === gitHash)) {
         isNewer = true;
@@ -63,6 +65,8 @@ export async function update() {
 export const getRepo = () => Unwrap(VencordNative.updater.getRepo());
 
 export async function maybePromptToUpdate(confirmMessage: string, checkForDev = false) {
+    return;
+
     if (IS_WEB || IS_UPDATER_DISABLED) return;
     if (checkForDev && IS_DEV) return;
 
