{
	// Place your snippets for nix here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Home-manager config": {
		"prefix": "home-manager",
		"body": [
			"home-manager.users.\\${user} = {",
			"$0",
			"};"
		]
	},
	"Home-manager packages": {
		"prefix": "home.packages",
		"body": [
			"home.packages = with pkgs; [",
			"$0",
			"];"
		]
	},
	"NixOS module": {
		"prefix": "module",
		"body": [
			"{ cfg, lib, extraLib, pkgs, constants, ... }:\n\nlet\n  inherit (lib) modules options types;\n  inherit (extraLib) mkEnable;\nin\n{\n  options = {\n    enable = mkEnable;\n  };\n\n  config = modules.mkIf cfg.enable {\n    $0\n  };\n}\n"
		]
	},
	"NullOr option": {
		"prefix": "nullOr",
		"body": [
			"options.mkOption { type = types.nullOr types.$1; default = null; };"
		]
	},
}