{
	// Place your snippets for rust here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Allow Dead Code": {
		"prefix": "dead_code",
		"body": [
			"#[allow(dead_code)]"
		],
		"description": "Insert allow(dead_code) attribute"
	},
	"Skip rustfmt": {
		"prefix": "fmt_skip",
		"body": [
			"#[rustfmt::skip]"
		],
		"description": "Insert rustfmt::skip attribute"
	},
	"Doc attribute": {
		"prefix": "doc",
		"body": [
			"#[doc = \"$0\"]"
		],
		"description": "Insert doc attribute"
	},
	"Needs docs": {
		"prefix": "needs_docs",
		"body": [
			"#![allow(missing_docs)]\n#![allow(clippy::missing_docs_in_private_items)]\n\/\/ TODO! DOCS\n\/\/ This file is work in progress, so suppress the doc warnings until it is sufficiently stable.\n\n\n"
		],
		"description": "Insert allow missing_docs and a TODO comment"
	},
	"Derive Display": {
		"prefix": "drv_display",
		"body": [
			"#[derive(Display)]\n#[display(\"{}\")]"
		],
	},
	"Derive From": {
		"prefix": "drv_from",
		"body": [
			"#[derive(From)]\n#[from(forward)]"
		],
	},
	"Derive new": {
		"prefix": [
			"new"
		],
		"body": [
			"#[derive(new)]\n#[new(default)]"
		],
	}
	// "Better derive": {
	// 	"prefix": "drv**",
	// 	"body": [
	// 		"#[derive(Copy, Clone, Debug, Default, PartialEq, Eq, PartialOrd, Ord, Hash)]"
	// 	],
	// }
}